diff --git a/__pycache__/parsetab.cpython-311.pyc b/__pycache__/parsetab.cpython-311.pyc
index b0cec32..606ae8c 100644
Binary files a/__pycache__/parsetab.cpython-311.pyc and b/__pycache__/parsetab.cpython-311.pyc differ
diff --git a/calcMulrilignesVersAST.py b/calcMulrilignesVersAST.py
index 6bbd961..01cbafc 100644
--- a/calcMulrilignesVersAST.py
+++ b/calcMulrilignesVersAST.py
@@ -18,7 +18,8 @@ reserved = {
     'else' : 'ELSE',
     'elseif' : 'ELSEIF',
     'for' : 'FOR',
-    'to' : 'TO'
+    'to' : 'TO',
+    'while' : 'WHILE'
 }
 
 ############################## Tokens #############################
@@ -27,7 +28,7 @@ tokens = [
     'NAME','NUMBER',
     'PLUS','MINUS','TIMES','DIVIDE','EQUALS', "ISEQUAL", "NOTEQUAL",
     'LPAREN','RPAREN', 'SEMI', "ET" , "OU",'RACC' , 'LACC', 'THEN' , "COMMA",
-    'SUP' , "INFF" ] + list(reserved.values())
+    'SUP' , "INFF" , 'COMMENT' , "STRING" , "INCR" , "DECR"] + list(reserved.values())
 # Tokens
 
 t_PLUS    = r'\+'
@@ -48,6 +49,9 @@ t_RACC = r'{'
 t_LACC = r'}'
 t_THEN = r'->'
 t_COMMA = r',' 
+t_STRING = r'"[^"]+"'
+t_INCR = r'\++'
+t_DECR = r'--'
 
 
 
@@ -110,8 +114,10 @@ def evalInst(p):
 
     if p[0] == 'ASSIGN':names[p[1]] = evalExpr(p[2])
     if p[0] == 'PRINT':print("CALC >> ", evalExpr(p[1]))
+    if p[0] == "PRINTSTR" : print("CALC >> ", p[1])
     if p[0] == "IF": eval_if_elseif_else(p)
     if p[0] == "FOR" : eval_for_loop(p)
+    if p[0] == "WHILE" : eval_while_loop(p)
 
             
 
@@ -144,12 +150,17 @@ def eval_for_loop(p):
         while names[p[1][1]] <= p[2] :
             evalInst(p[4])
             evalInst(p[3])
-    if names[p[1][1]] > p[2] :
+    elif names[p[1][1]] > p[2] :
         while names[p[1][1]] >= p[2] :
             evalInst(p[4])
-            evalInst(p[3])    
+            evalInst(p[3])  
 
 
+def eval_while_loop(p):
+    while  evalExpr(p[1]):
+        evalInst(p[2])
+    
+
 def eval_if_elseif_else(p) : 
     if (len(p) == 3) : 
         if evalExpr(p[1]) == True : return evalInst(p[2])
@@ -186,9 +197,13 @@ def p_statement_assign(p):
     p[0] = ('ASSIGN', p[1], p[3])
 
 
+def p_while_statement(p):
+    ''' statement : WHILE expression RACC bloc LACC '''
+    p[0] = ('WHILE' , p[2] , p[4])
+
 def p_for_loop(p):
-    ''' statement : FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC '''
-    p[0] = ('FOR' , p[3] , p[5] , p[7] , p[10])
+    ''' statement : FOR LPAREN statement TO NUMBER COMMA statement RPAREN '''
+    #p[0] = ('FOR' , p[3] , p[5] , p[7] , p[10])
         
         
 def p_if_els_statement(p):
@@ -204,8 +219,12 @@ def p_if_els_statement(p):
     if len(p) == 11 : p[0] = ('IF' , p[2] , p[5] , p[9])
         
 def p_statement_print(p):
-    'statement : PRINT LPAREN expression RPAREN SEMI'
-    p[0] = ('PRINT', p[3])
+    '''statement : PRINT LPAREN expression RPAREN SEMI 
+                 | PRINT STRING SEMI'''
+    if len(p) == 4 :
+        p[0] = ("PRINTSTR" , p[2])
+    else :
+        p[0] = ('PRINT', p[3])
 
 
 def p_expression_binop(p):
@@ -226,6 +245,15 @@ def p_expression_binop(p):
     p[0] = (p[2], p[1] , p[3])
 
 
+def p_incr_decr_statement(p):
+    ''' statement : NAME INCR SEMI 
+                  | NAME DECR SEMI'''
+    if p[2] == '++' :
+        p[0] = ('ASSIGN' ,p[1], ('+' , p[1] , 1)) 
+    if p[2] == '--':
+        p[0] = ('ASSIGN' ,p[1], ('-' , p[1] , 1)) 
+
+
 def p_expression_uminus(p):
     'expression : MINUS expression '
     p[0] = -p[2]
diff --git a/parser.out b/parser.out
index d54e44a..f49c09d 100644
--- a/parser.out
+++ b/parser.out
@@ -1,5 +1,9 @@
 Created by PLY version 3.11 (http://www.dabeaz.com/ply)
 
+Unused terminals:
+
+    COMMENT
+
 Grammar
 
 Rule 0     S' -> start
@@ -8,67 +12,76 @@ Rule 2     bloc -> bloc statement
 Rule 3     bloc -> statement
 Rule 4     statement -> NAME EQUALS expression SEMI
 Rule 5     statement -> NAME EQUALS expression
-Rule 6     statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-Rule 7     statement -> IF expression THEN statement
-Rule 8     statement -> IF expression THEN RACC bloc LACC
-Rule 9     statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-Rule 10    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-Rule 11    statement -> PRINT LPAREN expression RPAREN SEMI
-Rule 12    expression -> expression PLUS expression
-Rule 13    expression -> expression MINUS expression
-Rule 14    expression -> expression TIMES expression
-Rule 15    expression -> expression DIVIDE expression
-Rule 16    expression -> expression or expression
-Rule 17    expression -> expression and expression
-Rule 18    expression -> expression SUP expression
-Rule 19    expression -> expression INFF expression
-Rule 20    expression -> expression ISEQUAL expression
-Rule 21    expression -> expression NOTEQUAL expression
-Rule 22    expression -> expression ET expression
-Rule 23    expression -> expression OU expression
-Rule 24    expression -> MINUS expression
-Rule 25    expression -> LPAREN expression RPAREN
-Rule 26    expression -> NUMBER
-Rule 27    expression -> NAME
+Rule 6     statement -> WHILE expression RACC bloc LACC
+Rule 7     statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+Rule 8     statement -> IF expression THEN statement
+Rule 9     statement -> IF expression THEN RACC bloc LACC
+Rule 10    statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+Rule 11    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+Rule 12    statement -> PRINT LPAREN expression RPAREN SEMI
+Rule 13    statement -> PRINT STRING SEMI
+Rule 14    expression -> expression PLUS expression
+Rule 15    expression -> expression MINUS expression
+Rule 16    expression -> expression TIMES expression
+Rule 17    expression -> expression DIVIDE expression
+Rule 18    expression -> expression or expression
+Rule 19    expression -> expression and expression
+Rule 20    expression -> expression SUP expression
+Rule 21    expression -> expression INFF expression
+Rule 22    expression -> expression ISEQUAL expression
+Rule 23    expression -> expression NOTEQUAL expression
+Rule 24    expression -> expression ET expression
+Rule 25    expression -> expression OU expression
+Rule 26    statement -> NAME INCR SEMI
+Rule 27    statement -> NAME DECR SEMI
+Rule 28    expression -> MINUS expression
+Rule 29    expression -> LPAREN expression RPAREN
+Rule 30    expression -> NUMBER
+Rule 31    expression -> NAME
 
 Terminals, with rules where they appear
 
-COMMA                : 6
-DIVIDE               : 15
-ELSE                 : 9 10
-ELSEIF               : 9
+COMMA                : 7
+COMMENT              : 
+DECR                 : 27
+DIVIDE               : 17
+ELSE                 : 10 11
+ELSEIF               : 10
 EQUALS               : 4 5
-ET                   : 22
-FOR                  : 6
-IF                   : 7 8 9 10
-INFF                 : 19
-ISEQUAL              : 20
-LACC                 : 6 8 9 9 9 10 10
-LPAREN               : 6 11 25
-MINUS                : 13 24
-NAME                 : 4 5 27
-NOTEQUAL             : 21
-NUMBER               : 6 26
-OU                   : 23
-PLUS                 : 12
-PRINT                : 11
-RACC                 : 6 8 9 9 9 10 10
-RPAREN               : 6 11 25
-SEMI                 : 4 11
-SUP                  : 18
-THEN                 : 7 8 9 9 10
-TIMES                : 14
-TO                   : 6
-and                  : 17
+ET                   : 24
+FOR                  : 7
+IF                   : 8 9 10 11
+INCR                 : 26
+INFF                 : 21
+ISEQUAL              : 22
+LACC                 : 6 9 10 10 10 11 11
+LPAREN               : 7 12 29
+MINUS                : 15 28
+NAME                 : 4 5 26 27 31
+NOTEQUAL             : 23
+NUMBER               : 7 30
+OU                   : 25
+PLUS                 : 14
+PRINT                : 12 13
+RACC                 : 6 9 10 10 10 11 11
+RPAREN               : 7 12 29
+SEMI                 : 4 12 13 26 27
+STRING               : 13
+SUP                  : 20
+THEN                 : 8 9 10 10 11
+TIMES                : 16
+TO                   : 7
+WHILE                : 6
+and                  : 19
 error                : 
-or                   : 16
+or                   : 18
 
 Nonterminals, with rules where they appear
 
-bloc                 : 1 2 6 8 9 9 9 10 10
-expression           : 4 5 7 8 9 9 10 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 25
+bloc                 : 1 2 6 9 10 10 10 11 11
+expression           : 4 5 6 8 9 10 10 11 12 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 28 29
 start                : 0
-statement            : 2 3 6 6 7
+statement            : 2 3 7 7 8
 
 Parsing method: LALR
 
@@ -80,17 +93,22 @@ state 0
     (3) bloc -> . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
 
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
     start                          shift and go to state 1
     bloc                           shift and go to state 2
@@ -108,26 +126,32 @@ state 2
     (2) bloc -> bloc . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
 
     $end            reduce using rule 1 (start -> bloc .)
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    statement                      shift and go to state 8
+    statement                      shift and go to state 9
 
 state 3
 
     (3) bloc -> statement .
 
     NAME            reduce using rule 3 (bloc -> statement .)
+    WHILE           reduce using rule 3 (bloc -> statement .)
     FOR             reduce using rule 3 (bloc -> statement .)
     IF              reduce using rule 3 (bloc -> statement .)
     PRINT           reduce using rule 3 (bloc -> statement .)
@@ -139,59 +163,93 @@ state 4
 
     (4) statement -> NAME . EQUALS expression SEMI
     (5) statement -> NAME . EQUALS expression
+    (26) statement -> NAME . INCR SEMI
+    (27) statement -> NAME . DECR SEMI
 
-    EQUALS          shift and go to state 9
+    EQUALS          shift and go to state 10
+    INCR            shift and go to state 11
+    DECR            shift and go to state 12
 
 
 state 5
 
-    (6) statement -> FOR . LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
+    (6) statement -> WHILE . expression RACC bloc LACC
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 13
 
-    LPAREN          shift and go to state 10
+state 6
 
+    (7) statement -> FOR . LPAREN statement TO NUMBER COMMA statement RPAREN
 
-state 6
+    LPAREN          shift and go to state 18
 
-    (7) statement -> IF . expression THEN statement
-    (8) statement -> IF . expression THEN RACC bloc LACC
-    (9) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 11
 
 state 7
 
-    (11) statement -> PRINT . LPAREN expression RPAREN SEMI
+    (8) statement -> IF . expression THEN statement
+    (9) statement -> IF . expression THEN RACC bloc LACC
+    (10) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 19
 
-    LPAREN          shift and go to state 16
+state 8
 
+    (12) statement -> PRINT . LPAREN expression RPAREN SEMI
+    (13) statement -> PRINT . STRING SEMI
 
-state 8
+    LPAREN          shift and go to state 20
+    STRING          shift and go to state 21
+
+
+state 9
 
     (2) bloc -> bloc statement .
 
     NAME            reduce using rule 2 (bloc -> bloc statement .)
+    WHILE           reduce using rule 2 (bloc -> bloc statement .)
     FOR             reduce using rule 2 (bloc -> bloc statement .)
     IF              reduce using rule 2 (bloc -> bloc statement .)
     PRINT           reduce using rule 2 (bloc -> bloc statement .)
@@ -199,1178 +257,1315 @@ state 8
     LACC            reduce using rule 2 (bloc -> bloc statement .)
 
 
-state 9
+state 10
 
     (4) statement -> NAME EQUALS . expression SEMI
     (5) statement -> NAME EQUALS . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 17
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 22
 
-state 10
+state 11
 
-    (6) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (4) statement -> . NAME EQUALS expression SEMI
-    (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (26) statement -> NAME INCR . SEMI
 
-    NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    SEMI            shift and go to state 23
 
-    statement                      shift and go to state 18
 
-state 11
-
-    (7) statement -> IF expression . THEN statement
-    (8) statement -> IF expression . THEN RACC bloc LACC
-    (9) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            shift and go to state 19
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
+state 12
 
+    (27) statement -> NAME DECR . SEMI
 
-state 12
+    SEMI            shift and go to state 24
 
-    (24) expression -> MINUS . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 32
 
 state 13
 
-    (25) expression -> LPAREN . expression RPAREN
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 33
+    (6) statement -> WHILE expression . RACC bloc LACC
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            shift and go to state 25
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
 
-state 14
 
-    (26) expression -> NUMBER .
-
-    THEN            reduce using rule 26 (expression -> NUMBER .)
-    PLUS            reduce using rule 26 (expression -> NUMBER .)
-    MINUS           reduce using rule 26 (expression -> NUMBER .)
-    TIMES           reduce using rule 26 (expression -> NUMBER .)
-    DIVIDE          reduce using rule 26 (expression -> NUMBER .)
-    or              reduce using rule 26 (expression -> NUMBER .)
-    and             reduce using rule 26 (expression -> NUMBER .)
-    SUP             reduce using rule 26 (expression -> NUMBER .)
-    INFF            reduce using rule 26 (expression -> NUMBER .)
-    ISEQUAL         reduce using rule 26 (expression -> NUMBER .)
-    NOTEQUAL        reduce using rule 26 (expression -> NUMBER .)
-    ET              reduce using rule 26 (expression -> NUMBER .)
-    OU              reduce using rule 26 (expression -> NUMBER .)
-    SEMI            reduce using rule 26 (expression -> NUMBER .)
-    NAME            reduce using rule 26 (expression -> NUMBER .)
-    FOR             reduce using rule 26 (expression -> NUMBER .)
-    IF              reduce using rule 26 (expression -> NUMBER .)
-    PRINT           reduce using rule 26 (expression -> NUMBER .)
-    $end            reduce using rule 26 (expression -> NUMBER .)
-    TO              reduce using rule 26 (expression -> NUMBER .)
-    LACC            reduce using rule 26 (expression -> NUMBER .)
-    RPAREN          reduce using rule 26 (expression -> NUMBER .)
+state 14
 
+    (28) expression -> MINUS . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 38
 
 state 15
 
-    (27) expression -> NAME .
-
-    THEN            reduce using rule 27 (expression -> NAME .)
-    PLUS            reduce using rule 27 (expression -> NAME .)
-    MINUS           reduce using rule 27 (expression -> NAME .)
-    TIMES           reduce using rule 27 (expression -> NAME .)
-    DIVIDE          reduce using rule 27 (expression -> NAME .)
-    or              reduce using rule 27 (expression -> NAME .)
-    and             reduce using rule 27 (expression -> NAME .)
-    SUP             reduce using rule 27 (expression -> NAME .)
-    INFF            reduce using rule 27 (expression -> NAME .)
-    ISEQUAL         reduce using rule 27 (expression -> NAME .)
-    NOTEQUAL        reduce using rule 27 (expression -> NAME .)
-    ET              reduce using rule 27 (expression -> NAME .)
-    OU              reduce using rule 27 (expression -> NAME .)
-    SEMI            reduce using rule 27 (expression -> NAME .)
-    NAME            reduce using rule 27 (expression -> NAME .)
-    FOR             reduce using rule 27 (expression -> NAME .)
-    IF              reduce using rule 27 (expression -> NAME .)
-    PRINT           reduce using rule 27 (expression -> NAME .)
-    $end            reduce using rule 27 (expression -> NAME .)
-    TO              reduce using rule 27 (expression -> NAME .)
-    LACC            reduce using rule 27 (expression -> NAME .)
-    RPAREN          reduce using rule 27 (expression -> NAME .)
+    (29) expression -> LPAREN . expression RPAREN
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
 
+    expression                     shift and go to state 39
 
 state 16
 
-    (11) statement -> PRINT LPAREN . expression RPAREN SEMI
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 34
+    (30) expression -> NUMBER .
+
+    RACC            reduce using rule 30 (expression -> NUMBER .)
+    PLUS            reduce using rule 30 (expression -> NUMBER .)
+    MINUS           reduce using rule 30 (expression -> NUMBER .)
+    TIMES           reduce using rule 30 (expression -> NUMBER .)
+    DIVIDE          reduce using rule 30 (expression -> NUMBER .)
+    or              reduce using rule 30 (expression -> NUMBER .)
+    and             reduce using rule 30 (expression -> NUMBER .)
+    SUP             reduce using rule 30 (expression -> NUMBER .)
+    INFF            reduce using rule 30 (expression -> NUMBER .)
+    ISEQUAL         reduce using rule 30 (expression -> NUMBER .)
+    NOTEQUAL        reduce using rule 30 (expression -> NUMBER .)
+    ET              reduce using rule 30 (expression -> NUMBER .)
+    OU              reduce using rule 30 (expression -> NUMBER .)
+    THEN            reduce using rule 30 (expression -> NUMBER .)
+    SEMI            reduce using rule 30 (expression -> NUMBER .)
+    NAME            reduce using rule 30 (expression -> NUMBER .)
+    WHILE           reduce using rule 30 (expression -> NUMBER .)
+    FOR             reduce using rule 30 (expression -> NUMBER .)
+    IF              reduce using rule 30 (expression -> NUMBER .)
+    PRINT           reduce using rule 30 (expression -> NUMBER .)
+    $end            reduce using rule 30 (expression -> NUMBER .)
+    TO              reduce using rule 30 (expression -> NUMBER .)
+    LACC            reduce using rule 30 (expression -> NUMBER .)
+    RPAREN          reduce using rule 30 (expression -> NUMBER .)
+
 
 state 17
 
-    (4) statement -> NAME EQUALS expression . SEMI
-    (5) statement -> NAME EQUALS expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    SEMI            shift and go to state 35
-    NAME            reduce using rule 5 (statement -> NAME EQUALS expression .)
-    FOR             reduce using rule 5 (statement -> NAME EQUALS expression .)
-    IF              reduce using rule 5 (statement -> NAME EQUALS expression .)
-    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression .)
-    $end            reduce using rule 5 (statement -> NAME EQUALS expression .)
-    TO              reduce using rule 5 (statement -> NAME EQUALS expression .)
-    LACC            reduce using rule 5 (statement -> NAME EQUALS expression .)
-    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
+    (31) expression -> NAME .
+
+    RACC            reduce using rule 31 (expression -> NAME .)
+    PLUS            reduce using rule 31 (expression -> NAME .)
+    MINUS           reduce using rule 31 (expression -> NAME .)
+    TIMES           reduce using rule 31 (expression -> NAME .)
+    DIVIDE          reduce using rule 31 (expression -> NAME .)
+    or              reduce using rule 31 (expression -> NAME .)
+    and             reduce using rule 31 (expression -> NAME .)
+    SUP             reduce using rule 31 (expression -> NAME .)
+    INFF            reduce using rule 31 (expression -> NAME .)
+    ISEQUAL         reduce using rule 31 (expression -> NAME .)
+    NOTEQUAL        reduce using rule 31 (expression -> NAME .)
+    ET              reduce using rule 31 (expression -> NAME .)
+    OU              reduce using rule 31 (expression -> NAME .)
+    THEN            reduce using rule 31 (expression -> NAME .)
+    SEMI            reduce using rule 31 (expression -> NAME .)
+    NAME            reduce using rule 31 (expression -> NAME .)
+    WHILE           reduce using rule 31 (expression -> NAME .)
+    FOR             reduce using rule 31 (expression -> NAME .)
+    IF              reduce using rule 31 (expression -> NAME .)
+    PRINT           reduce using rule 31 (expression -> NAME .)
+    $end            reduce using rule 31 (expression -> NAME .)
+    TO              reduce using rule 31 (expression -> NAME .)
+    LACC            reduce using rule 31 (expression -> NAME .)
+    RPAREN          reduce using rule 31 (expression -> NAME .)
 
 
 state 18
 
-    (6) statement -> FOR LPAREN statement . TO NUMBER COMMA statement RPAREN RACC bloc LACC
+    (7) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN
+    (4) statement -> . NAME EQUALS expression SEMI
+    (5) statement -> . NAME EQUALS expression
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
 
-    TO              shift and go to state 36
+    NAME            shift and go to state 4
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
+    statement                      shift and go to state 40
 
 state 19
 
-    (7) statement -> IF expression THEN . statement
-    (8) statement -> IF expression THEN . RACC bloc LACC
-    (9) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
-    (4) statement -> . NAME EQUALS expression SEMI
-    (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
-
-    RACC            shift and go to state 38
-    NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    (8) statement -> IF expression . THEN statement
+    (9) statement -> IF expression . THEN RACC bloc LACC
+    (10) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    THEN            shift and go to state 41
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
 
-    statement                      shift and go to state 37
 
 state 20
 
-    (12) expression -> expression PLUS . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
+    (12) statement -> PRINT LPAREN . expression RPAREN SEMI
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
 
-    expression                     shift and go to state 39
+    expression                     shift and go to state 42
 
 state 21
 
-    (13) expression -> expression MINUS . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 40
+    (13) statement -> PRINT STRING . SEMI
+
+    SEMI            shift and go to state 43
+
 
 state 22
 
-    (14) expression -> expression TIMES . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 41
+    (4) statement -> NAME EQUALS expression . SEMI
+    (5) statement -> NAME EQUALS expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    SEMI            shift and go to state 44
+    NAME            reduce using rule 5 (statement -> NAME EQUALS expression .)
+    WHILE           reduce using rule 5 (statement -> NAME EQUALS expression .)
+    FOR             reduce using rule 5 (statement -> NAME EQUALS expression .)
+    IF              reduce using rule 5 (statement -> NAME EQUALS expression .)
+    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression .)
+    $end            reduce using rule 5 (statement -> NAME EQUALS expression .)
+    TO              reduce using rule 5 (statement -> NAME EQUALS expression .)
+    LACC            reduce using rule 5 (statement -> NAME EQUALS expression .)
+    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
+
 
 state 23
 
-    (15) expression -> expression DIVIDE . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
+    (26) statement -> NAME INCR SEMI .
+
+    NAME            reduce using rule 26 (statement -> NAME INCR SEMI .)
+    WHILE           reduce using rule 26 (statement -> NAME INCR SEMI .)
+    FOR             reduce using rule 26 (statement -> NAME INCR SEMI .)
+    IF              reduce using rule 26 (statement -> NAME INCR SEMI .)
+    PRINT           reduce using rule 26 (statement -> NAME INCR SEMI .)
+    $end            reduce using rule 26 (statement -> NAME INCR SEMI .)
+    TO              reduce using rule 26 (statement -> NAME INCR SEMI .)
+    LACC            reduce using rule 26 (statement -> NAME INCR SEMI .)
+    RPAREN          reduce using rule 26 (statement -> NAME INCR SEMI .)
 
-    expression                     shift and go to state 42
 
 state 24
 
-    (16) expression -> expression or . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 43
+    (27) statement -> NAME DECR SEMI .
+
+    NAME            reduce using rule 27 (statement -> NAME DECR SEMI .)
+    WHILE           reduce using rule 27 (statement -> NAME DECR SEMI .)
+    FOR             reduce using rule 27 (statement -> NAME DECR SEMI .)
+    IF              reduce using rule 27 (statement -> NAME DECR SEMI .)
+    PRINT           reduce using rule 27 (statement -> NAME DECR SEMI .)
+    $end            reduce using rule 27 (statement -> NAME DECR SEMI .)
+    TO              reduce using rule 27 (statement -> NAME DECR SEMI .)
+    LACC            reduce using rule 27 (statement -> NAME DECR SEMI .)
+    RPAREN          reduce using rule 27 (statement -> NAME DECR SEMI .)
+
 
 state 25
 
-    (17) expression -> expression and . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 44
+    (6) statement -> WHILE expression RACC . bloc LACC
+    (2) bloc -> . bloc statement
+    (3) bloc -> . statement
+    (4) statement -> . NAME EQUALS expression SEMI
+    (5) statement -> . NAME EQUALS expression
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
 
-state 26
+    NAME            shift and go to state 4
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    (18) expression -> expression SUP . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 45
+    bloc                           shift and go to state 45
+    statement                      shift and go to state 3
 
-state 27
+state 26
 
-    (19) expression -> expression INFF . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
+    (14) expression -> expression PLUS . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
 
     expression                     shift and go to state 46
 
-state 28
+state 27
 
-    (20) expression -> expression ISEQUAL . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
+    (15) expression -> expression MINUS . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
 
     expression                     shift and go to state 47
 
-state 29
+state 28
 
-    (21) expression -> expression NOTEQUAL . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
+    (16) expression -> expression TIMES . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
 
     expression                     shift and go to state 48
 
-state 30
+state 29
 
-    (22) expression -> expression ET . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
+    (17) expression -> expression DIVIDE . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
 
     expression                     shift and go to state 49
 
-state 31
+state 30
 
-    (23) expression -> expression OU . expression
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
+    (18) expression -> expression or . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
 
     expression                     shift and go to state 50
 
-state 32
+state 31
 
-    (24) expression -> MINUS expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            reduce using rule 24 (expression -> MINUS expression .)
-    PLUS            reduce using rule 24 (expression -> MINUS expression .)
-    MINUS           reduce using rule 24 (expression -> MINUS expression .)
-    or              reduce using rule 24 (expression -> MINUS expression .)
-    and             reduce using rule 24 (expression -> MINUS expression .)
-    SUP             reduce using rule 24 (expression -> MINUS expression .)
-    INFF            reduce using rule 24 (expression -> MINUS expression .)
-    ISEQUAL         reduce using rule 24 (expression -> MINUS expression .)
-    NOTEQUAL        reduce using rule 24 (expression -> MINUS expression .)
-    ET              reduce using rule 24 (expression -> MINUS expression .)
-    OU              reduce using rule 24 (expression -> MINUS expression .)
-    SEMI            reduce using rule 24 (expression -> MINUS expression .)
-    NAME            reduce using rule 24 (expression -> MINUS expression .)
-    FOR             reduce using rule 24 (expression -> MINUS expression .)
-    IF              reduce using rule 24 (expression -> MINUS expression .)
-    PRINT           reduce using rule 24 (expression -> MINUS expression .)
-    $end            reduce using rule 24 (expression -> MINUS expression .)
-    TO              reduce using rule 24 (expression -> MINUS expression .)
-    LACC            reduce using rule 24 (expression -> MINUS expression .)
-    RPAREN          reduce using rule 24 (expression -> MINUS expression .)
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-
-  ! TIMES           [ reduce using rule 24 (expression -> MINUS expression .) ]
-  ! DIVIDE          [ reduce using rule 24 (expression -> MINUS expression .) ]
-  ! PLUS            [ shift and go to state 20 ]
-  ! MINUS           [ shift and go to state 21 ]
-  ! or              [ shift and go to state 24 ]
-  ! and             [ shift and go to state 25 ]
-  ! SUP             [ shift and go to state 26 ]
-  ! INFF            [ shift and go to state 27 ]
-  ! ISEQUAL         [ shift and go to state 28 ]
-  ! NOTEQUAL        [ shift and go to state 29 ]
-  ! ET              [ shift and go to state 30 ]
-  ! OU              [ shift and go to state 31 ]
+    (19) expression -> expression and . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 51
 
+state 32
 
-state 33
+    (20) expression -> expression SUP . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 52
 
-    (25) expression -> LPAREN expression . RPAREN
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    RPAREN          shift and go to state 51
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
+state 33
 
+    (21) expression -> expression INFF . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 53
 
 state 34
 
-    (11) statement -> PRINT LPAREN expression . RPAREN SEMI
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    RPAREN          shift and go to state 52
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
-
+    (22) expression -> expression ISEQUAL . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 54
 
 state 35
 
-    (4) statement -> NAME EQUALS expression SEMI .
-
-    NAME            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
-    FOR             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
-    IF              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
-    PRINT           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
-    $end            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
-    TO              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
-    LACC            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
-    RPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
-
+    (23) expression -> expression NOTEQUAL . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 55
 
 state 36
 
-    (6) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN RACC bloc LACC
-
-    NUMBER          shift and go to state 53
-
+    (24) expression -> expression ET . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 56
 
 state 37
 
-    (7) statement -> IF expression THEN statement .
-
-    NAME            reduce using rule 7 (statement -> IF expression THEN statement .)
-    FOR             reduce using rule 7 (statement -> IF expression THEN statement .)
-    IF              reduce using rule 7 (statement -> IF expression THEN statement .)
-    PRINT           reduce using rule 7 (statement -> IF expression THEN statement .)
-    $end            reduce using rule 7 (statement -> IF expression THEN statement .)
-    TO              reduce using rule 7 (statement -> IF expression THEN statement .)
-    LACC            reduce using rule 7 (statement -> IF expression THEN statement .)
-    RPAREN          reduce using rule 7 (statement -> IF expression THEN statement .)
-
+    (25) expression -> expression OU . expression
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 57
 
 state 38
 
-    (8) statement -> IF expression THEN RACC . bloc LACC
-    (9) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
-    (2) bloc -> . bloc statement
-    (3) bloc -> . statement
-    (4) statement -> . NAME EQUALS expression SEMI
-    (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (28) expression -> MINUS expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            reduce using rule 28 (expression -> MINUS expression .)
+    PLUS            reduce using rule 28 (expression -> MINUS expression .)
+    MINUS           reduce using rule 28 (expression -> MINUS expression .)
+    or              reduce using rule 28 (expression -> MINUS expression .)
+    and             reduce using rule 28 (expression -> MINUS expression .)
+    SUP             reduce using rule 28 (expression -> MINUS expression .)
+    INFF            reduce using rule 28 (expression -> MINUS expression .)
+    ISEQUAL         reduce using rule 28 (expression -> MINUS expression .)
+    NOTEQUAL        reduce using rule 28 (expression -> MINUS expression .)
+    ET              reduce using rule 28 (expression -> MINUS expression .)
+    OU              reduce using rule 28 (expression -> MINUS expression .)
+    THEN            reduce using rule 28 (expression -> MINUS expression .)
+    SEMI            reduce using rule 28 (expression -> MINUS expression .)
+    NAME            reduce using rule 28 (expression -> MINUS expression .)
+    WHILE           reduce using rule 28 (expression -> MINUS expression .)
+    FOR             reduce using rule 28 (expression -> MINUS expression .)
+    IF              reduce using rule 28 (expression -> MINUS expression .)
+    PRINT           reduce using rule 28 (expression -> MINUS expression .)
+    $end            reduce using rule 28 (expression -> MINUS expression .)
+    TO              reduce using rule 28 (expression -> MINUS expression .)
+    LACC            reduce using rule 28 (expression -> MINUS expression .)
+    RPAREN          reduce using rule 28 (expression -> MINUS expression .)
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+
+  ! TIMES           [ reduce using rule 28 (expression -> MINUS expression .) ]
+  ! DIVIDE          [ reduce using rule 28 (expression -> MINUS expression .) ]
+  ! PLUS            [ shift and go to state 26 ]
+  ! MINUS           [ shift and go to state 27 ]
+  ! or              [ shift and go to state 30 ]
+  ! and             [ shift and go to state 31 ]
+  ! SUP             [ shift and go to state 32 ]
+  ! INFF            [ shift and go to state 33 ]
+  ! ISEQUAL         [ shift and go to state 34 ]
+  ! NOTEQUAL        [ shift and go to state 35 ]
+  ! ET              [ shift and go to state 36 ]
+  ! OU              [ shift and go to state 37 ]
 
-    NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
-
-    bloc                           shift and go to state 54
-    statement                      shift and go to state 3
 
 state 39
 
-    (12) expression -> expression PLUS expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            reduce using rule 12 (expression -> expression PLUS expression .)
-    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
-    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
-    or              reduce using rule 12 (expression -> expression PLUS expression .)
-    and             reduce using rule 12 (expression -> expression PLUS expression .)
-    SUP             reduce using rule 12 (expression -> expression PLUS expression .)
-    INFF            reduce using rule 12 (expression -> expression PLUS expression .)
-    ISEQUAL         reduce using rule 12 (expression -> expression PLUS expression .)
-    NOTEQUAL        reduce using rule 12 (expression -> expression PLUS expression .)
-    ET              reduce using rule 12 (expression -> expression PLUS expression .)
-    OU              reduce using rule 12 (expression -> expression PLUS expression .)
-    SEMI            reduce using rule 12 (expression -> expression PLUS expression .)
-    NAME            reduce using rule 12 (expression -> expression PLUS expression .)
-    FOR             reduce using rule 12 (expression -> expression PLUS expression .)
-    IF              reduce using rule 12 (expression -> expression PLUS expression .)
-    PRINT           reduce using rule 12 (expression -> expression PLUS expression .)
-    $end            reduce using rule 12 (expression -> expression PLUS expression .)
-    TO              reduce using rule 12 (expression -> expression PLUS expression .)
-    LACC            reduce using rule 12 (expression -> expression PLUS expression .)
-    RPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-
-  ! TIMES           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
-  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
-  ! PLUS            [ shift and go to state 20 ]
-  ! MINUS           [ shift and go to state 21 ]
-  ! or              [ shift and go to state 24 ]
-  ! and             [ shift and go to state 25 ]
-  ! SUP             [ shift and go to state 26 ]
-  ! INFF            [ shift and go to state 27 ]
-  ! ISEQUAL         [ shift and go to state 28 ]
-  ! NOTEQUAL        [ shift and go to state 29 ]
-  ! ET              [ shift and go to state 30 ]
-  ! OU              [ shift and go to state 31 ]
+    (29) expression -> LPAREN expression . RPAREN
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RPAREN          shift and go to state 58
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
 
 
 state 40
 
-    (13) expression -> expression MINUS expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            reduce using rule 13 (expression -> expression MINUS expression .)
-    PLUS            reduce using rule 13 (expression -> expression MINUS expression .)
-    MINUS           reduce using rule 13 (expression -> expression MINUS expression .)
-    or              reduce using rule 13 (expression -> expression MINUS expression .)
-    and             reduce using rule 13 (expression -> expression MINUS expression .)
-    SUP             reduce using rule 13 (expression -> expression MINUS expression .)
-    INFF            reduce using rule 13 (expression -> expression MINUS expression .)
-    ISEQUAL         reduce using rule 13 (expression -> expression MINUS expression .)
-    NOTEQUAL        reduce using rule 13 (expression -> expression MINUS expression .)
-    ET              reduce using rule 13 (expression -> expression MINUS expression .)
-    OU              reduce using rule 13 (expression -> expression MINUS expression .)
-    SEMI            reduce using rule 13 (expression -> expression MINUS expression .)
-    NAME            reduce using rule 13 (expression -> expression MINUS expression .)
-    FOR             reduce using rule 13 (expression -> expression MINUS expression .)
-    IF              reduce using rule 13 (expression -> expression MINUS expression .)
-    PRINT           reduce using rule 13 (expression -> expression MINUS expression .)
-    $end            reduce using rule 13 (expression -> expression MINUS expression .)
-    TO              reduce using rule 13 (expression -> expression MINUS expression .)
-    LACC            reduce using rule 13 (expression -> expression MINUS expression .)
-    RPAREN          reduce using rule 13 (expression -> expression MINUS expression .)
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-
-  ! TIMES           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
-  ! DIVIDE          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
-  ! PLUS            [ shift and go to state 20 ]
-  ! MINUS           [ shift and go to state 21 ]
-  ! or              [ shift and go to state 24 ]
-  ! and             [ shift and go to state 25 ]
-  ! SUP             [ shift and go to state 26 ]
-  ! INFF            [ shift and go to state 27 ]
-  ! ISEQUAL         [ shift and go to state 28 ]
-  ! NOTEQUAL        [ shift and go to state 29 ]
-  ! ET              [ shift and go to state 30 ]
-  ! OU              [ shift and go to state 31 ]
+    (7) statement -> FOR LPAREN statement . TO NUMBER COMMA statement RPAREN
+
+    TO              shift and go to state 59
 
 
 state 41
 
-    (14) expression -> expression TIMES expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            reduce using rule 14 (expression -> expression TIMES expression .)
-    PLUS            reduce using rule 14 (expression -> expression TIMES expression .)
-    MINUS           reduce using rule 14 (expression -> expression TIMES expression .)
-    TIMES           reduce using rule 14 (expression -> expression TIMES expression .)
-    DIVIDE          reduce using rule 14 (expression -> expression TIMES expression .)
-    or              reduce using rule 14 (expression -> expression TIMES expression .)
-    and             reduce using rule 14 (expression -> expression TIMES expression .)
-    SUP             reduce using rule 14 (expression -> expression TIMES expression .)
-    INFF            reduce using rule 14 (expression -> expression TIMES expression .)
-    ISEQUAL         reduce using rule 14 (expression -> expression TIMES expression .)
-    NOTEQUAL        reduce using rule 14 (expression -> expression TIMES expression .)
-    ET              reduce using rule 14 (expression -> expression TIMES expression .)
-    OU              reduce using rule 14 (expression -> expression TIMES expression .)
-    SEMI            reduce using rule 14 (expression -> expression TIMES expression .)
-    NAME            reduce using rule 14 (expression -> expression TIMES expression .)
-    FOR             reduce using rule 14 (expression -> expression TIMES expression .)
-    IF              reduce using rule 14 (expression -> expression TIMES expression .)
-    PRINT           reduce using rule 14 (expression -> expression TIMES expression .)
-    $end            reduce using rule 14 (expression -> expression TIMES expression .)
-    TO              reduce using rule 14 (expression -> expression TIMES expression .)
-    LACC            reduce using rule 14 (expression -> expression TIMES expression .)
-    RPAREN          reduce using rule 14 (expression -> expression TIMES expression .)
-
-  ! PLUS            [ shift and go to state 20 ]
-  ! MINUS           [ shift and go to state 21 ]
-  ! TIMES           [ shift and go to state 22 ]
-  ! DIVIDE          [ shift and go to state 23 ]
-  ! or              [ shift and go to state 24 ]
-  ! and             [ shift and go to state 25 ]
-  ! SUP             [ shift and go to state 26 ]
-  ! INFF            [ shift and go to state 27 ]
-  ! ISEQUAL         [ shift and go to state 28 ]
-  ! NOTEQUAL        [ shift and go to state 29 ]
-  ! ET              [ shift and go to state 30 ]
-  ! OU              [ shift and go to state 31 ]
+    (8) statement -> IF expression THEN . statement
+    (9) statement -> IF expression THEN . RACC bloc LACC
+    (10) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
+    (4) statement -> . NAME EQUALS expression SEMI
+    (5) statement -> . NAME EQUALS expression
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
+
+    RACC            shift and go to state 61
+    NAME            shift and go to state 4
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
+    statement                      shift and go to state 60
 
 state 42
 
-    (15) expression -> expression DIVIDE expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            reduce using rule 15 (expression -> expression DIVIDE expression .)
-    PLUS            reduce using rule 15 (expression -> expression DIVIDE expression .)
-    MINUS           reduce using rule 15 (expression -> expression DIVIDE expression .)
-    TIMES           reduce using rule 15 (expression -> expression DIVIDE expression .)
-    DIVIDE          reduce using rule 15 (expression -> expression DIVIDE expression .)
-    or              reduce using rule 15 (expression -> expression DIVIDE expression .)
-    and             reduce using rule 15 (expression -> expression DIVIDE expression .)
-    SUP             reduce using rule 15 (expression -> expression DIVIDE expression .)
-    INFF            reduce using rule 15 (expression -> expression DIVIDE expression .)
-    ISEQUAL         reduce using rule 15 (expression -> expression DIVIDE expression .)
-    NOTEQUAL        reduce using rule 15 (expression -> expression DIVIDE expression .)
-    ET              reduce using rule 15 (expression -> expression DIVIDE expression .)
-    OU              reduce using rule 15 (expression -> expression DIVIDE expression .)
-    SEMI            reduce using rule 15 (expression -> expression DIVIDE expression .)
-    NAME            reduce using rule 15 (expression -> expression DIVIDE expression .)
-    FOR             reduce using rule 15 (expression -> expression DIVIDE expression .)
-    IF              reduce using rule 15 (expression -> expression DIVIDE expression .)
-    PRINT           reduce using rule 15 (expression -> expression DIVIDE expression .)
-    $end            reduce using rule 15 (expression -> expression DIVIDE expression .)
-    TO              reduce using rule 15 (expression -> expression DIVIDE expression .)
-    LACC            reduce using rule 15 (expression -> expression DIVIDE expression .)
-    RPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)
-
-  ! PLUS            [ shift and go to state 20 ]
-  ! MINUS           [ shift and go to state 21 ]
-  ! TIMES           [ shift and go to state 22 ]
-  ! DIVIDE          [ shift and go to state 23 ]
-  ! or              [ shift and go to state 24 ]
-  ! and             [ shift and go to state 25 ]
-  ! SUP             [ shift and go to state 26 ]
-  ! INFF            [ shift and go to state 27 ]
-  ! ISEQUAL         [ shift and go to state 28 ]
-  ! NOTEQUAL        [ shift and go to state 29 ]
-  ! ET              [ shift and go to state 30 ]
-  ! OU              [ shift and go to state 31 ]
+    (12) statement -> PRINT LPAREN expression . RPAREN SEMI
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RPAREN          shift and go to state 62
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
 
 
 state 43
 
-    (16) expression -> expression or expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            reduce using rule 16 (expression -> expression or expression .)
-    or              reduce using rule 16 (expression -> expression or expression .)
-    INFF            reduce using rule 16 (expression -> expression or expression .)
-    ISEQUAL         reduce using rule 16 (expression -> expression or expression .)
-    NOTEQUAL        reduce using rule 16 (expression -> expression or expression .)
-    ET              reduce using rule 16 (expression -> expression or expression .)
-    OU              reduce using rule 16 (expression -> expression or expression .)
-    SEMI            reduce using rule 16 (expression -> expression or expression .)
-    NAME            reduce using rule 16 (expression -> expression or expression .)
-    FOR             reduce using rule 16 (expression -> expression or expression .)
-    IF              reduce using rule 16 (expression -> expression or expression .)
-    PRINT           reduce using rule 16 (expression -> expression or expression .)
-    $end            reduce using rule 16 (expression -> expression or expression .)
-    TO              reduce using rule 16 (expression -> expression or expression .)
-    LACC            reduce using rule 16 (expression -> expression or expression .)
-    RPAREN          reduce using rule 16 (expression -> expression or expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-
-  ! PLUS            [ reduce using rule 16 (expression -> expression or expression .) ]
-  ! MINUS           [ reduce using rule 16 (expression -> expression or expression .) ]
-  ! TIMES           [ reduce using rule 16 (expression -> expression or expression .) ]
-  ! DIVIDE          [ reduce using rule 16 (expression -> expression or expression .) ]
-  ! and             [ reduce using rule 16 (expression -> expression or expression .) ]
-  ! SUP             [ reduce using rule 16 (expression -> expression or expression .) ]
-  ! or              [ shift and go to state 24 ]
-  ! INFF            [ shift and go to state 27 ]
-  ! ISEQUAL         [ shift and go to state 28 ]
-  ! NOTEQUAL        [ shift and go to state 29 ]
-  ! ET              [ shift and go to state 30 ]
-  ! OU              [ shift and go to state 31 ]
+    (13) statement -> PRINT STRING SEMI .
+
+    NAME            reduce using rule 13 (statement -> PRINT STRING SEMI .)
+    WHILE           reduce using rule 13 (statement -> PRINT STRING SEMI .)
+    FOR             reduce using rule 13 (statement -> PRINT STRING SEMI .)
+    IF              reduce using rule 13 (statement -> PRINT STRING SEMI .)
+    PRINT           reduce using rule 13 (statement -> PRINT STRING SEMI .)
+    $end            reduce using rule 13 (statement -> PRINT STRING SEMI .)
+    TO              reduce using rule 13 (statement -> PRINT STRING SEMI .)
+    LACC            reduce using rule 13 (statement -> PRINT STRING SEMI .)
+    RPAREN          reduce using rule 13 (statement -> PRINT STRING SEMI .)
 
 
 state 44
 
-    (17) expression -> expression and expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            reduce using rule 17 (expression -> expression and expression .)
-    or              reduce using rule 17 (expression -> expression and expression .)
-    and             reduce using rule 17 (expression -> expression and expression .)
-    INFF            reduce using rule 17 (expression -> expression and expression .)
-    ISEQUAL         reduce using rule 17 (expression -> expression and expression .)
-    NOTEQUAL        reduce using rule 17 (expression -> expression and expression .)
-    ET              reduce using rule 17 (expression -> expression and expression .)
-    OU              reduce using rule 17 (expression -> expression and expression .)
-    SEMI            reduce using rule 17 (expression -> expression and expression .)
-    NAME            reduce using rule 17 (expression -> expression and expression .)
-    FOR             reduce using rule 17 (expression -> expression and expression .)
-    IF              reduce using rule 17 (expression -> expression and expression .)
-    PRINT           reduce using rule 17 (expression -> expression and expression .)
-    $end            reduce using rule 17 (expression -> expression and expression .)
-    TO              reduce using rule 17 (expression -> expression and expression .)
-    LACC            reduce using rule 17 (expression -> expression and expression .)
-    RPAREN          reduce using rule 17 (expression -> expression and expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    SUP             shift and go to state 26
-
-  ! PLUS            [ reduce using rule 17 (expression -> expression and expression .) ]
-  ! MINUS           [ reduce using rule 17 (expression -> expression and expression .) ]
-  ! TIMES           [ reduce using rule 17 (expression -> expression and expression .) ]
-  ! DIVIDE          [ reduce using rule 17 (expression -> expression and expression .) ]
-  ! SUP             [ reduce using rule 17 (expression -> expression and expression .) ]
-  ! or              [ shift and go to state 24 ]
-  ! and             [ shift and go to state 25 ]
-  ! INFF            [ shift and go to state 27 ]
-  ! ISEQUAL         [ shift and go to state 28 ]
-  ! NOTEQUAL        [ shift and go to state 29 ]
-  ! ET              [ shift and go to state 30 ]
-  ! OU              [ shift and go to state 31 ]
+    (4) statement -> NAME EQUALS expression SEMI .
+
+    NAME            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
+    WHILE           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
+    FOR             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
+    IF              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
+    PRINT           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
+    $end            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
+    TO              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
+    LACC            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
+    RPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
 
 
 state 45
 
-    (18) expression -> expression SUP expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            reduce using rule 18 (expression -> expression SUP expression .)
-    or              reduce using rule 18 (expression -> expression SUP expression .)
-    and             reduce using rule 18 (expression -> expression SUP expression .)
-    SUP             reduce using rule 18 (expression -> expression SUP expression .)
-    INFF            reduce using rule 18 (expression -> expression SUP expression .)
-    ISEQUAL         reduce using rule 18 (expression -> expression SUP expression .)
-    NOTEQUAL        reduce using rule 18 (expression -> expression SUP expression .)
-    ET              reduce using rule 18 (expression -> expression SUP expression .)
-    OU              reduce using rule 18 (expression -> expression SUP expression .)
-    SEMI            reduce using rule 18 (expression -> expression SUP expression .)
-    NAME            reduce using rule 18 (expression -> expression SUP expression .)
-    FOR             reduce using rule 18 (expression -> expression SUP expression .)
-    IF              reduce using rule 18 (expression -> expression SUP expression .)
-    PRINT           reduce using rule 18 (expression -> expression SUP expression .)
-    $end            reduce using rule 18 (expression -> expression SUP expression .)
-    TO              reduce using rule 18 (expression -> expression SUP expression .)
-    LACC            reduce using rule 18 (expression -> expression SUP expression .)
-    RPAREN          reduce using rule 18 (expression -> expression SUP expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-
-  ! PLUS            [ reduce using rule 18 (expression -> expression SUP expression .) ]
-  ! MINUS           [ reduce using rule 18 (expression -> expression SUP expression .) ]
-  ! TIMES           [ reduce using rule 18 (expression -> expression SUP expression .) ]
-  ! DIVIDE          [ reduce using rule 18 (expression -> expression SUP expression .) ]
-  ! or              [ shift and go to state 24 ]
-  ! and             [ shift and go to state 25 ]
-  ! SUP             [ shift and go to state 26 ]
-  ! INFF            [ shift and go to state 27 ]
-  ! ISEQUAL         [ shift and go to state 28 ]
-  ! NOTEQUAL        [ shift and go to state 29 ]
-  ! ET              [ shift and go to state 30 ]
-  ! OU              [ shift and go to state 31 ]
+    (6) statement -> WHILE expression RACC bloc . LACC
+    (2) bloc -> bloc . statement
+    (4) statement -> . NAME EQUALS expression SEMI
+    (5) statement -> . NAME EQUALS expression
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
+
+    LACC            shift and go to state 63
+    NAME            shift and go to state 4
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
+    statement                      shift and go to state 9
 
 state 46
 
-    (19) expression -> expression INFF expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
+    (14) expression -> expression PLUS expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            reduce using rule 14 (expression -> expression PLUS expression .)
+    PLUS            reduce using rule 14 (expression -> expression PLUS expression .)
+    MINUS           reduce using rule 14 (expression -> expression PLUS expression .)
+    or              reduce using rule 14 (expression -> expression PLUS expression .)
+    and             reduce using rule 14 (expression -> expression PLUS expression .)
+    SUP             reduce using rule 14 (expression -> expression PLUS expression .)
+    INFF            reduce using rule 14 (expression -> expression PLUS expression .)
+    ISEQUAL         reduce using rule 14 (expression -> expression PLUS expression .)
+    NOTEQUAL        reduce using rule 14 (expression -> expression PLUS expression .)
+    ET              reduce using rule 14 (expression -> expression PLUS expression .)
+    OU              reduce using rule 14 (expression -> expression PLUS expression .)
+    THEN            reduce using rule 14 (expression -> expression PLUS expression .)
+    SEMI            reduce using rule 14 (expression -> expression PLUS expression .)
+    NAME            reduce using rule 14 (expression -> expression PLUS expression .)
+    WHILE           reduce using rule 14 (expression -> expression PLUS expression .)
+    FOR             reduce using rule 14 (expression -> expression PLUS expression .)
+    IF              reduce using rule 14 (expression -> expression PLUS expression .)
+    PRINT           reduce using rule 14 (expression -> expression PLUS expression .)
+    $end            reduce using rule 14 (expression -> expression PLUS expression .)
+    TO              reduce using rule 14 (expression -> expression PLUS expression .)
+    LACC            reduce using rule 14 (expression -> expression PLUS expression .)
+    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+
+  ! TIMES           [ reduce using rule 14 (expression -> expression PLUS expression .) ]
+  ! DIVIDE          [ reduce using rule 14 (expression -> expression PLUS expression .) ]
+  ! PLUS            [ shift and go to state 26 ]
+  ! MINUS           [ shift and go to state 27 ]
+  ! or              [ shift and go to state 30 ]
+  ! and             [ shift and go to state 31 ]
+  ! SUP             [ shift and go to state 32 ]
+  ! INFF            [ shift and go to state 33 ]
+  ! ISEQUAL         [ shift and go to state 34 ]
+  ! NOTEQUAL        [ shift and go to state 35 ]
+  ! ET              [ shift and go to state 36 ]
+  ! OU              [ shift and go to state 37 ]
+
+
+state 47
+
+    (15) expression -> expression MINUS expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            reduce using rule 15 (expression -> expression MINUS expression .)
+    PLUS            reduce using rule 15 (expression -> expression MINUS expression .)
+    MINUS           reduce using rule 15 (expression -> expression MINUS expression .)
+    or              reduce using rule 15 (expression -> expression MINUS expression .)
+    and             reduce using rule 15 (expression -> expression MINUS expression .)
+    SUP             reduce using rule 15 (expression -> expression MINUS expression .)
+    INFF            reduce using rule 15 (expression -> expression MINUS expression .)
+    ISEQUAL         reduce using rule 15 (expression -> expression MINUS expression .)
+    NOTEQUAL        reduce using rule 15 (expression -> expression MINUS expression .)
+    ET              reduce using rule 15 (expression -> expression MINUS expression .)
+    OU              reduce using rule 15 (expression -> expression MINUS expression .)
+    THEN            reduce using rule 15 (expression -> expression MINUS expression .)
+    SEMI            reduce using rule 15 (expression -> expression MINUS expression .)
+    NAME            reduce using rule 15 (expression -> expression MINUS expression .)
+    WHILE           reduce using rule 15 (expression -> expression MINUS expression .)
+    FOR             reduce using rule 15 (expression -> expression MINUS expression .)
+    IF              reduce using rule 15 (expression -> expression MINUS expression .)
+    PRINT           reduce using rule 15 (expression -> expression MINUS expression .)
+    $end            reduce using rule 15 (expression -> expression MINUS expression .)
+    TO              reduce using rule 15 (expression -> expression MINUS expression .)
+    LACC            reduce using rule 15 (expression -> expression MINUS expression .)
+    RPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+
+  ! TIMES           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
+  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
+  ! PLUS            [ shift and go to state 26 ]
+  ! MINUS           [ shift and go to state 27 ]
+  ! or              [ shift and go to state 30 ]
+  ! and             [ shift and go to state 31 ]
+  ! SUP             [ shift and go to state 32 ]
+  ! INFF            [ shift and go to state 33 ]
+  ! ISEQUAL         [ shift and go to state 34 ]
+  ! NOTEQUAL        [ shift and go to state 35 ]
+  ! ET              [ shift and go to state 36 ]
+  ! OU              [ shift and go to state 37 ]
+
+
+state 48
+
+    (16) expression -> expression TIMES expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            reduce using rule 16 (expression -> expression TIMES expression .)
+    PLUS            reduce using rule 16 (expression -> expression TIMES expression .)
+    MINUS           reduce using rule 16 (expression -> expression TIMES expression .)
+    TIMES           reduce using rule 16 (expression -> expression TIMES expression .)
+    DIVIDE          reduce using rule 16 (expression -> expression TIMES expression .)
+    or              reduce using rule 16 (expression -> expression TIMES expression .)
+    and             reduce using rule 16 (expression -> expression TIMES expression .)
+    SUP             reduce using rule 16 (expression -> expression TIMES expression .)
+    INFF            reduce using rule 16 (expression -> expression TIMES expression .)
+    ISEQUAL         reduce using rule 16 (expression -> expression TIMES expression .)
+    NOTEQUAL        reduce using rule 16 (expression -> expression TIMES expression .)
+    ET              reduce using rule 16 (expression -> expression TIMES expression .)
+    OU              reduce using rule 16 (expression -> expression TIMES expression .)
+    THEN            reduce using rule 16 (expression -> expression TIMES expression .)
+    SEMI            reduce using rule 16 (expression -> expression TIMES expression .)
+    NAME            reduce using rule 16 (expression -> expression TIMES expression .)
+    WHILE           reduce using rule 16 (expression -> expression TIMES expression .)
+    FOR             reduce using rule 16 (expression -> expression TIMES expression .)
+    IF              reduce using rule 16 (expression -> expression TIMES expression .)
+    PRINT           reduce using rule 16 (expression -> expression TIMES expression .)
+    $end            reduce using rule 16 (expression -> expression TIMES expression .)
+    TO              reduce using rule 16 (expression -> expression TIMES expression .)
+    LACC            reduce using rule 16 (expression -> expression TIMES expression .)
+    RPAREN          reduce using rule 16 (expression -> expression TIMES expression .)
+
+  ! PLUS            [ shift and go to state 26 ]
+  ! MINUS           [ shift and go to state 27 ]
+  ! TIMES           [ shift and go to state 28 ]
+  ! DIVIDE          [ shift and go to state 29 ]
+  ! or              [ shift and go to state 30 ]
+  ! and             [ shift and go to state 31 ]
+  ! SUP             [ shift and go to state 32 ]
+  ! INFF            [ shift and go to state 33 ]
+  ! ISEQUAL         [ shift and go to state 34 ]
+  ! NOTEQUAL        [ shift and go to state 35 ]
+  ! ET              [ shift and go to state 36 ]
+  ! OU              [ shift and go to state 37 ]
+
+
+state 49
+
+    (17) expression -> expression DIVIDE expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            reduce using rule 17 (expression -> expression DIVIDE expression .)
+    PLUS            reduce using rule 17 (expression -> expression DIVIDE expression .)
+    MINUS           reduce using rule 17 (expression -> expression DIVIDE expression .)
+    TIMES           reduce using rule 17 (expression -> expression DIVIDE expression .)
+    DIVIDE          reduce using rule 17 (expression -> expression DIVIDE expression .)
+    or              reduce using rule 17 (expression -> expression DIVIDE expression .)
+    and             reduce using rule 17 (expression -> expression DIVIDE expression .)
+    SUP             reduce using rule 17 (expression -> expression DIVIDE expression .)
+    INFF            reduce using rule 17 (expression -> expression DIVIDE expression .)
+    ISEQUAL         reduce using rule 17 (expression -> expression DIVIDE expression .)
+    NOTEQUAL        reduce using rule 17 (expression -> expression DIVIDE expression .)
+    ET              reduce using rule 17 (expression -> expression DIVIDE expression .)
+    OU              reduce using rule 17 (expression -> expression DIVIDE expression .)
+    THEN            reduce using rule 17 (expression -> expression DIVIDE expression .)
+    SEMI            reduce using rule 17 (expression -> expression DIVIDE expression .)
+    NAME            reduce using rule 17 (expression -> expression DIVIDE expression .)
+    WHILE           reduce using rule 17 (expression -> expression DIVIDE expression .)
+    FOR             reduce using rule 17 (expression -> expression DIVIDE expression .)
+    IF              reduce using rule 17 (expression -> expression DIVIDE expression .)
+    PRINT           reduce using rule 17 (expression -> expression DIVIDE expression .)
+    $end            reduce using rule 17 (expression -> expression DIVIDE expression .)
+    TO              reduce using rule 17 (expression -> expression DIVIDE expression .)
+    LACC            reduce using rule 17 (expression -> expression DIVIDE expression .)
+    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)
+
+  ! PLUS            [ shift and go to state 26 ]
+  ! MINUS           [ shift and go to state 27 ]
+  ! TIMES           [ shift and go to state 28 ]
+  ! DIVIDE          [ shift and go to state 29 ]
+  ! or              [ shift and go to state 30 ]
+  ! and             [ shift and go to state 31 ]
+  ! SUP             [ shift and go to state 32 ]
+  ! INFF            [ shift and go to state 33 ]
+  ! ISEQUAL         [ shift and go to state 34 ]
+  ! NOTEQUAL        [ shift and go to state 35 ]
+  ! ET              [ shift and go to state 36 ]
+  ! OU              [ shift and go to state 37 ]
+
+
+state 50
+
+    (18) expression -> expression or expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            reduce using rule 18 (expression -> expression or expression .)
+    or              reduce using rule 18 (expression -> expression or expression .)
+    INFF            reduce using rule 18 (expression -> expression or expression .)
+    ISEQUAL         reduce using rule 18 (expression -> expression or expression .)
+    NOTEQUAL        reduce using rule 18 (expression -> expression or expression .)
+    ET              reduce using rule 18 (expression -> expression or expression .)
+    OU              reduce using rule 18 (expression -> expression or expression .)
+    THEN            reduce using rule 18 (expression -> expression or expression .)
+    SEMI            reduce using rule 18 (expression -> expression or expression .)
+    NAME            reduce using rule 18 (expression -> expression or expression .)
+    WHILE           reduce using rule 18 (expression -> expression or expression .)
+    FOR             reduce using rule 18 (expression -> expression or expression .)
+    IF              reduce using rule 18 (expression -> expression or expression .)
+    PRINT           reduce using rule 18 (expression -> expression or expression .)
+    $end            reduce using rule 18 (expression -> expression or expression .)
+    TO              reduce using rule 18 (expression -> expression or expression .)
+    LACC            reduce using rule 18 (expression -> expression or expression .)
+    RPAREN          reduce using rule 18 (expression -> expression or expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+
+  ! PLUS            [ reduce using rule 18 (expression -> expression or expression .) ]
+  ! MINUS           [ reduce using rule 18 (expression -> expression or expression .) ]
+  ! TIMES           [ reduce using rule 18 (expression -> expression or expression .) ]
+  ! DIVIDE          [ reduce using rule 18 (expression -> expression or expression .) ]
+  ! and             [ reduce using rule 18 (expression -> expression or expression .) ]
+  ! SUP             [ reduce using rule 18 (expression -> expression or expression .) ]
+  ! or              [ shift and go to state 30 ]
+  ! INFF            [ shift and go to state 33 ]
+  ! ISEQUAL         [ shift and go to state 34 ]
+  ! NOTEQUAL        [ shift and go to state 35 ]
+  ! ET              [ shift and go to state 36 ]
+  ! OU              [ shift and go to state 37 ]
+
+
+state 51
+
+    (19) expression -> expression and expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            reduce using rule 19 (expression -> expression and expression .)
+    or              reduce using rule 19 (expression -> expression and expression .)
+    and             reduce using rule 19 (expression -> expression and expression .)
+    INFF            reduce using rule 19 (expression -> expression and expression .)
+    ISEQUAL         reduce using rule 19 (expression -> expression and expression .)
+    NOTEQUAL        reduce using rule 19 (expression -> expression and expression .)
+    ET              reduce using rule 19 (expression -> expression and expression .)
+    OU              reduce using rule 19 (expression -> expression and expression .)
+    THEN            reduce using rule 19 (expression -> expression and expression .)
+    SEMI            reduce using rule 19 (expression -> expression and expression .)
+    NAME            reduce using rule 19 (expression -> expression and expression .)
+    WHILE           reduce using rule 19 (expression -> expression and expression .)
+    FOR             reduce using rule 19 (expression -> expression and expression .)
+    IF              reduce using rule 19 (expression -> expression and expression .)
+    PRINT           reduce using rule 19 (expression -> expression and expression .)
+    $end            reduce using rule 19 (expression -> expression and expression .)
+    TO              reduce using rule 19 (expression -> expression and expression .)
+    LACC            reduce using rule 19 (expression -> expression and expression .)
+    RPAREN          reduce using rule 19 (expression -> expression and expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    SUP             shift and go to state 32
+
+  ! PLUS            [ reduce using rule 19 (expression -> expression and expression .) ]
+  ! MINUS           [ reduce using rule 19 (expression -> expression and expression .) ]
+  ! TIMES           [ reduce using rule 19 (expression -> expression and expression .) ]
+  ! DIVIDE          [ reduce using rule 19 (expression -> expression and expression .) ]
+  ! SUP             [ reduce using rule 19 (expression -> expression and expression .) ]
+  ! or              [ shift and go to state 30 ]
+  ! and             [ shift and go to state 31 ]
+  ! INFF            [ shift and go to state 33 ]
+  ! ISEQUAL         [ shift and go to state 34 ]
+  ! NOTEQUAL        [ shift and go to state 35 ]
+  ! ET              [ shift and go to state 36 ]
+  ! OU              [ shift and go to state 37 ]
+
+
+state 52
+
+    (20) expression -> expression SUP expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    RACC            reduce using rule 20 (expression -> expression SUP expression .)
+    or              reduce using rule 20 (expression -> expression SUP expression .)
+    and             reduce using rule 20 (expression -> expression SUP expression .)
+    SUP             reduce using rule 20 (expression -> expression SUP expression .)
+    INFF            reduce using rule 20 (expression -> expression SUP expression .)
+    ISEQUAL         reduce using rule 20 (expression -> expression SUP expression .)
+    NOTEQUAL        reduce using rule 20 (expression -> expression SUP expression .)
+    ET              reduce using rule 20 (expression -> expression SUP expression .)
+    OU              reduce using rule 20 (expression -> expression SUP expression .)
+    THEN            reduce using rule 20 (expression -> expression SUP expression .)
+    SEMI            reduce using rule 20 (expression -> expression SUP expression .)
+    NAME            reduce using rule 20 (expression -> expression SUP expression .)
+    WHILE           reduce using rule 20 (expression -> expression SUP expression .)
+    FOR             reduce using rule 20 (expression -> expression SUP expression .)
+    IF              reduce using rule 20 (expression -> expression SUP expression .)
+    PRINT           reduce using rule 20 (expression -> expression SUP expression .)
+    $end            reduce using rule 20 (expression -> expression SUP expression .)
+    TO              reduce using rule 20 (expression -> expression SUP expression .)
+    LACC            reduce using rule 20 (expression -> expression SUP expression .)
+    RPAREN          reduce using rule 20 (expression -> expression SUP expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+
+  ! PLUS            [ reduce using rule 20 (expression -> expression SUP expression .) ]
+  ! MINUS           [ reduce using rule 20 (expression -> expression SUP expression .) ]
+  ! TIMES           [ reduce using rule 20 (expression -> expression SUP expression .) ]
+  ! DIVIDE          [ reduce using rule 20 (expression -> expression SUP expression .) ]
+  ! or              [ shift and go to state 30 ]
+  ! and             [ shift and go to state 31 ]
+  ! SUP             [ shift and go to state 32 ]
+  ! INFF            [ shift and go to state 33 ]
+  ! ISEQUAL         [ shift and go to state 34 ]
+  ! NOTEQUAL        [ shift and go to state 35 ]
+  ! ET              [ shift and go to state 36 ]
+  ! OU              [ shift and go to state 37 ]
+
+
+state 53
+
+    (21) expression -> expression INFF expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
 
   ! shift/reduce conflict for PLUS resolved as shift
   ! shift/reduce conflict for MINUS resolved as shift
@@ -1384,58 +1579,60 @@ state 46
   ! shift/reduce conflict for NOTEQUAL resolved as shift
   ! shift/reduce conflict for ET resolved as shift
   ! shift/reduce conflict for OU resolved as shift
-    THEN            reduce using rule 19 (expression -> expression INFF expression .)
-    SEMI            reduce using rule 19 (expression -> expression INFF expression .)
-    NAME            reduce using rule 19 (expression -> expression INFF expression .)
-    FOR             reduce using rule 19 (expression -> expression INFF expression .)
-    IF              reduce using rule 19 (expression -> expression INFF expression .)
-    PRINT           reduce using rule 19 (expression -> expression INFF expression .)
-    $end            reduce using rule 19 (expression -> expression INFF expression .)
-    TO              reduce using rule 19 (expression -> expression INFF expression .)
-    LACC            reduce using rule 19 (expression -> expression INFF expression .)
-    RPAREN          reduce using rule 19 (expression -> expression INFF expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
-
-  ! PLUS            [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! MINUS           [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! TIMES           [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! DIVIDE          [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! or              [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! and             [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! SUP             [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! INFF            [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! ISEQUAL         [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! NOTEQUAL        [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! ET              [ reduce using rule 19 (expression -> expression INFF expression .) ]
-  ! OU              [ reduce using rule 19 (expression -> expression INFF expression .) ]
+    RACC            reduce using rule 21 (expression -> expression INFF expression .)
+    THEN            reduce using rule 21 (expression -> expression INFF expression .)
+    SEMI            reduce using rule 21 (expression -> expression INFF expression .)
+    NAME            reduce using rule 21 (expression -> expression INFF expression .)
+    WHILE           reduce using rule 21 (expression -> expression INFF expression .)
+    FOR             reduce using rule 21 (expression -> expression INFF expression .)
+    IF              reduce using rule 21 (expression -> expression INFF expression .)
+    PRINT           reduce using rule 21 (expression -> expression INFF expression .)
+    $end            reduce using rule 21 (expression -> expression INFF expression .)
+    TO              reduce using rule 21 (expression -> expression INFF expression .)
+    LACC            reduce using rule 21 (expression -> expression INFF expression .)
+    RPAREN          reduce using rule 21 (expression -> expression INFF expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
+
+  ! PLUS            [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! MINUS           [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! TIMES           [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! DIVIDE          [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! or              [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! and             [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! SUP             [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! INFF            [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! ISEQUAL         [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! NOTEQUAL        [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! ET              [ reduce using rule 21 (expression -> expression INFF expression .) ]
+  ! OU              [ reduce using rule 21 (expression -> expression INFF expression .) ]
 
 
-state 47
+state 54
 
-    (20) expression -> expression ISEQUAL expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
+    (22) expression -> expression ISEQUAL expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
 
   ! shift/reduce conflict for PLUS resolved as shift
   ! shift/reduce conflict for MINUS resolved as shift
@@ -1449,58 +1646,60 @@ state 47
   ! shift/reduce conflict for NOTEQUAL resolved as shift
   ! shift/reduce conflict for ET resolved as shift
   ! shift/reduce conflict for OU resolved as shift
-    THEN            reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    SEMI            reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    NAME            reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    FOR             reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    IF              reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    PRINT           reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    $end            reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    TO              reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    LACC            reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    RPAREN          reduce using rule 20 (expression -> expression ISEQUAL expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
-
-  ! PLUS            [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! MINUS           [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! TIMES           [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! DIVIDE          [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! or              [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! and             [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! SUP             [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! INFF            [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! ISEQUAL         [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! NOTEQUAL        [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! ET              [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
-  ! OU              [ reduce using rule 20 (expression -> expression ISEQUAL expression .) ]
+    RACC            reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    THEN            reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    SEMI            reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    NAME            reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    WHILE           reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    FOR             reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    IF              reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    PRINT           reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    $end            reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    TO              reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    LACC            reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    RPAREN          reduce using rule 22 (expression -> expression ISEQUAL expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
+
+  ! PLUS            [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! MINUS           [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! TIMES           [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! DIVIDE          [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! or              [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! and             [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! SUP             [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! INFF            [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! ISEQUAL         [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! NOTEQUAL        [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! ET              [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
+  ! OU              [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
 
 
-state 48
+state 55
 
-    (21) expression -> expression NOTEQUAL expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
+    (23) expression -> expression NOTEQUAL expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
 
   ! shift/reduce conflict for PLUS resolved as shift
   ! shift/reduce conflict for MINUS resolved as shift
@@ -1514,58 +1713,60 @@ state 48
   ! shift/reduce conflict for NOTEQUAL resolved as shift
   ! shift/reduce conflict for ET resolved as shift
   ! shift/reduce conflict for OU resolved as shift
-    THEN            reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    SEMI            reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    NAME            reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    FOR             reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    IF              reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    PRINT           reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    $end            reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    TO              reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    LACC            reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    RPAREN          reduce using rule 21 (expression -> expression NOTEQUAL expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
-
-  ! PLUS            [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! MINUS           [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! TIMES           [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! DIVIDE          [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! or              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! and             [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! SUP             [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! INFF            [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! ISEQUAL         [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! NOTEQUAL        [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! ET              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
-  ! OU              [ reduce using rule 21 (expression -> expression NOTEQUAL expression .) ]
+    RACC            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    THEN            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    SEMI            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    NAME            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    WHILE           reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    FOR             reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    IF              reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    PRINT           reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    $end            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    TO              reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    LACC            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    RPAREN          reduce using rule 23 (expression -> expression NOTEQUAL expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
+
+  ! PLUS            [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! MINUS           [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! TIMES           [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! DIVIDE          [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! or              [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! and             [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! SUP             [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! INFF            [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! ISEQUAL         [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! NOTEQUAL        [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! ET              [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
+  ! OU              [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
 
 
-state 49
+state 56
 
-    (22) expression -> expression ET expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
+    (24) expression -> expression ET expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
 
   ! shift/reduce conflict for PLUS resolved as shift
   ! shift/reduce conflict for MINUS resolved as shift
@@ -1579,58 +1780,60 @@ state 49
   ! shift/reduce conflict for NOTEQUAL resolved as shift
   ! shift/reduce conflict for ET resolved as shift
   ! shift/reduce conflict for OU resolved as shift
-    THEN            reduce using rule 22 (expression -> expression ET expression .)
-    SEMI            reduce using rule 22 (expression -> expression ET expression .)
-    NAME            reduce using rule 22 (expression -> expression ET expression .)
-    FOR             reduce using rule 22 (expression -> expression ET expression .)
-    IF              reduce using rule 22 (expression -> expression ET expression .)
-    PRINT           reduce using rule 22 (expression -> expression ET expression .)
-    $end            reduce using rule 22 (expression -> expression ET expression .)
-    TO              reduce using rule 22 (expression -> expression ET expression .)
-    LACC            reduce using rule 22 (expression -> expression ET expression .)
-    RPAREN          reduce using rule 22 (expression -> expression ET expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
-
-  ! PLUS            [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! MINUS           [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! TIMES           [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! DIVIDE          [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! or              [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! and             [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! SUP             [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! INFF            [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! ISEQUAL         [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! NOTEQUAL        [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! ET              [ reduce using rule 22 (expression -> expression ET expression .) ]
-  ! OU              [ reduce using rule 22 (expression -> expression ET expression .) ]
+    RACC            reduce using rule 24 (expression -> expression ET expression .)
+    THEN            reduce using rule 24 (expression -> expression ET expression .)
+    SEMI            reduce using rule 24 (expression -> expression ET expression .)
+    NAME            reduce using rule 24 (expression -> expression ET expression .)
+    WHILE           reduce using rule 24 (expression -> expression ET expression .)
+    FOR             reduce using rule 24 (expression -> expression ET expression .)
+    IF              reduce using rule 24 (expression -> expression ET expression .)
+    PRINT           reduce using rule 24 (expression -> expression ET expression .)
+    $end            reduce using rule 24 (expression -> expression ET expression .)
+    TO              reduce using rule 24 (expression -> expression ET expression .)
+    LACC            reduce using rule 24 (expression -> expression ET expression .)
+    RPAREN          reduce using rule 24 (expression -> expression ET expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
+
+  ! PLUS            [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! MINUS           [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! TIMES           [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! DIVIDE          [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! or              [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! and             [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! SUP             [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! INFF            [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! ISEQUAL         [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! NOTEQUAL        [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! ET              [ reduce using rule 24 (expression -> expression ET expression .) ]
+  ! OU              [ reduce using rule 24 (expression -> expression ET expression .) ]
 
 
-state 50
+state 57
 
-    (23) expression -> expression OU expression .
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
+    (25) expression -> expression OU expression .
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
 
   ! shift/reduce conflict for PLUS resolved as shift
   ! shift/reduce conflict for MINUS resolved as shift
@@ -1644,532 +1847,597 @@ state 50
   ! shift/reduce conflict for NOTEQUAL resolved as shift
   ! shift/reduce conflict for ET resolved as shift
   ! shift/reduce conflict for OU resolved as shift
-    THEN            reduce using rule 23 (expression -> expression OU expression .)
-    SEMI            reduce using rule 23 (expression -> expression OU expression .)
-    NAME            reduce using rule 23 (expression -> expression OU expression .)
-    FOR             reduce using rule 23 (expression -> expression OU expression .)
-    IF              reduce using rule 23 (expression -> expression OU expression .)
-    PRINT           reduce using rule 23 (expression -> expression OU expression .)
-    $end            reduce using rule 23 (expression -> expression OU expression .)
-    TO              reduce using rule 23 (expression -> expression OU expression .)
-    LACC            reduce using rule 23 (expression -> expression OU expression .)
-    RPAREN          reduce using rule 23 (expression -> expression OU expression .)
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
-
-  ! PLUS            [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! MINUS           [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! TIMES           [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! DIVIDE          [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! or              [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! and             [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! SUP             [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! INFF            [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! ISEQUAL         [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! NOTEQUAL        [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! ET              [ reduce using rule 23 (expression -> expression OU expression .) ]
-  ! OU              [ reduce using rule 23 (expression -> expression OU expression .) ]
+    RACC            reduce using rule 25 (expression -> expression OU expression .)
+    THEN            reduce using rule 25 (expression -> expression OU expression .)
+    SEMI            reduce using rule 25 (expression -> expression OU expression .)
+    NAME            reduce using rule 25 (expression -> expression OU expression .)
+    WHILE           reduce using rule 25 (expression -> expression OU expression .)
+    FOR             reduce using rule 25 (expression -> expression OU expression .)
+    IF              reduce using rule 25 (expression -> expression OU expression .)
+    PRINT           reduce using rule 25 (expression -> expression OU expression .)
+    $end            reduce using rule 25 (expression -> expression OU expression .)
+    TO              reduce using rule 25 (expression -> expression OU expression .)
+    LACC            reduce using rule 25 (expression -> expression OU expression .)
+    RPAREN          reduce using rule 25 (expression -> expression OU expression .)
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
+
+  ! PLUS            [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! MINUS           [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! TIMES           [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! DIVIDE          [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! or              [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! and             [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! SUP             [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! INFF            [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! ISEQUAL         [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! NOTEQUAL        [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! ET              [ reduce using rule 25 (expression -> expression OU expression .) ]
+  ! OU              [ reduce using rule 25 (expression -> expression OU expression .) ]
 
 
-state 51
+state 58
 
-    (25) expression -> LPAREN expression RPAREN .
-
-    THEN            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    PLUS            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    MINUS           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    TIMES           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    DIVIDE          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    or              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    and             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    SUP             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    INFF            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    ISEQUAL         reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    NOTEQUAL        reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    ET              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    OU              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    SEMI            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    NAME            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    FOR             reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    IF              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    PRINT           reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    $end            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    TO              reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    LACC            reduce using rule 25 (expression -> LPAREN expression RPAREN .)
-    RPAREN          reduce using rule 25 (expression -> LPAREN expression RPAREN .)
+    (29) expression -> LPAREN expression RPAREN .
+
+    RACC            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    PLUS            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    MINUS           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    TIMES           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    DIVIDE          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    or              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    and             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    SUP             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    INFF            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    ISEQUAL         reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    NOTEQUAL        reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    ET              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    OU              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    THEN            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    SEMI            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    NAME            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    WHILE           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    FOR             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    IF              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    PRINT           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    $end            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    TO              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    LACC            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
+    RPAREN          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
 
 
-state 52
+state 59
 
-    (11) statement -> PRINT LPAREN expression RPAREN . SEMI
+    (7) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN
 
-    SEMI            shift and go to state 55
+    NUMBER          shift and go to state 64
 
 
-state 53
+state 60
 
-    (6) statement -> FOR LPAREN statement TO NUMBER . COMMA statement RPAREN RACC bloc LACC
+    (8) statement -> IF expression THEN statement .
 
-    COMMA           shift and go to state 56
+    NAME            reduce using rule 8 (statement -> IF expression THEN statement .)
+    WHILE           reduce using rule 8 (statement -> IF expression THEN statement .)
+    FOR             reduce using rule 8 (statement -> IF expression THEN statement .)
+    IF              reduce using rule 8 (statement -> IF expression THEN statement .)
+    PRINT           reduce using rule 8 (statement -> IF expression THEN statement .)
+    $end            reduce using rule 8 (statement -> IF expression THEN statement .)
+    TO              reduce using rule 8 (statement -> IF expression THEN statement .)
+    LACC            reduce using rule 8 (statement -> IF expression THEN statement .)
+    RPAREN          reduce using rule 8 (statement -> IF expression THEN statement .)
 
 
-state 54
+state 61
 
-    (8) statement -> IF expression THEN RACC bloc . LACC
-    (9) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
-    (2) bloc -> bloc . statement
+    (9) statement -> IF expression THEN RACC . bloc LACC
+    (10) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
+    (2) bloc -> . bloc statement
+    (3) bloc -> . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
-
-    LACC            shift and go to state 57
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
+
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    statement                      shift and go to state 8
+    bloc                           shift and go to state 65
+    statement                      shift and go to state 3
 
-state 55
+state 62
 
-    (11) statement -> PRINT LPAREN expression RPAREN SEMI .
+    (12) statement -> PRINT LPAREN expression RPAREN . SEMI
 
-    NAME            reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMI .)
-    FOR             reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMI .)
-    IF              reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMI .)
-    PRINT           reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMI .)
-    $end            reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMI .)
-    TO              reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMI .)
-    LACC            reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMI .)
-    RPAREN          reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    SEMI            shift and go to state 66
 
 
-state 56
+state 63
+
+    (6) statement -> WHILE expression RACC bloc LACC .
+
+    NAME            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+    WHILE           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+    FOR             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+    IF              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+    PRINT           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+    $end            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+    TO              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+    LACC            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+    RPAREN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
+
+
+state 64
+
+    (7) statement -> FOR LPAREN statement TO NUMBER . COMMA statement RPAREN
+
+    COMMA           shift and go to state 67
+
 
-    (6) statement -> FOR LPAREN statement TO NUMBER COMMA . statement RPAREN RACC bloc LACC
+state 65
+
+    (9) statement -> IF expression THEN RACC bloc . LACC
+    (10) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
+    (2) bloc -> bloc . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
-
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
+
+    LACC            shift and go to state 68
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    statement                      shift and go to state 58
+    statement                      shift and go to state 9
 
-state 57
+state 66
 
-    (8) statement -> IF expression THEN RACC bloc LACC .
-    (9) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC
+    (12) statement -> PRINT LPAREN expression RPAREN SEMI .
 
-    NAME            reduce using rule 8 (statement -> IF expression THEN RACC bloc LACC .)
-    FOR             reduce using rule 8 (statement -> IF expression THEN RACC bloc LACC .)
-    IF              reduce using rule 8 (statement -> IF expression THEN RACC bloc LACC .)
-    PRINT           reduce using rule 8 (statement -> IF expression THEN RACC bloc LACC .)
-    $end            reduce using rule 8 (statement -> IF expression THEN RACC bloc LACC .)
-    TO              reduce using rule 8 (statement -> IF expression THEN RACC bloc LACC .)
-    LACC            reduce using rule 8 (statement -> IF expression THEN RACC bloc LACC .)
-    RPAREN          reduce using rule 8 (statement -> IF expression THEN RACC bloc LACC .)
-    ELSEIF          shift and go to state 59
-    ELSE            shift and go to state 60
+    NAME            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    WHILE           reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    FOR             reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    IF              reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    PRINT           reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    $end            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    TO              reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    LACC            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
+    RPAREN          reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
 
 
-state 58
+state 67
 
-    (6) statement -> FOR LPAREN statement TO NUMBER COMMA statement . RPAREN RACC bloc LACC
+    (7) statement -> FOR LPAREN statement TO NUMBER COMMA . statement RPAREN
+    (4) statement -> . NAME EQUALS expression SEMI
+    (5) statement -> . NAME EQUALS expression
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
 
-    RPAREN          shift and go to state 61
+    NAME            shift and go to state 4
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
+    statement                      shift and go to state 69
 
-state 59
+state 68
 
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (12) expression -> . expression PLUS expression
-    (13) expression -> . expression MINUS expression
-    (14) expression -> . expression TIMES expression
-    (15) expression -> . expression DIVIDE expression
-    (16) expression -> . expression or expression
-    (17) expression -> . expression and expression
-    (18) expression -> . expression SUP expression
-    (19) expression -> . expression INFF expression
-    (20) expression -> . expression ISEQUAL expression
-    (21) expression -> . expression NOTEQUAL expression
-    (22) expression -> . expression ET expression
-    (23) expression -> . expression OU expression
-    (24) expression -> . MINUS expression
-    (25) expression -> . LPAREN expression RPAREN
-    (26) expression -> . NUMBER
-    (27) expression -> . NAME
-
-    MINUS           shift and go to state 12
-    LPAREN          shift and go to state 13
-    NUMBER          shift and go to state 14
-    NAME            shift and go to state 15
-
-    expression                     shift and go to state 62
+    (9) statement -> IF expression THEN RACC bloc LACC .
+    (10) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC
 
-state 60
+    NAME            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    WHILE           reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    FOR             reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    IF              reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    PRINT           reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    $end            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    TO              reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    LACC            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    RPAREN          reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
+    ELSEIF          shift and go to state 70
+    ELSE            shift and go to state 71
 
-    (10) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC
 
-    RACC            shift and go to state 63
+state 69
 
+    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement . RPAREN
 
-state 61
+    RPAREN          shift and go to state 72
 
-    (6) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN . RACC bloc LACC
 
-    RACC            shift and go to state 64
+state 70
 
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (14) expression -> . expression PLUS expression
+    (15) expression -> . expression MINUS expression
+    (16) expression -> . expression TIMES expression
+    (17) expression -> . expression DIVIDE expression
+    (18) expression -> . expression or expression
+    (19) expression -> . expression and expression
+    (20) expression -> . expression SUP expression
+    (21) expression -> . expression INFF expression
+    (22) expression -> . expression ISEQUAL expression
+    (23) expression -> . expression NOTEQUAL expression
+    (24) expression -> . expression ET expression
+    (25) expression -> . expression OU expression
+    (28) expression -> . MINUS expression
+    (29) expression -> . LPAREN expression RPAREN
+    (30) expression -> . NUMBER
+    (31) expression -> . NAME
+
+    MINUS           shift and go to state 14
+    LPAREN          shift and go to state 15
+    NUMBER          shift and go to state 16
+    NAME            shift and go to state 17
+
+    expression                     shift and go to state 73
 
-state 62
+state 71
 
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
-    (12) expression -> expression . PLUS expression
-    (13) expression -> expression . MINUS expression
-    (14) expression -> expression . TIMES expression
-    (15) expression -> expression . DIVIDE expression
-    (16) expression -> expression . or expression
-    (17) expression -> expression . and expression
-    (18) expression -> expression . SUP expression
-    (19) expression -> expression . INFF expression
-    (20) expression -> expression . ISEQUAL expression
-    (21) expression -> expression . NOTEQUAL expression
-    (22) expression -> expression . ET expression
-    (23) expression -> expression . OU expression
-
-    THEN            shift and go to state 65
-    PLUS            shift and go to state 20
-    MINUS           shift and go to state 21
-    TIMES           shift and go to state 22
-    DIVIDE          shift and go to state 23
-    or              shift and go to state 24
-    and             shift and go to state 25
-    SUP             shift and go to state 26
-    INFF            shift and go to state 27
-    ISEQUAL         shift and go to state 28
-    NOTEQUAL        shift and go to state 29
-    ET              shift and go to state 30
-    OU              shift and go to state 31
+    (11) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC
 
+    RACC            shift and go to state 74
 
-state 63
 
-    (10) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
-    (2) bloc -> . bloc statement
-    (3) bloc -> . statement
-    (4) statement -> . NAME EQUALS expression SEMI
-    (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
+state 72
 
-    NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .
 
-    bloc                           shift and go to state 66
-    statement                      shift and go to state 3
+    NAME            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
+    WHILE           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
+    FOR             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
+    IF              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
+    PRINT           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
+    $end            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
+    TO              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
+    LACC            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
+    RPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
 
-state 64
 
-    (6) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC . bloc LACC
+state 73
+
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
+    (14) expression -> expression . PLUS expression
+    (15) expression -> expression . MINUS expression
+    (16) expression -> expression . TIMES expression
+    (17) expression -> expression . DIVIDE expression
+    (18) expression -> expression . or expression
+    (19) expression -> expression . and expression
+    (20) expression -> expression . SUP expression
+    (21) expression -> expression . INFF expression
+    (22) expression -> expression . ISEQUAL expression
+    (23) expression -> expression . NOTEQUAL expression
+    (24) expression -> expression . ET expression
+    (25) expression -> expression . OU expression
+
+    THEN            shift and go to state 75
+    PLUS            shift and go to state 26
+    MINUS           shift and go to state 27
+    TIMES           shift and go to state 28
+    DIVIDE          shift and go to state 29
+    or              shift and go to state 30
+    and             shift and go to state 31
+    SUP             shift and go to state 32
+    INFF            shift and go to state 33
+    ISEQUAL         shift and go to state 34
+    NOTEQUAL        shift and go to state 35
+    ET              shift and go to state 36
+    OU              shift and go to state 37
+
+
+state 74
+
+    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
     (2) bloc -> . bloc statement
     (3) bloc -> . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
 
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
+    bloc                           shift and go to state 76
     statement                      shift and go to state 3
-    bloc                           shift and go to state 67
-
-state 65
-
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
-
-    RACC            shift and go to state 68
 
+state 75
 
-state 66
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
 
-    (10) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
-    (2) bloc -> bloc . statement
-    (4) statement -> . NAME EQUALS expression SEMI
-    (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
-
-    LACC            shift and go to state 69
-    NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    RACC            shift and go to state 77
 
-    statement                      shift and go to state 8
 
-state 67
+state 76
 
-    (6) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc . LACC
+    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
     (2) bloc -> bloc . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
-
-    LACC            shift and go to state 70
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
+
+    LACC            shift and go to state 78
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    statement                      shift and go to state 8
+    statement                      shift and go to state 9
 
-state 68
+state 77
 
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
     (2) bloc -> . bloc statement
     (3) bloc -> . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
 
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    bloc                           shift and go to state 71
+    bloc                           shift and go to state 79
     statement                      shift and go to state 3
 
-state 69
-
-    (10) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .
+state 78
 
-    NAME            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    FOR             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    IF              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    PRINT           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    $end            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    TO              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    LACC            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    RPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .
 
+    NAME            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    WHILE           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    FOR             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    IF              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    PRINT           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    $end            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    TO              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    LACC            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    RPAREN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
 
-state 70
-
-    (6) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .
 
-    NAME            reduce using rule 6 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
-    FOR             reduce using rule 6 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
-    IF              reduce using rule 6 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
-    PRINT           reduce using rule 6 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
-    $end            reduce using rule 6 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
-    TO              reduce using rule 6 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
-    LACC            reduce using rule 6 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
-    RPAREN          reduce using rule 6 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
+state 79
 
-
-state 71
-
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
     (2) bloc -> bloc . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
-
-    LACC            shift and go to state 72
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
+
+    LACC            shift and go to state 80
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    statement                      shift and go to state 8
+    statement                      shift and go to state 9
 
-state 72
+state 80
 
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC
 
-    ELSE            shift and go to state 73
+    ELSE            shift and go to state 81
 
 
-state 73
+state 81
 
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC
 
-    RACC            shift and go to state 74
+    RACC            shift and go to state 82
 
 
-state 74
+state 82
 
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
     (2) bloc -> . bloc statement
     (3) bloc -> . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
 
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    bloc                           shift and go to state 75
+    bloc                           shift and go to state 83
     statement                      shift and go to state 3
 
-state 75
+state 83
 
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
     (2) bloc -> bloc . statement
     (4) statement -> . NAME EQUALS expression SEMI
     (5) statement -> . NAME EQUALS expression
-    (6) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
-    (7) statement -> . IF expression THEN statement
-    (8) statement -> . IF expression THEN RACC bloc LACC
-    (9) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (10) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
-    (11) statement -> . PRINT LPAREN expression RPAREN SEMI
-
-    LACC            shift and go to state 76
+    (6) statement -> . WHILE expression RACC bloc LACC
+    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
+    (8) statement -> . IF expression THEN statement
+    (9) statement -> . IF expression THEN RACC bloc LACC
+    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
+    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
+    (13) statement -> . PRINT STRING SEMI
+    (26) statement -> . NAME INCR SEMI
+    (27) statement -> . NAME DECR SEMI
+
+    LACC            shift and go to state 84
     NAME            shift and go to state 4
-    FOR             shift and go to state 5
-    IF              shift and go to state 6
-    PRINT           shift and go to state 7
+    WHILE           shift and go to state 5
+    FOR             shift and go to state 6
+    IF              shift and go to state 7
+    PRINT           shift and go to state 8
 
-    statement                      shift and go to state 8
+    statement                      shift and go to state 9
 
-state 76
+state 84
 
-    (9) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .
+    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .
 
-    NAME            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    FOR             reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    IF              reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    PRINT           reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    $end            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    TO              reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    LACC            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
-    RPAREN          reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    NAME            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    WHILE           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    FOR             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    IF              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    PRINT           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    $end            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    TO              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    LACC            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
+    RPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
 
 WARNING: 
 WARNING: Conflicts:
 WARNING: 
-WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
-WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
-WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
-WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
-WARNING: shift/reduce conflict for or in state 46 resolved as shift
-WARNING: shift/reduce conflict for and in state 46 resolved as shift
-WARNING: shift/reduce conflict for SUP in state 46 resolved as shift
-WARNING: shift/reduce conflict for INFF in state 46 resolved as shift
-WARNING: shift/reduce conflict for ISEQUAL in state 46 resolved as shift
-WARNING: shift/reduce conflict for NOTEQUAL in state 46 resolved as shift
-WARNING: shift/reduce conflict for ET in state 46 resolved as shift
-WARNING: shift/reduce conflict for OU in state 46 resolved as shift
-WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
-WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
-WARNING: shift/reduce conflict for TIMES in state 47 resolved as shift
-WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
-WARNING: shift/reduce conflict for or in state 47 resolved as shift
-WARNING: shift/reduce conflict for and in state 47 resolved as shift
-WARNING: shift/reduce conflict for SUP in state 47 resolved as shift
-WARNING: shift/reduce conflict for INFF in state 47 resolved as shift
-WARNING: shift/reduce conflict for ISEQUAL in state 47 resolved as shift
-WARNING: shift/reduce conflict for NOTEQUAL in state 47 resolved as shift
-WARNING: shift/reduce conflict for ET in state 47 resolved as shift
-WARNING: shift/reduce conflict for OU in state 47 resolved as shift
-WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
-WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
-WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
-WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
-WARNING: shift/reduce conflict for or in state 48 resolved as shift
-WARNING: shift/reduce conflict for and in state 48 resolved as shift
-WARNING: shift/reduce conflict for SUP in state 48 resolved as shift
-WARNING: shift/reduce conflict for INFF in state 48 resolved as shift
-WARNING: shift/reduce conflict for ISEQUAL in state 48 resolved as shift
-WARNING: shift/reduce conflict for NOTEQUAL in state 48 resolved as shift
-WARNING: shift/reduce conflict for ET in state 48 resolved as shift
-WARNING: shift/reduce conflict for OU in state 48 resolved as shift
-WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
-WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
-WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
-WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
-WARNING: shift/reduce conflict for or in state 49 resolved as shift
-WARNING: shift/reduce conflict for and in state 49 resolved as shift
-WARNING: shift/reduce conflict for SUP in state 49 resolved as shift
-WARNING: shift/reduce conflict for INFF in state 49 resolved as shift
-WARNING: shift/reduce conflict for ISEQUAL in state 49 resolved as shift
-WARNING: shift/reduce conflict for NOTEQUAL in state 49 resolved as shift
-WARNING: shift/reduce conflict for ET in state 49 resolved as shift
-WARNING: shift/reduce conflict for OU in state 49 resolved as shift
-WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
-WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
-WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
-WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
-WARNING: shift/reduce conflict for or in state 50 resolved as shift
-WARNING: shift/reduce conflict for and in state 50 resolved as shift
-WARNING: shift/reduce conflict for SUP in state 50 resolved as shift
-WARNING: shift/reduce conflict for INFF in state 50 resolved as shift
-WARNING: shift/reduce conflict for ISEQUAL in state 50 resolved as shift
-WARNING: shift/reduce conflict for NOTEQUAL in state 50 resolved as shift
-WARNING: shift/reduce conflict for ET in state 50 resolved as shift
-WARNING: shift/reduce conflict for OU in state 50 resolved as shift
+WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
+WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
+WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
+WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
+WARNING: shift/reduce conflict for or in state 53 resolved as shift
+WARNING: shift/reduce conflict for and in state 53 resolved as shift
+WARNING: shift/reduce conflict for SUP in state 53 resolved as shift
+WARNING: shift/reduce conflict for INFF in state 53 resolved as shift
+WARNING: shift/reduce conflict for ISEQUAL in state 53 resolved as shift
+WARNING: shift/reduce conflict for NOTEQUAL in state 53 resolved as shift
+WARNING: shift/reduce conflict for ET in state 53 resolved as shift
+WARNING: shift/reduce conflict for OU in state 53 resolved as shift
+WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
+WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
+WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
+WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
+WARNING: shift/reduce conflict for or in state 54 resolved as shift
+WARNING: shift/reduce conflict for and in state 54 resolved as shift
+WARNING: shift/reduce conflict for SUP in state 54 resolved as shift
+WARNING: shift/reduce conflict for INFF in state 54 resolved as shift
+WARNING: shift/reduce conflict for ISEQUAL in state 54 resolved as shift
+WARNING: shift/reduce conflict for NOTEQUAL in state 54 resolved as shift
+WARNING: shift/reduce conflict for ET in state 54 resolved as shift
+WARNING: shift/reduce conflict for OU in state 54 resolved as shift
+WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
+WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
+WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
+WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
+WARNING: shift/reduce conflict for or in state 55 resolved as shift
+WARNING: shift/reduce conflict for and in state 55 resolved as shift
+WARNING: shift/reduce conflict for SUP in state 55 resolved as shift
+WARNING: shift/reduce conflict for INFF in state 55 resolved as shift
+WARNING: shift/reduce conflict for ISEQUAL in state 55 resolved as shift
+WARNING: shift/reduce conflict for NOTEQUAL in state 55 resolved as shift
+WARNING: shift/reduce conflict for ET in state 55 resolved as shift
+WARNING: shift/reduce conflict for OU in state 55 resolved as shift
+WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
+WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
+WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
+WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
+WARNING: shift/reduce conflict for or in state 56 resolved as shift
+WARNING: shift/reduce conflict for and in state 56 resolved as shift
+WARNING: shift/reduce conflict for SUP in state 56 resolved as shift
+WARNING: shift/reduce conflict for INFF in state 56 resolved as shift
+WARNING: shift/reduce conflict for ISEQUAL in state 56 resolved as shift
+WARNING: shift/reduce conflict for NOTEQUAL in state 56 resolved as shift
+WARNING: shift/reduce conflict for ET in state 56 resolved as shift
+WARNING: shift/reduce conflict for OU in state 56 resolved as shift
+WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
+WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
+WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
+WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
+WARNING: shift/reduce conflict for or in state 57 resolved as shift
+WARNING: shift/reduce conflict for and in state 57 resolved as shift
+WARNING: shift/reduce conflict for SUP in state 57 resolved as shift
+WARNING: shift/reduce conflict for INFF in state 57 resolved as shift
+WARNING: shift/reduce conflict for ISEQUAL in state 57 resolved as shift
+WARNING: shift/reduce conflict for NOTEQUAL in state 57 resolved as shift
+WARNING: shift/reduce conflict for ET in state 57 resolved as shift
+WARNING: shift/reduce conflict for OU in state 57 resolved as shift
diff --git a/parsetab.py b/parsetab.py
index 699384c..59f78b2 100644
--- a/parsetab.py
+++ b/parsetab.py
@@ -6,9 +6,9 @@ _tabversion = '3.10'
 
 _lr_method = 'LALR'
 
-_lr_signature = 'leftorleftandnonassocEQUALSSUPleftPLUSMINUSleftTIMESDIVIDECOMMA DIVIDE ELSE ELSEIF EQUALS ET FOR IF INFF ISEQUAL LACC LPAREN MINUS NAME NOTEQUAL NUMBER OU PLUS PRINT RACC RPAREN SEMI SUP THEN TIMES TO and orstart : bloc bloc : bloc statement\n    | statementstatement : NAME EQUALS expression SEMI \n                 | NAME EQUALS expression  statement : FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC  statement : IF expression THEN statement\n                  | IF expression THEN RACC bloc LACC  \n                  | IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n                  | IF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n    \n    statement : PRINT LPAREN expression RPAREN SEMIexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression or expression\n                  | expression and expression\n                  | expression SUP expression\n                  | expression INFF expression\n                  | expression ISEQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression ET expression\n                  | expression OU expression\n\n                  expression : MINUS expression expression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
+_lr_signature = 'leftorleftandnonassocEQUALSSUPleftPLUSMINUSleftTIMESDIVIDECOMMA COMMENT DECR DIVIDE ELSE ELSEIF EQUALS ET FOR IF INCR INFF ISEQUAL LACC LPAREN MINUS NAME NOTEQUAL NUMBER OU PLUS PRINT RACC RPAREN SEMI STRING SUP THEN TIMES TO WHILE and orstart : bloc bloc : bloc statement\n    | statementstatement : NAME EQUALS expression SEMI \n                 | NAME EQUALS expression  statement : WHILE expression RACC bloc LACC  statement : FOR LPAREN statement TO NUMBER COMMA statement RPAREN  statement : IF expression THEN statement\n                  | IF expression THEN RACC bloc LACC  \n                  | IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n                  | IF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n    \n    statement : PRINT LPAREN expression RPAREN SEMI \n                 | PRINT STRING SEMIexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression or expression\n                  | expression and expression\n                  | expression SUP expression\n                  | expression INFF expression\n                  | expression ISEQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression ET expression\n                  | expression OU expression\n\n                   statement : NAME INCR SEMI \n                  | NAME DECR SEMIexpression : MINUS expression expression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
     
-_lr_action_items = {'NAME':([0,2,3,6,8,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,59,63,64,66,67,68,69,70,71,74,75,76,],[4,4,-3,15,-2,15,4,15,15,-26,-27,15,-5,4,15,15,15,15,15,15,15,15,15,15,15,15,-24,-4,-7,4,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,4,-11,4,-8,15,4,4,4,4,4,-10,-6,4,4,4,-9,]),'FOR':([0,2,3,8,10,14,15,17,19,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,63,64,66,67,68,69,70,71,74,75,76,],[5,5,-3,-2,5,-26,-27,-5,5,-24,-4,-7,5,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,5,-11,5,-8,5,5,5,5,5,-10,-6,5,5,5,-9,]),'IF':([0,2,3,8,10,14,15,17,19,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,63,64,66,67,68,69,70,71,74,75,76,],[6,6,-3,-2,6,-26,-27,-5,6,-24,-4,-7,6,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,6,-11,6,-8,6,6,6,6,6,-10,-6,6,6,6,-9,]),'PRINT':([0,2,3,8,10,14,15,17,19,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,63,64,66,67,68,69,70,71,74,75,76,],[7,7,-3,-2,7,-26,-27,-5,7,-24,-4,-7,7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,7,-11,7,-8,7,7,7,7,7,-10,-6,7,7,7,-9,]),'$end':([1,2,3,8,14,15,17,32,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,69,70,76,],[0,-1,-3,-2,-26,-27,-5,-24,-4,-7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-11,-8,-10,-6,-9,]),'LACC':([3,8,14,15,17,32,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,66,67,69,70,71,75,76,],[-3,-2,-26,-27,-5,-24,-4,-7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,57,-11,-8,69,70,-10,-6,72,76,-9,]),'EQUALS':([4,],[9,]),'LPAREN':([5,6,7,9,12,13,16,20,21,22,23,24,25,26,27,28,29,30,31,59,],[10,13,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'MINUS':([6,9,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,],[12,12,21,12,12,-26,-27,12,21,12,12,12,12,12,12,12,12,12,12,12,12,-24,21,21,-12,-13,-14,-15,21,21,21,21,21,21,21,21,-25,12,21,]),'NUMBER':([6,9,12,13,16,20,21,22,23,24,25,26,27,28,29,30,31,36,59,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,53,14,]),'THEN':([11,14,15,32,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[19,-26,-27,-24,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,65,]),'PLUS':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[20,-26,-27,20,-24,20,20,-12,-13,-14,-15,20,20,20,20,20,20,20,20,-25,20,]),'TIMES':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[22,-26,-27,22,22,22,22,22,22,-14,-15,22,22,22,22,22,22,22,22,-25,22,]),'DIVIDE':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[23,-26,-27,23,23,23,23,23,23,-14,-15,23,23,23,23,23,23,23,23,-25,23,]),'or':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[24,-26,-27,24,-24,24,24,-12,-13,-14,-15,-16,-17,-18,24,24,24,24,24,-25,24,]),'and':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[25,-26,-27,25,-24,25,25,-12,-13,-14,-15,25,-17,-18,25,25,25,25,25,-25,25,]),'SUP':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[26,-26,-27,26,-24,26,26,-12,-13,-14,-15,26,26,None,26,26,26,26,26,-25,26,]),'INFF':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[27,-26,-27,27,-24,27,27,-12,-13,-14,-15,-16,-17,-18,27,27,27,27,27,-25,27,]),'ISEQUAL':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[28,-26,-27,28,-24,28,28,-12,-13,-14,-15,-16,-17,-18,28,28,28,28,28,-25,28,]),'NOTEQUAL':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[29,-26,-27,29,-24,29,29,-12,-13,-14,-15,-16,-17,-18,29,29,29,29,29,-25,29,]),'ET':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[30,-26,-27,30,-24,30,30,-12,-13,-14,-15,-16,-17,-18,30,30,30,30,30,-25,30,]),'OU':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[31,-26,-27,31,-24,31,31,-12,-13,-14,-15,-16,-17,-18,31,31,31,31,31,-25,31,]),'SEMI':([14,15,17,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-26,-27,35,-24,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,55,]),'TO':([14,15,17,18,32,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,69,70,76,],[-26,-27,-5,36,-24,-4,-7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-11,-8,-10,-6,-9,]),'RPAREN':([14,15,17,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,58,69,70,76,],[-26,-27,-5,-24,51,52,-4,-7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-11,-8,61,-10,-6,-9,]),'RACC':([19,60,61,65,73,],[38,63,64,68,74,]),'COMMA':([53,],[56,]),'ELSEIF':([57,],[59,]),'ELSE':([57,72,],[60,73,]),}
+_lr_action_items = {'NAME':([0,2,3,5,7,9,10,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,70,72,74,76,77,78,79,82,83,84,],[4,4,-3,17,17,-2,17,17,17,-30,-31,4,17,-5,-26,-27,4,17,17,17,17,17,17,17,17,17,17,17,17,-28,4,-13,-4,4,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,4,-6,4,-12,4,-9,17,-7,4,4,4,-11,4,4,4,-10,]),'WHILE':([0,2,3,9,16,17,18,22,23,24,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,72,74,76,77,78,79,82,83,84,],[5,5,-3,-2,-30,-31,5,-5,-26,-27,5,-28,5,-13,-4,5,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,5,-6,5,-12,5,-9,-7,5,5,5,-11,5,5,5,-10,]),'FOR':([0,2,3,9,16,17,18,22,23,24,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,72,74,76,77,78,79,82,83,84,],[6,6,-3,-2,-30,-31,6,-5,-26,-27,6,-28,6,-13,-4,6,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,6,-6,6,-12,6,-9,-7,6,6,6,-11,6,6,6,-10,]),'IF':([0,2,3,9,16,17,18,22,23,24,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,72,74,76,77,78,79,82,83,84,],[7,7,-3,-2,-30,-31,7,-5,-26,-27,7,-28,7,-13,-4,7,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,7,-6,7,-12,7,-9,-7,7,7,7,-11,7,7,7,-10,]),'PRINT':([0,2,3,9,16,17,18,22,23,24,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,72,74,76,77,78,79,82,83,84,],[8,8,-3,-2,-30,-31,8,-5,-26,-27,8,-28,8,-13,-4,8,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,8,-6,8,-12,8,-9,-7,8,8,8,-11,8,8,8,-10,]),'$end':([1,2,3,9,16,17,22,23,24,38,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,66,68,72,78,84,],[0,-1,-3,-2,-30,-31,-5,-26,-27,-28,-13,-4,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,-6,-12,-9,-7,-11,-10,]),'LACC':([3,9,16,17,22,23,24,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,65,66,68,72,76,78,79,83,84,],[-3,-2,-30,-31,-5,-26,-27,-28,-13,-4,63,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,-6,68,-12,-9,-7,78,-11,80,84,-10,]),'EQUALS':([4,],[10,]),'INCR':([4,],[11,]),'DECR':([4,],[12,]),'MINUS':([5,7,10,13,14,15,16,17,19,20,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,70,73,],[14,14,14,27,14,14,-30,-31,27,14,27,14,14,14,14,14,14,14,14,14,14,14,14,-28,27,27,-14,-15,-16,-17,27,27,27,27,27,27,27,27,-29,14,27,]),'LPAREN':([5,6,7,8,10,14,15,20,26,27,28,29,30,31,32,33,34,35,36,37,70,],[15,18,15,20,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'NUMBER':([5,7,10,14,15,20,26,27,28,29,30,31,32,33,34,35,36,37,59,70,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,64,16,]),'STRING':([8,],[21,]),'SEMI':([11,12,16,17,21,22,38,46,47,48,49,50,51,52,53,54,55,56,57,58,62,],[23,24,-30,-31,43,44,-28,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,66,]),'RACC':([13,16,17,38,41,46,47,48,49,50,51,52,53,54,55,56,57,58,71,75,81,],[25,-30,-31,-28,61,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,74,77,82,]),'PLUS':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[26,-30,-31,26,26,-28,26,26,-14,-15,-16,-17,26,26,26,26,26,26,26,26,-29,26,]),'TIMES':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[28,-30,-31,28,28,28,28,28,28,28,-16,-17,28,28,28,28,28,28,28,28,-29,28,]),'DIVIDE':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[29,-30,-31,29,29,29,29,29,29,29,-16,-17,29,29,29,29,29,29,29,29,-29,29,]),'or':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[30,-30,-31,30,30,-28,30,30,-14,-15,-16,-17,-18,-19,-20,30,30,30,30,30,-29,30,]),'and':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[31,-30,-31,31,31,-28,31,31,-14,-15,-16,-17,31,-19,-20,31,31,31,31,31,-29,31,]),'SUP':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[32,-30,-31,32,32,-28,32,32,-14,-15,-16,-17,32,32,None,32,32,32,32,32,-29,32,]),'INFF':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[33,-30,-31,33,33,-28,33,33,-14,-15,-16,-17,-18,-19,-20,33,33,33,33,33,-29,33,]),'ISEQUAL':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[34,-30,-31,34,34,-28,34,34,-14,-15,-16,-17,-18,-19,-20,34,34,34,34,34,-29,34,]),'NOTEQUAL':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[35,-30,-31,35,35,-28,35,35,-14,-15,-16,-17,-18,-19,-20,35,35,35,35,35,-29,35,]),'ET':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[36,-30,-31,36,36,-28,36,36,-14,-15,-16,-17,-18,-19,-20,36,36,36,36,36,-29,36,]),'OU':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[37,-30,-31,37,37,-28,37,37,-14,-15,-16,-17,-18,-19,-20,37,37,37,37,37,-29,37,]),'THEN':([16,17,19,38,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[-30,-31,41,-28,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,75,]),'TO':([16,17,22,23,24,38,40,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,66,68,72,78,84,],[-30,-31,-5,-26,-27,-28,59,-13,-4,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,-6,-12,-9,-7,-11,-10,]),'RPAREN':([16,17,22,23,24,38,39,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,66,68,69,72,78,84,],[-30,-31,-5,-26,-27,-28,58,62,-13,-4,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,-6,-12,-9,72,-7,-11,-10,]),'COMMA':([64,],[67,]),'ELSEIF':([68,],[70,]),'ELSE':([68,80,],[71,81,]),}
 
 _lr_action = {}
 for _k, _v in _lr_action_items.items():
@@ -17,7 +17,7 @@ for _k, _v in _lr_action_items.items():
       _lr_action[_x][_k] = _y
 del _lr_action_items
 
-_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,38,63,64,68,74,],[2,54,66,67,71,75,]),'statement':([0,2,10,19,38,54,56,63,64,66,67,68,71,74,75,],[3,8,18,37,3,8,58,3,3,8,8,3,8,3,8,]),'expression':([6,9,12,13,16,20,21,22,23,24,25,26,27,28,29,30,31,59,],[11,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,62,]),}
+_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,25,61,74,77,82,],[2,45,65,76,79,83,]),'statement':([0,2,18,25,41,45,61,65,67,74,76,77,79,82,83,],[3,9,40,3,60,9,3,9,69,3,9,3,9,3,9,]),'expression':([5,7,10,14,15,20,26,27,28,29,30,31,32,33,34,35,36,37,70,],[13,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,73,]),}
 
 _lr_goto = {}
 for _k, _v in _lr_goto_items.items():
@@ -27,31 +27,35 @@ for _k, _v in _lr_goto_items.items():
 del _lr_goto_items
 _lr_productions = [
   ("S' -> start","S'",1,None,None,None),
-  ('start -> bloc','start',1,'p_start','calcMulrilignesVersAST.py',160),
-  ('bloc -> bloc statement','bloc',2,'p_bloc','calcMulrilignesVersAST.py',167),
-  ('bloc -> statement','bloc',1,'p_bloc','calcMulrilignesVersAST.py',168),
-  ('statement -> NAME EQUALS expression SEMI','statement',4,'p_statement_assign','calcMulrilignesVersAST.py',176),
-  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calcMulrilignesVersAST.py',177),
-  ('statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC','statement',11,'p_for_loop','calcMulrilignesVersAST.py',182),
-  ('statement -> IF expression THEN statement','statement',4,'p_if_els_statement','calcMulrilignesVersAST.py',185),
-  ('statement -> IF expression THEN RACC bloc LACC','statement',6,'p_if_els_statement','calcMulrilignesVersAST.py',186),
-  ('statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',16,'p_if_els_statement','calcMulrilignesVersAST.py',187),
-  ('statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',10,'p_if_els_statement','calcMulrilignesVersAST.py',188),
-  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','calcMulrilignesVersAST.py',197),
-  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',202),
-  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',203),
-  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',204),
-  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',205),
-  ('expression -> expression or expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',206),
-  ('expression -> expression and expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',207),
-  ('expression -> expression SUP expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',208),
-  ('expression -> expression INFF expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',209),
-  ('expression -> expression ISEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',210),
-  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',211),
-  ('expression -> expression ET expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',212),
-  ('expression -> expression OU expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',213),
-  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calcMulrilignesVersAST.py',220),
-  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcMulrilignesVersAST.py',224),
-  ('expression -> NUMBER','expression',1,'p_expression_number','calcMulrilignesVersAST.py',228),
-  ('expression -> NAME','expression',1,'p_expression_name','calcMulrilignesVersAST.py',232),
+  ('start -> bloc','start',1,'p_start','calcMulrilignesVersAST.py',179),
+  ('bloc -> bloc statement','bloc',2,'p_bloc','calcMulrilignesVersAST.py',186),
+  ('bloc -> statement','bloc',1,'p_bloc','calcMulrilignesVersAST.py',187),
+  ('statement -> NAME EQUALS expression SEMI','statement',4,'p_statement_assign','calcMulrilignesVersAST.py',195),
+  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calcMulrilignesVersAST.py',196),
+  ('statement -> WHILE expression RACC bloc LACC','statement',5,'p_while_statement','calcMulrilignesVersAST.py',201),
+  ('statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN','statement',8,'p_for_loop','calcMulrilignesVersAST.py',205),
+  ('statement -> IF expression THEN statement','statement',4,'p_if_els_statement','calcMulrilignesVersAST.py',210),
+  ('statement -> IF expression THEN RACC bloc LACC','statement',6,'p_if_els_statement','calcMulrilignesVersAST.py',211),
+  ('statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',16,'p_if_els_statement','calcMulrilignesVersAST.py',212),
+  ('statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',10,'p_if_els_statement','calcMulrilignesVersAST.py',213),
+  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','calcMulrilignesVersAST.py',222),
+  ('statement -> PRINT STRING SEMI','statement',3,'p_statement_print','calcMulrilignesVersAST.py',223),
+  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',231),
+  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',232),
+  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',233),
+  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',234),
+  ('expression -> expression or expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',235),
+  ('expression -> expression and expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',236),
+  ('expression -> expression SUP expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',237),
+  ('expression -> expression INFF expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',238),
+  ('expression -> expression ISEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',239),
+  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',240),
+  ('expression -> expression ET expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',241),
+  ('expression -> expression OU expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',242),
+  ('statement -> NAME INCR SEMI','statement',3,'p_incr_decr_statement','calcMulrilignesVersAST.py',249),
+  ('statement -> NAME DECR SEMI','statement',3,'p_incr_decr_statement','calcMulrilignesVersAST.py',250),
+  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calcMulrilignesVersAST.py',258),
+  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcMulrilignesVersAST.py',262),
+  ('expression -> NUMBER','expression',1,'p_expression_number','calcMulrilignesVersAST.py',266),
+  ('expression -> NAME','expression',1,'p_expression_name','calcMulrilignesVersAST.py',270),
 ]
diff --git a/test_code.txt b/test_code.txt
index 624788c..5908633 100644
--- a/test_code.txt
+++ b/test_code.txt
@@ -1,3 +1,3 @@
-for ( x =10 to 5 , x = x-2) {
-    print (x);
-}
\ No newline at end of file
+i = 0 ; 
+i = i + 1 ; 
+print(i);
\ No newline at end of file
