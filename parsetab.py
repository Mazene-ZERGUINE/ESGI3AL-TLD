
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'leftorleftandnonassocEQUALSSUPleftPLUSMINUSleftTIMESDIVIDECOMMA COMMENT DECR DIVIDE ELSE ELSEIF END EQUALS ET FOR FUNCTION IF INCR INFF ISEQUAL LACC LPAREN MINEQ MINUS NAME NOTEQUAL NUMBER OU PLUS PLUSEQ PRINT RACC RPAREN SEMI START STRING SUP THEN TIMES TO WHILE and orstart : bloc bloc : bloc statement\n    | statementstatement : NAME EQUALS expression SEMI \n                 | NAME EQUALS expression  statement : WHILE expression RACC bloc LACC  statement : FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC  statement : IF expression THEN statement\n                  | IF expression THEN RACC bloc LACC  \n                  | IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n                  | IF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n    \n    statement : PRINT LPAREN expression RPAREN SEMI \n                 | PRINT STRING SEMIparams : NAME\n              | NAME COMMA params statement : FUNCTION NAME LPAREN RPAREN START bloc END \n                  | FUNCTION NAME LPAREN params RPAREN START bloc END  statement : NAME LPAREN RPAREN SEMI \n                  | NAME LPAREN param_call RPAREN SEMIparam_call : expression\n                   | expression COMMA param_callexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression or expression\n                  | expression and expression\n                  | expression SUP expression\n                  | expression INFF expression\n                  | expression ISEQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression ET expression\n                  | expression OU expression\n\n                   statement : NAME INCR SEMI \n                  | NAME DECR SEMI \n                  | NAME INCR \n                  | NAME DECR statement : NAME PLUSEQ NUMBER SEMI \n                  | NAME MINEQ NUMBER SEMI \n                  | NAME PLUSEQ NUMBER \n                  | NAME MINEQ NUMBER expression : MINUS expression expression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,2,3,5,7,9,10,11,12,13,14,18,19,20,21,22,24,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,82,84,86,87,88,89,91,92,94,95,97,99,100,103,104,105,107,108,109,110,111,112,115,116,117,],[4,4,-3,21,21,26,-2,21,21,-36,-37,21,21,-44,-45,4,21,-5,-34,-35,-40,-41,4,21,21,21,21,21,21,21,21,21,21,21,21,-42,4,-13,79,-4,-18,21,-38,-39,4,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,4,-19,-6,4,-12,79,4,4,-9,4,4,21,-16,4,4,-17,4,4,4,4,-11,-7,4,4,4,-10,]),'WHILE':([0,2,3,10,13,14,20,21,22,27,31,32,33,34,35,48,51,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,82,84,86,87,89,91,92,94,95,99,100,103,104,105,107,108,109,110,111,112,115,116,117,],[5,5,-3,-2,-36,-37,-44,-45,5,-5,-34,-35,-40,-41,5,-42,5,-13,-4,-18,-38,-39,5,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,5,-19,-6,5,-12,5,5,-9,5,5,-16,5,5,-17,5,5,5,5,-11,-7,5,5,5,-10,]),'FOR':([0,2,3,10,13,14,20,21,22,27,31,32,33,34,35,48,51,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,82,84,86,87,89,91,92,94,95,99,100,103,104,105,107,108,109,110,111,112,115,116,117,],[6,6,-3,-2,-36,-37,-44,-45,6,-5,-34,-35,-40,-41,6,-42,6,-13,-4,-18,-38,-39,6,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,6,-19,-6,6,-12,6,6,-9,6,6,-16,6,6,-17,6,6,6,6,-11,-7,6,6,6,-10,]),'IF':([0,2,3,10,13,14,20,21,22,27,31,32,33,34,35,48,51,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,82,84,86,87,89,91,92,94,95,99,100,103,104,105,107,108,109,110,111,112,115,116,117,],[7,7,-3,-2,-36,-37,-44,-45,7,-5,-34,-35,-40,-41,7,-42,7,-13,-4,-18,-38,-39,7,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,7,-19,-6,7,-12,7,7,-9,7,7,-16,7,7,-17,7,7,7,7,-11,-7,7,7,7,-10,]),'PRINT':([0,2,3,10,13,14,20,21,22,27,31,32,33,34,35,48,51,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,82,84,86,87,89,91,92,94,95,99,100,103,104,105,107,108,109,110,111,112,115,116,117,],[8,8,-3,-2,-36,-37,-44,-45,8,-5,-34,-35,-40,-41,8,-42,8,-13,-4,-18,-38,-39,8,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,8,-19,-6,8,-12,8,8,-9,8,8,-16,8,8,-17,8,8,8,8,-11,-7,8,8,8,-10,]),'FUNCTION':([0,2,3,10,13,14,20,21,22,27,31,32,33,34,35,48,51,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,82,84,86,87,89,91,92,94,95,99,100,103,104,105,107,108,109,110,111,112,115,116,117,],[9,9,-3,-2,-36,-37,-44,-45,9,-5,-34,-35,-40,-41,9,-42,9,-13,-4,-18,-38,-39,9,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,9,-19,-6,9,-12,9,9,-9,9,9,-16,9,9,-17,9,9,9,9,-11,-7,9,9,9,-10,]),'$end':([1,2,3,10,13,14,20,21,27,31,32,33,34,48,53,55,56,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,82,84,87,92,99,104,110,111,117,],[0,-1,-3,-2,-36,-37,-44,-45,-5,-34,-35,-40,-41,-42,-13,-4,-18,-38,-39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,-19,-6,-12,-9,-16,-17,-11,-7,-10,]),'LACC':([3,10,13,14,20,21,27,31,32,33,34,48,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,82,84,86,87,92,99,104,107,108,110,111,112,116,117,],[-3,-2,-36,-37,-44,-45,-5,-34,-35,-40,-41,-42,-13,-4,-18,-38,-39,84,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,-19,-6,92,-12,-9,-16,-17,110,111,-11,-7,113,117,-10,]),'END':([3,10,13,14,20,21,27,31,32,33,34,48,53,55,56,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,82,84,87,92,94,99,100,104,110,111,117,],[-3,-2,-36,-37,-44,-45,-5,-34,-35,-40,-41,-42,-13,-4,-18,-38,-39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,-19,-6,-12,-9,99,-16,104,-17,-11,-7,-10,]),'EQUALS':([4,],[11,]),'LPAREN':([4,5,6,7,8,11,12,18,19,24,26,36,37,38,39,40,41,42,43,44,45,46,47,58,97,],[12,19,22,19,24,19,19,19,19,19,54,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'INCR':([4,],[13,]),'DECR':([4,],[14,]),'PLUSEQ':([4,],[15,]),'MINEQ':([4,],[16,]),'MINUS':([5,7,11,12,17,18,19,20,21,23,24,27,30,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,58,62,63,64,65,66,67,68,69,70,71,72,73,74,97,102,],[18,18,18,18,37,18,18,-44,-45,37,18,37,37,18,18,18,18,18,18,18,18,18,18,18,18,-42,37,37,18,-22,-23,-24,-25,37,37,37,37,37,37,37,37,-43,18,37,]),'NUMBER':([5,7,11,12,15,16,18,19,24,36,37,38,39,40,41,42,43,44,45,46,47,58,75,97,],[20,20,20,20,33,34,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,85,20,]),'STRING':([8,],[25,]),'RPAREN':([12,13,14,20,21,27,29,30,31,32,33,34,48,49,52,53,54,55,56,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,81,82,83,84,87,92,93,96,99,104,110,111,117,],[28,-36,-37,-44,-45,-5,57,-20,-34,-35,-40,-41,-42,74,78,-13,80,-4,-18,-38,-39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,-14,90,-19,-21,-6,-12,-9,-15,101,-16,-17,-11,-7,-10,]),'SEMI':([13,14,20,21,25,27,28,33,34,48,57,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[31,32,-44,-45,53,55,56,59,60,-42,82,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,87,]),'TO':([13,14,20,21,27,31,32,33,34,48,50,53,55,56,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,82,84,87,92,99,104,110,111,117,],[-36,-37,-44,-45,-5,-34,-35,-40,-41,-42,75,-13,-4,-18,-38,-39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,-8,-19,-6,-12,-9,-16,-17,-11,-7,-10,]),'RACC':([17,20,21,48,51,62,63,64,65,66,67,68,69,70,71,72,73,74,98,101,106,114,],[35,-44,-45,-42,77,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,103,105,109,115,]),'PLUS':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[36,-44,-45,36,36,36,-42,36,36,-22,-23,-24,-25,36,36,36,36,36,36,36,36,-43,36,]),'TIMES':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[38,-44,-45,38,38,38,38,38,38,38,38,-24,-25,38,38,38,38,38,38,38,38,-43,38,]),'DIVIDE':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[39,-44,-45,39,39,39,39,39,39,39,39,-24,-25,39,39,39,39,39,39,39,39,-43,39,]),'or':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[40,-44,-45,40,40,40,-42,40,40,-22,-23,-24,-25,-26,-27,-28,40,40,40,40,40,-43,40,]),'and':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[41,-44,-45,41,41,41,-42,41,41,-22,-23,-24,-25,41,-27,-28,41,41,41,41,41,-43,41,]),'SUP':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[42,-44,-45,42,42,42,-42,42,42,-22,-23,-24,-25,42,42,None,42,42,42,42,42,-43,42,]),'INFF':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[43,-44,-45,43,43,43,-42,43,43,-22,-23,-24,-25,-26,-27,-28,43,43,43,43,43,-43,43,]),'ISEQUAL':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[44,-44,-45,44,44,44,-42,44,44,-22,-23,-24,-25,-26,-27,-28,44,44,44,44,44,-43,44,]),'NOTEQUAL':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[45,-44,-45,45,45,45,-42,45,45,-22,-23,-24,-25,-26,-27,-28,45,45,45,45,45,-43,45,]),'ET':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[46,-44,-45,46,46,46,-42,46,46,-22,-23,-24,-25,-26,-27,-28,46,46,46,46,46,-43,46,]),'OU':([17,20,21,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[47,-44,-45,47,47,47,-42,47,47,-22,-23,-24,-25,-26,-27,-28,47,47,47,47,47,-43,47,]),'THEN':([20,21,23,48,62,63,64,65,66,67,68,69,70,71,72,73,74,102,],[-44,-45,51,-42,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,106,]),'COMMA':([20,21,30,48,62,63,64,65,66,67,68,69,70,71,72,73,74,79,85,],[-44,-45,58,-42,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-43,88,91,]),'START':([80,90,],[89,95,]),'ELSEIF':([92,],[97,]),'ELSE':([92,113,],[98,114,]),}
=======
_lr_signature = 'leftorleftandnonassocEQUALSSUPleftPLUSMINUSleftTIMESDIVIDECOMMA COMMENT DECR DIVIDE ELSE ELSEIF EQUALS ET FOR IF INCR INFF ISEQUAL LACC LPAREN MINUS NAME NOTEQUAL NUMBER OU PLUS PRINT RACC RPAREN SEMI STRING SUP THEN TIMES TO WHILE and orstart : bloc bloc : bloc statement\n    | statementstatement : NAME EQUALS expression SEMI \n                 | NAME EQUALS expression  statement : WHILE expression RACC bloc LACC  statement : FOR LPAREN statement TO NUMBER COMMA statement RPAREN  statement : IF expression THEN statement\n                  | IF expression THEN RACC bloc LACC  \n                  | IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n                  | IF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n    \n    statement : PRINT LPAREN expression RPAREN SEMI \n                 | PRINT STRING SEMIexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression or expression\n                  | expression and expression\n                  | expression SUP expression\n                  | expression INFF expression\n                  | expression ISEQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression ET expression\n                  | expression OU expression\n\n                   statement : NAME INCR SEMI \n                  | NAME DECR SEMIexpression : MINUS expression expression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,2,3,5,7,9,10,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,70,72,74,76,77,78,79,82,83,84,],[4,4,-3,17,17,-2,17,17,17,-30,-31,4,17,-5,-26,-27,4,17,17,17,17,17,17,17,17,17,17,17,17,-28,4,-13,-4,4,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,4,-6,4,-12,4,-9,17,-7,4,4,4,-11,4,4,4,-10,]),'WHILE':([0,2,3,9,16,17,18,22,23,24,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,72,74,76,77,78,79,82,83,84,],[5,5,-3,-2,-30,-31,5,-5,-26,-27,5,-28,5,-13,-4,5,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,5,-6,5,-12,5,-9,-7,5,5,5,-11,5,5,5,-10,]),'FOR':([0,2,3,9,16,17,18,22,23,24,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,72,74,76,77,78,79,82,83,84,],[6,6,-3,-2,-30,-31,6,-5,-26,-27,6,-28,6,-13,-4,6,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,6,-6,6,-12,6,-9,-7,6,6,6,-11,6,6,6,-10,]),'IF':([0,2,3,9,16,17,18,22,23,24,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,72,74,76,77,78,79,82,83,84,],[7,7,-3,-2,-30,-31,7,-5,-26,-27,7,-28,7,-13,-4,7,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,7,-6,7,-12,7,-9,-7,7,7,7,-11,7,7,7,-10,]),'PRINT':([0,2,3,9,16,17,18,22,23,24,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,63,65,66,67,68,72,74,76,77,78,79,82,83,84,],[8,8,-3,-2,-30,-31,8,-5,-26,-27,8,-28,8,-13,-4,8,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,8,-6,8,-12,8,-9,-7,8,8,8,-11,8,8,8,-10,]),'$end':([1,2,3,9,16,17,22,23,24,38,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,66,68,72,78,84,],[0,-1,-3,-2,-30,-31,-5,-26,-27,-28,-13,-4,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,-6,-12,-9,-7,-11,-10,]),'LACC':([3,9,16,17,22,23,24,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,65,66,68,72,76,78,79,83,84,],[-3,-2,-30,-31,-5,-26,-27,-28,-13,-4,63,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,-6,68,-12,-9,-7,78,-11,80,84,-10,]),'EQUALS':([4,],[10,]),'INCR':([4,],[11,]),'DECR':([4,],[12,]),'MINUS':([5,7,10,13,14,15,16,17,19,20,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,70,73,],[14,14,14,27,14,14,-30,-31,27,14,27,14,14,14,14,14,14,14,14,14,14,14,14,-28,27,27,-14,-15,-16,-17,27,27,27,27,27,27,27,27,-29,14,27,]),'LPAREN':([5,6,7,8,10,14,15,20,26,27,28,29,30,31,32,33,34,35,36,37,70,],[15,18,15,20,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'NUMBER':([5,7,10,14,15,20,26,27,28,29,30,31,32,33,34,35,36,37,59,70,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,64,16,]),'STRING':([8,],[21,]),'SEMI':([11,12,16,17,21,22,38,46,47,48,49,50,51,52,53,54,55,56,57,58,62,],[23,24,-30,-31,43,44,-28,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,66,]),'RACC':([13,16,17,38,41,46,47,48,49,50,51,52,53,54,55,56,57,58,71,75,81,],[25,-30,-31,-28,61,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,74,77,82,]),'PLUS':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[26,-30,-31,26,26,-28,26,26,-14,-15,-16,-17,26,26,26,26,26,26,26,26,-29,26,]),'TIMES':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[28,-30,-31,28,28,28,28,28,28,28,-16,-17,28,28,28,28,28,28,28,28,-29,28,]),'DIVIDE':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[29,-30,-31,29,29,29,29,29,29,29,-16,-17,29,29,29,29,29,29,29,29,-29,29,]),'or':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[30,-30,-31,30,30,-28,30,30,-14,-15,-16,-17,-18,-19,-20,30,30,30,30,30,-29,30,]),'and':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[31,-30,-31,31,31,-28,31,31,-14,-15,-16,-17,31,-19,-20,31,31,31,31,31,-29,31,]),'SUP':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[32,-30,-31,32,32,-28,32,32,-14,-15,-16,-17,32,32,None,32,32,32,32,32,-29,32,]),'INFF':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[33,-30,-31,33,33,-28,33,33,-14,-15,-16,-17,-18,-19,-20,33,33,33,33,33,-29,33,]),'ISEQUAL':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[34,-30,-31,34,34,-28,34,34,-14,-15,-16,-17,-18,-19,-20,34,34,34,34,34,-29,34,]),'NOTEQUAL':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[35,-30,-31,35,35,-28,35,35,-14,-15,-16,-17,-18,-19,-20,35,35,35,35,35,-29,35,]),'ET':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[36,-30,-31,36,36,-28,36,36,-14,-15,-16,-17,-18,-19,-20,36,36,36,36,36,-29,36,]),'OU':([13,16,17,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[37,-30,-31,37,37,-28,37,37,-14,-15,-16,-17,-18,-19,-20,37,37,37,37,37,-29,37,]),'THEN':([16,17,19,38,46,47,48,49,50,51,52,53,54,55,56,57,58,73,],[-30,-31,41,-28,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,75,]),'TO':([16,17,22,23,24,38,40,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,66,68,72,78,84,],[-30,-31,-5,-26,-27,-28,59,-13,-4,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,-6,-12,-9,-7,-11,-10,]),'RPAREN':([16,17,22,23,24,38,39,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,66,68,69,72,78,84,],[-30,-31,-5,-26,-27,-28,58,62,-13,-4,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-29,-8,-6,-12,-9,72,-7,-11,-10,]),'COMMA':([64,],[67,]),'ELSEIF':([68,],[70,]),'ELSE':([68,80,],[71,81,]),}
>>>>>>> 03aa536 (++ and --)

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

<<<<<<< HEAD
_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,35,77,89,95,103,105,109,115,],[2,61,86,94,100,107,108,112,116,]),'statement':([0,2,22,35,51,61,77,86,89,91,94,95,100,103,105,107,108,109,112,115,116,],[3,10,50,3,76,10,3,10,3,96,10,3,10,3,3,10,10,3,10,3,10,]),'expression':([5,7,11,12,18,19,24,36,37,38,39,40,41,42,43,44,45,46,47,58,97,],[17,23,27,30,48,49,52,62,63,64,65,66,67,68,69,70,71,72,73,30,102,]),'param_call':([12,58,],[29,83,]),'params':([54,88,],[81,93,]),}
=======
_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,25,61,74,77,82,],[2,45,65,76,79,83,]),'statement':([0,2,18,25,41,45,61,65,67,74,76,77,79,82,83,],[3,9,40,3,60,9,3,9,69,3,9,3,9,3,9,]),'expression':([5,7,10,14,15,20,26,27,28,29,30,31,32,33,34,35,36,37,70,],[13,19,22,38,39,42,46,47,48,49,50,51,52,53,54,55,56,57,73,]),}
>>>>>>> 03aa536 (++ and --)

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
<<<<<<< HEAD
  ('start -> bloc','start',1,'p_start','calcMulrilignesVersAST.py',196),
  ('bloc -> bloc statement','bloc',2,'p_bloc','calcMulrilignesVersAST.py',203),
  ('bloc -> statement','bloc',1,'p_bloc','calcMulrilignesVersAST.py',204),
  ('statement -> NAME EQUALS expression SEMI','statement',4,'p_statement_assign','calcMulrilignesVersAST.py',212),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calcMulrilignesVersAST.py',213),
  ('statement -> WHILE expression RACC bloc LACC','statement',5,'p_while_statement','calcMulrilignesVersAST.py',218),
  ('statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC','statement',11,'p_for_loop','calcMulrilignesVersAST.py',222),
  ('statement -> IF expression THEN statement','statement',4,'p_if_els_statement','calcMulrilignesVersAST.py',227),
  ('statement -> IF expression THEN RACC bloc LACC','statement',6,'p_if_els_statement','calcMulrilignesVersAST.py',228),
  ('statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',16,'p_if_els_statement','calcMulrilignesVersAST.py',229),
  ('statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',10,'p_if_els_statement','calcMulrilignesVersAST.py',230),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','calcMulrilignesVersAST.py',239),
  ('statement -> PRINT STRING SEMI','statement',3,'p_statement_print','calcMulrilignesVersAST.py',240),
  ('params -> NAME','params',1,'p_parameters','calcMulrilignesVersAST.py',248),
  ('params -> NAME COMMA params','params',3,'p_parameters','calcMulrilignesVersAST.py',249),
  ('statement -> FUNCTION NAME LPAREN RPAREN START bloc END','statement',7,'p_function','calcMulrilignesVersAST.py',257),
  ('statement -> FUNCTION NAME LPAREN params RPAREN START bloc END','statement',8,'p_function','calcMulrilignesVersAST.py',258),
  ('statement -> NAME LPAREN RPAREN SEMI','statement',4,'p_function_call','calcMulrilignesVersAST.py',267),
  ('statement -> NAME LPAREN param_call RPAREN SEMI','statement',5,'p_function_call','calcMulrilignesVersAST.py',268),
  ('param_call -> expression','param_call',1,'p_expressions','calcMulrilignesVersAST.py',274),
  ('param_call -> expression COMMA param_call','param_call',3,'p_expressions','calcMulrilignesVersAST.py',275),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',283),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',284),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',285),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',286),
  ('expression -> expression or expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',287),
  ('expression -> expression and expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',288),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',289),
  ('expression -> expression INFF expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',290),
  ('expression -> expression ISEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',291),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',292),
  ('expression -> expression ET expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',293),
  ('expression -> expression OU expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',294),
  ('statement -> NAME INCR SEMI','statement',3,'p_incr_decr','calcMulrilignesVersAST.py',301),
  ('statement -> NAME DECR SEMI','statement',3,'p_incr_decr','calcMulrilignesVersAST.py',302),
  ('statement -> NAME INCR','statement',2,'p_incr_decr','calcMulrilignesVersAST.py',303),
  ('statement -> NAME DECR','statement',2,'p_incr_decr','calcMulrilignesVersAST.py',304),
  ('statement -> NAME PLUSEQ NUMBER SEMI','statement',4,'p_plus_min_eq','calcMulrilignesVersAST.py',314),
  ('statement -> NAME MINEQ NUMBER SEMI','statement',4,'p_plus_min_eq','calcMulrilignesVersAST.py',315),
  ('statement -> NAME PLUSEQ NUMBER','statement',3,'p_plus_min_eq','calcMulrilignesVersAST.py',316),
  ('statement -> NAME MINEQ NUMBER','statement',3,'p_plus_min_eq','calcMulrilignesVersAST.py',317),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calcMulrilignesVersAST.py',325),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcMulrilignesVersAST.py',329),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcMulrilignesVersAST.py',333),
  ('expression -> NAME','expression',1,'p_expression_name','calcMulrilignesVersAST.py',337),
=======
  ('start -> bloc','start',1,'p_start','calcMulrilignesVersAST.py',179),
  ('bloc -> bloc statement','bloc',2,'p_bloc','calcMulrilignesVersAST.py',186),
  ('bloc -> statement','bloc',1,'p_bloc','calcMulrilignesVersAST.py',187),
  ('statement -> NAME EQUALS expression SEMI','statement',4,'p_statement_assign','calcMulrilignesVersAST.py',195),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calcMulrilignesVersAST.py',196),
  ('statement -> WHILE expression RACC bloc LACC','statement',5,'p_while_statement','calcMulrilignesVersAST.py',201),
  ('statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN','statement',8,'p_for_loop','calcMulrilignesVersAST.py',205),
  ('statement -> IF expression THEN statement','statement',4,'p_if_els_statement','calcMulrilignesVersAST.py',210),
  ('statement -> IF expression THEN RACC bloc LACC','statement',6,'p_if_els_statement','calcMulrilignesVersAST.py',211),
  ('statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',16,'p_if_els_statement','calcMulrilignesVersAST.py',212),
  ('statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',10,'p_if_els_statement','calcMulrilignesVersAST.py',213),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','calcMulrilignesVersAST.py',222),
  ('statement -> PRINT STRING SEMI','statement',3,'p_statement_print','calcMulrilignesVersAST.py',223),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',231),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',232),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',233),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',234),
  ('expression -> expression or expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',235),
  ('expression -> expression and expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',236),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',237),
  ('expression -> expression INFF expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',238),
  ('expression -> expression ISEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',239),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',240),
  ('expression -> expression ET expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',241),
  ('expression -> expression OU expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',242),
  ('statement -> NAME INCR SEMI','statement',3,'p_incr_decr_statement','calcMulrilignesVersAST.py',249),
  ('statement -> NAME DECR SEMI','statement',3,'p_incr_decr_statement','calcMulrilignesVersAST.py',250),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calcMulrilignesVersAST.py',258),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcMulrilignesVersAST.py',262),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcMulrilignesVersAST.py',266),
  ('expression -> NAME','expression',1,'p_expression_name','calcMulrilignesVersAST.py',270),
>>>>>>> 03aa536 (++ and --)
]
