
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandnonassocEQUALSSUPleftPLUSMINUSleftTIMESDIVIDECOMMA COMMENT DIVIDE ELSE ELSEIF EQUALS ET FOR IF INFF ISEQUAL LACC LPAREN MINUS NAME NOTEQUAL NUMBER OU PLUS PRINT RACC RPAREN SEMI SUP THEN TIMES TO WHILE and orstart : bloc bloc : bloc statement\n    | statementstatement : NAME EQUALS expression SEMI \n                 | NAME EQUALS expression  statement : WHILE expression RACC bloc LACC  statement : FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC  statement : IF expression THEN statement\n                  | IF expression THEN RACC bloc LACC  \n                  | IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n                  | IF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n    \n    statement : PRINT LPAREN expression RPAREN SEMIexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression or expression\n                  | expression and expression\n                  | expression SUP expression\n                  | expression INFF expression\n                  | expression ISEQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression ET expression\n                  | expression OU expression\n\n                  expression : MINUS expression expression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,2,3,5,7,9,10,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,60,61,62,64,68,69,71,72,73,74,75,76,79,80,81,],[4,4,-3,15,15,-2,15,15,15,-27,-28,4,15,-5,4,15,15,15,15,15,15,15,15,15,15,15,15,-25,4,-4,4,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,4,-6,4,-12,4,-9,15,4,4,4,4,4,-11,-7,4,4,4,-10,]),'WHILE':([0,2,3,9,14,15,16,19,20,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,60,61,62,68,69,71,72,73,74,75,76,79,80,81,],[5,5,-3,-2,-27,-28,5,-5,5,-25,5,-4,5,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,5,-6,5,-12,5,-9,5,5,5,5,5,-11,-7,5,5,5,-10,]),'FOR':([0,2,3,9,14,15,16,19,20,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,60,61,62,68,69,71,72,73,74,75,76,79,80,81,],[6,6,-3,-2,-27,-28,6,-5,6,-25,6,-4,6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,6,-6,6,-12,6,-9,6,6,6,6,6,-11,-7,6,6,6,-10,]),'IF':([0,2,3,9,14,15,16,19,20,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,60,61,62,68,69,71,72,73,74,75,76,79,80,81,],[7,7,-3,-2,-27,-28,7,-5,7,-25,7,-4,7,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,7,-6,7,-12,7,-9,7,7,7,7,7,-11,-7,7,7,7,-10,]),'PRINT':([0,2,3,9,14,15,16,19,20,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,59,60,61,62,68,69,71,72,73,74,75,76,79,80,81,],[8,8,-3,-2,-27,-28,8,-5,8,-25,8,-4,8,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,8,-6,8,-12,8,-9,8,8,8,8,8,-11,-7,8,8,8,-10,]),'$end':([1,2,3,9,14,15,19,33,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,57,60,62,74,75,81,],[0,-1,-3,-2,-27,-28,-5,-25,-4,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,-6,-12,-9,-11,-7,-10,]),'LACC':([3,9,14,15,19,33,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,57,59,60,62,71,72,74,75,76,80,81,],[-3,-2,-27,-28,-5,-25,-4,57,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,-6,62,-12,-9,74,75,-11,-7,77,81,-10,]),'EQUALS':([4,],[10,]),'MINUS':([5,7,10,11,12,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,64,67,],[12,12,12,22,12,12,-27,-28,22,12,22,12,12,12,12,12,12,12,12,12,12,12,12,-25,22,22,-13,-14,-15,-16,22,22,22,22,22,22,22,22,-26,12,22,]),'LPAREN':([5,6,7,8,10,12,13,18,21,22,23,24,25,26,27,28,29,30,31,32,64,],[13,16,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'NUMBER':([5,7,10,12,13,18,21,22,23,24,25,26,27,28,29,30,31,32,53,64,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,58,14,]),'RACC':([11,14,15,33,36,40,41,42,43,44,45,46,47,48,49,50,51,52,65,66,70,78,],[20,-27,-28,-25,55,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,68,69,73,79,]),'PLUS':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[21,-27,-28,21,21,-25,21,21,-13,-14,-15,-16,21,21,21,21,21,21,21,21,-26,21,]),'TIMES':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[23,-27,-28,23,23,23,23,23,23,23,-15,-16,23,23,23,23,23,23,23,23,-26,23,]),'DIVIDE':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[24,-27,-28,24,24,24,24,24,24,24,-15,-16,24,24,24,24,24,24,24,24,-26,24,]),'or':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[25,-27,-28,25,25,-25,25,25,-13,-14,-15,-16,-17,-18,-19,25,25,25,25,25,-26,25,]),'and':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[26,-27,-28,26,26,-25,26,26,-13,-14,-15,-16,26,-18,-19,26,26,26,26,26,-26,26,]),'SUP':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[27,-27,-28,27,27,-25,27,27,-13,-14,-15,-16,27,27,None,27,27,27,27,27,-26,27,]),'INFF':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[28,-27,-28,28,28,-25,28,28,-13,-14,-15,-16,-17,-18,-19,28,28,28,28,28,-26,28,]),'ISEQUAL':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[29,-27,-28,29,29,-25,29,29,-13,-14,-15,-16,-17,-18,-19,29,29,29,29,29,-26,29,]),'NOTEQUAL':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[30,-27,-28,30,30,-25,30,30,-13,-14,-15,-16,-17,-18,-19,30,30,30,30,30,-26,30,]),'ET':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[31,-27,-28,31,31,-25,31,31,-13,-14,-15,-16,-17,-18,-19,31,31,31,31,31,-26,31,]),'OU':([11,14,15,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[32,-27,-28,32,32,-25,32,32,-13,-14,-15,-16,-17,-18,-19,32,32,32,32,32,-26,32,]),'THEN':([14,15,17,33,40,41,42,43,44,45,46,47,48,49,50,51,52,67,],[-27,-28,36,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,70,]),'SEMI':([14,15,19,33,40,41,42,43,44,45,46,47,48,49,50,51,52,56,],[-27,-28,38,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,60,]),'TO':([14,15,19,33,35,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,57,60,62,74,75,81,],[-27,-28,-5,-25,53,-4,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,-6,-12,-9,-11,-7,-10,]),'RPAREN':([14,15,19,33,34,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,57,60,62,63,74,75,81,],[-27,-28,-5,-25,52,56,-4,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-8,-6,-12,-9,66,-11,-7,-10,]),'COMMA':([58,],[61,]),'ELSEIF':([62,],[64,]),'ELSE':([62,77,],[65,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,20,55,68,69,73,79,],[2,39,59,71,72,76,80,]),'statement':([0,2,16,20,36,39,55,59,61,68,69,71,72,73,76,79,80,],[3,9,35,3,54,9,3,9,63,3,3,9,9,3,9,3,9,]),'expression':([5,7,10,12,13,18,21,22,23,24,25,26,27,28,29,30,31,32,64,],[11,17,19,33,34,37,40,41,42,43,44,45,46,47,48,49,50,51,67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcMulrilignesVersAST.py',175),
  ('bloc -> bloc statement','bloc',2,'p_bloc','calcMulrilignesVersAST.py',182),
  ('bloc -> statement','bloc',1,'p_bloc','calcMulrilignesVersAST.py',183),
  ('statement -> NAME EQUALS expression SEMI','statement',4,'p_statement_assign','calcMulrilignesVersAST.py',191),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calcMulrilignesVersAST.py',192),
  ('statement -> WHILE expression RACC bloc LACC','statement',5,'p_while_statement','calcMulrilignesVersAST.py',197),
  ('statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC','statement',11,'p_for_loop','calcMulrilignesVersAST.py',201),
  ('statement -> IF expression THEN statement','statement',4,'p_if_els_statement','calcMulrilignesVersAST.py',206),
  ('statement -> IF expression THEN RACC bloc LACC','statement',6,'p_if_els_statement','calcMulrilignesVersAST.py',207),
  ('statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',16,'p_if_els_statement','calcMulrilignesVersAST.py',208),
  ('statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',10,'p_if_els_statement','calcMulrilignesVersAST.py',209),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','calcMulrilignesVersAST.py',218),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',223),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',224),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',225),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',226),
  ('expression -> expression or expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',227),
  ('expression -> expression and expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',228),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',229),
  ('expression -> expression INFF expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',230),
  ('expression -> expression ISEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',231),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',232),
  ('expression -> expression ET expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',233),
  ('expression -> expression OU expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',234),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calcMulrilignesVersAST.py',241),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcMulrilignesVersAST.py',245),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcMulrilignesVersAST.py',249),
  ('expression -> NAME','expression',1,'p_expression_name','calcMulrilignesVersAST.py',253),
]
