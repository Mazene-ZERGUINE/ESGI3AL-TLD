
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandnonassocEQUALSSUPleftPLUSMINUSleftTIMESDIVIDEDIVIDE ELSE ELSEIF EQUALS ET IF INFF ISEQUAL LACC LPAREN MINUS NAME NOTEQUAL NUMBER OU PLUS PRINT RACC RPAREN SEMI SUP THEN TIMES and orstart : bloc bloc : bloc statement\n    | statementstatement : NAME EQUALS expression SEMI   statement : IF expression THEN statement\n                  | IF expression THEN RACC bloc LACC  \n                  | IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n                  | IF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n    \n    statement : PRINT LPAREN expression RPAREN SEMIexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression or expression\n                  | expression and expression\n                  | expression SUP expression\n                  | expression INFF expression\n                  | expression ISEQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression ET expression\n                  | expression OU expression\n\n                  expression : MINUS expression expression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,2,3,5,7,8,10,11,14,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,49,50,51,52,55,57,58,59,60,63,64,65,],[4,4,-3,13,-2,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,-4,-5,4,4,-9,-6,13,4,4,4,-8,4,4,4,-7,]),'IF':([0,2,3,7,16,32,33,34,49,50,51,55,57,58,59,60,63,64,65,],[5,5,-3,-2,5,-4,-5,5,5,-9,-6,5,5,5,-8,5,5,5,-7,]),'PRINT':([0,2,3,7,16,32,33,34,49,50,51,55,57,58,59,60,63,64,65,],[6,6,-3,-2,6,-4,-5,6,6,-9,-6,6,6,6,-8,6,6,6,-7,]),'$end':([1,2,3,7,32,33,50,51,59,65,],[0,-1,-3,-2,-4,-5,-9,-6,-8,-7,]),'LACC':([3,7,32,33,49,50,51,57,59,60,64,65,],[-3,-2,-4,-5,51,-9,-6,59,-8,61,65,-7,]),'EQUALS':([4,],[8,]),'MINUS':([5,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,52,54,],[10,10,18,10,10,-24,-25,10,18,10,10,10,10,10,10,10,10,10,10,10,10,-22,18,18,-10,-11,-12,-13,18,18,18,18,18,18,18,18,-23,10,18,]),'LPAREN':([5,6,8,10,11,14,17,18,19,20,21,22,23,24,25,26,27,28,52,],[11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NUMBER':([5,8,10,11,14,17,18,19,20,21,22,23,24,25,26,27,28,52,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'THEN':([9,12,13,29,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[16,-24,-25,-22,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,56,]),'PLUS':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[17,-24,-25,17,-22,17,17,-10,-11,-12,-13,17,17,17,17,17,17,17,17,-23,17,]),'TIMES':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[19,-24,-25,19,19,19,19,19,19,-12,-13,19,19,19,19,19,19,19,19,-23,19,]),'DIVIDE':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[20,-24,-25,20,20,20,20,20,20,-12,-13,20,20,20,20,20,20,20,20,-23,20,]),'or':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[21,-24,-25,21,-22,21,21,-10,-11,-12,-13,-14,-15,-16,21,21,21,21,21,-23,21,]),'and':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[22,-24,-25,22,-22,22,22,-10,-11,-12,-13,22,-15,-16,22,22,22,22,22,-23,22,]),'SUP':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[23,-24,-25,23,-22,23,23,-10,-11,-12,-13,23,23,None,23,23,23,23,23,-23,23,]),'INFF':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[24,-24,-25,24,-22,24,24,-10,-11,-12,-13,-14,-15,-16,24,24,24,24,24,-23,24,]),'ISEQUAL':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[25,-24,-25,25,-22,25,25,-10,-11,-12,-13,-14,-15,-16,25,25,25,25,25,-23,25,]),'NOTEQUAL':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[26,-24,-25,26,-22,26,26,-10,-11,-12,-13,-14,-15,-16,26,26,26,26,26,-23,26,]),'ET':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[27,-24,-25,27,-22,27,27,-10,-11,-12,-13,-14,-15,-16,27,27,27,27,27,-23,27,]),'OU':([9,12,13,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,54,],[28,-24,-25,28,-22,28,28,-10,-11,-12,-13,-14,-15,-16,28,28,28,28,28,-23,28,]),'SEMI':([12,13,15,29,35,36,37,38,39,40,41,42,43,44,45,46,47,48,],[-24,-25,32,-22,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,50,]),'RPAREN':([12,13,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,],[-24,-25,-22,47,48,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,]),'RACC':([16,53,56,62,],[34,55,58,63,]),'ELSEIF':([51,],[52,]),'ELSE':([51,61,],[53,62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,34,55,58,63,],[2,49,57,60,64,]),'statement':([0,2,16,34,49,55,57,58,60,63,64,],[3,7,33,3,7,3,7,3,7,3,7,]),'expression':([5,8,10,11,14,17,18,19,20,21,22,23,24,25,26,27,28,52,],[9,15,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcMulrilignesVersAST.py',151),
  ('bloc -> bloc statement','bloc',2,'p_bloc','calcMulrilignesVersAST.py',158),
  ('bloc -> statement','bloc',1,'p_bloc','calcMulrilignesVersAST.py',159),
  ('statement -> NAME EQUALS expression SEMI','statement',4,'p_statement_assign','calcMulrilignesVersAST.py',167),
  ('statement -> IF expression THEN statement','statement',4,'p_if_els_statement','calcMulrilignesVersAST.py',172),
  ('statement -> IF expression THEN RACC bloc LACC','statement',6,'p_if_els_statement','calcMulrilignesVersAST.py',173),
  ('statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',16,'p_if_els_statement','calcMulrilignesVersAST.py',174),
  ('statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',10,'p_if_els_statement','calcMulrilignesVersAST.py',175),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','calcMulrilignesVersAST.py',184),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',189),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',190),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',191),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',192),
  ('expression -> expression or expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',193),
  ('expression -> expression and expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',194),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',195),
  ('expression -> expression INFF expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',196),
  ('expression -> expression ISEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',197),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',198),
  ('expression -> expression ET expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',199),
  ('expression -> expression OU expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',200),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calcMulrilignesVersAST.py',207),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcMulrilignesVersAST.py',211),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcMulrilignesVersAST.py',215),
  ('expression -> NAME','expression',1,'p_expression_name','calcMulrilignesVersAST.py',219),
]
