
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandnonassocEQUALSSUPleftPLUSMINUSleftTIMESDIVIDECOMMA DIVIDE ELSE ELSEIF EQUALS ET FOR IF INFF ISEQUAL LACC LPAREN MINUS NAME NOTEQUAL NUMBER OU PLUS PRINT RACC RPAREN SEMI SUP THEN TIMES TO and orstart : bloc bloc : bloc statement\n    | statementstatement : NAME EQUALS expression SEMI \n                 | NAME EQUALS expression  statement : FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC  statement : IF expression THEN statement\n                  | IF expression THEN RACC bloc LACC  \n                  | IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n                  | IF expression THEN RACC bloc LACC ELSE RACC bloc LACC \n    \n    statement : PRINT LPAREN expression RPAREN SEMIexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression or expression\n                  | expression and expression\n                  | expression SUP expression\n                  | expression INFF expression\n                  | expression ISEQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression ET expression\n                  | expression OU expression\n\n                  expression : MINUS expression expression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,2,3,6,8,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,59,63,64,66,67,68,69,70,71,74,75,76,],[4,4,-3,15,-2,15,4,15,15,-26,-27,15,-5,4,15,15,15,15,15,15,15,15,15,15,15,15,-24,-4,-7,4,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,4,-11,4,-8,15,4,4,4,4,4,-10,-6,4,4,4,-9,]),'FOR':([0,2,3,8,10,14,15,17,19,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,63,64,66,67,68,69,70,71,74,75,76,],[5,5,-3,-2,5,-26,-27,-5,5,-24,-4,-7,5,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,5,-11,5,-8,5,5,5,5,5,-10,-6,5,5,5,-9,]),'IF':([0,2,3,8,10,14,15,17,19,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,63,64,66,67,68,69,70,71,74,75,76,],[6,6,-3,-2,6,-26,-27,-5,6,-24,-4,-7,6,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,6,-11,6,-8,6,6,6,6,6,-10,-6,6,6,6,-9,]),'PRINT':([0,2,3,8,10,14,15,17,19,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,63,64,66,67,68,69,70,71,74,75,76,],[7,7,-3,-2,7,-26,-27,-5,7,-24,-4,-7,7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,7,-11,7,-8,7,7,7,7,7,-10,-6,7,7,7,-9,]),'$end':([1,2,3,8,14,15,17,32,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,69,70,76,],[0,-1,-3,-2,-26,-27,-5,-24,-4,-7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-11,-8,-10,-6,-9,]),'LACC':([3,8,14,15,17,32,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,57,66,67,69,70,71,75,76,],[-3,-2,-26,-27,-5,-24,-4,-7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,57,-11,-8,69,70,-10,-6,72,76,-9,]),'EQUALS':([4,],[9,]),'LPAREN':([5,6,7,9,12,13,16,20,21,22,23,24,25,26,27,28,29,30,31,59,],[10,13,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'MINUS':([6,9,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,],[12,12,21,12,12,-26,-27,12,21,12,12,12,12,12,12,12,12,12,12,12,12,-24,21,21,-12,-13,-14,-15,21,21,21,21,21,21,21,21,-25,12,21,]),'NUMBER':([6,9,12,13,16,20,21,22,23,24,25,26,27,28,29,30,31,36,59,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,53,14,]),'THEN':([11,14,15,32,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[19,-26,-27,-24,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,65,]),'PLUS':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[20,-26,-27,20,-24,20,20,-12,-13,-14,-15,20,20,20,20,20,20,20,20,-25,20,]),'TIMES':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[22,-26,-27,22,22,22,22,22,22,-14,-15,22,22,22,22,22,22,22,22,-25,22,]),'DIVIDE':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[23,-26,-27,23,23,23,23,23,23,-14,-15,23,23,23,23,23,23,23,23,-25,23,]),'or':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[24,-26,-27,24,-24,24,24,-12,-13,-14,-15,-16,-17,-18,24,24,24,24,24,-25,24,]),'and':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[25,-26,-27,25,-24,25,25,-12,-13,-14,-15,25,-17,-18,25,25,25,25,25,-25,25,]),'SUP':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[26,-26,-27,26,-24,26,26,-12,-13,-14,-15,26,26,None,26,26,26,26,26,-25,26,]),'INFF':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[27,-26,-27,27,-24,27,27,-12,-13,-14,-15,-16,-17,-18,27,27,27,27,27,-25,27,]),'ISEQUAL':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[28,-26,-27,28,-24,28,28,-12,-13,-14,-15,-16,-17,-18,28,28,28,28,28,-25,28,]),'NOTEQUAL':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[29,-26,-27,29,-24,29,29,-12,-13,-14,-15,-16,-17,-18,29,29,29,29,29,-25,29,]),'ET':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[30,-26,-27,30,-24,30,30,-12,-13,-14,-15,-16,-17,-18,30,30,30,30,30,-25,30,]),'OU':([11,14,15,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,62,],[31,-26,-27,31,-24,31,31,-12,-13,-14,-15,-16,-17,-18,31,31,31,31,31,-25,31,]),'SEMI':([14,15,17,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-26,-27,35,-24,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,55,]),'TO':([14,15,17,18,32,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,69,70,76,],[-26,-27,-5,36,-24,-4,-7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-11,-8,-10,-6,-9,]),'RPAREN':([14,15,17,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,58,69,70,76,],[-26,-27,-5,-24,51,52,-4,-7,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-11,-8,61,-10,-6,-9,]),'RACC':([19,60,61,65,73,],[38,63,64,68,74,]),'COMMA':([53,],[56,]),'ELSEIF':([57,],[59,]),'ELSE':([57,72,],[60,73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,38,63,64,68,74,],[2,54,66,67,71,75,]),'statement':([0,2,10,19,38,54,56,63,64,66,67,68,71,74,75,],[3,8,18,37,3,8,58,3,3,8,8,3,8,3,8,]),'expression':([6,9,12,13,16,20,21,22,23,24,25,26,27,28,29,30,31,59,],[11,17,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcMulrilignesVersAST.py',160),
  ('bloc -> bloc statement','bloc',2,'p_bloc','calcMulrilignesVersAST.py',167),
  ('bloc -> statement','bloc',1,'p_bloc','calcMulrilignesVersAST.py',168),
  ('statement -> NAME EQUALS expression SEMI','statement',4,'p_statement_assign','calcMulrilignesVersAST.py',176),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calcMulrilignesVersAST.py',177),
  ('statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC','statement',11,'p_for_loop','calcMulrilignesVersAST.py',182),
  ('statement -> IF expression THEN statement','statement',4,'p_if_els_statement','calcMulrilignesVersAST.py',185),
  ('statement -> IF expression THEN RACC bloc LACC','statement',6,'p_if_els_statement','calcMulrilignesVersAST.py',186),
  ('statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',16,'p_if_els_statement','calcMulrilignesVersAST.py',187),
  ('statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC','statement',10,'p_if_els_statement','calcMulrilignesVersAST.py',188),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','calcMulrilignesVersAST.py',197),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',202),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',203),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',204),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',205),
  ('expression -> expression or expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',206),
  ('expression -> expression and expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',207),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',208),
  ('expression -> expression INFF expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',209),
  ('expression -> expression ISEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',210),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',211),
  ('expression -> expression ET expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',212),
  ('expression -> expression OU expression','expression',3,'p_expression_binop','calcMulrilignesVersAST.py',213),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calcMulrilignesVersAST.py',220),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcMulrilignesVersAST.py',224),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcMulrilignesVersAST.py',228),
  ('expression -> NAME','expression',1,'p_expression_name','calcMulrilignesVersAST.py',232),
]
