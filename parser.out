Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> NAME EQUALS expression SEMI
Rule 5     statement -> NAME EQUALS expression
Rule 6     statement -> WHILE expression RACC bloc LACC
Rule 7     statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN
Rule 8     statement -> IF expression THEN statement
Rule 9     statement -> IF expression THEN RACC bloc LACC
Rule 10    statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 11    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 12    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 13    statement -> PRINT STRING SEMI
<<<<<<< HEAD
Rule 14    params -> NAME
Rule 15    params -> NAME COMMA params
Rule 16    statement -> FUNCTION NAME LPAREN RPAREN START bloc END
Rule 17    statement -> FUNCTION NAME LPAREN params RPAREN START bloc END
Rule 18    statement -> NAME LPAREN RPAREN SEMI
Rule 19    statement -> NAME LPAREN param_call RPAREN SEMI
Rule 20    param_call -> expression
Rule 21    param_call -> expression COMMA param_call
Rule 22    expression -> expression PLUS expression
Rule 23    expression -> expression MINUS expression
Rule 24    expression -> expression TIMES expression
Rule 25    expression -> expression DIVIDE expression
Rule 26    expression -> expression or expression
Rule 27    expression -> expression and expression
Rule 28    expression -> expression SUP expression
Rule 29    expression -> expression INFF expression
Rule 30    expression -> expression ISEQUAL expression
Rule 31    expression -> expression NOTEQUAL expression
Rule 32    expression -> expression ET expression
Rule 33    expression -> expression OU expression
Rule 34    statement -> NAME INCR SEMI
Rule 35    statement -> NAME DECR SEMI
Rule 36    statement -> NAME INCR
Rule 37    statement -> NAME DECR
Rule 38    statement -> NAME PLUSEQ NUMBER SEMI
Rule 39    statement -> NAME MINEQ NUMBER SEMI
Rule 40    statement -> NAME PLUSEQ NUMBER
Rule 41    statement -> NAME MINEQ NUMBER
Rule 42    expression -> MINUS expression
Rule 43    expression -> LPAREN expression RPAREN
Rule 44    expression -> NUMBER
Rule 45    expression -> NAME
=======
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> expression MINUS expression
Rule 16    expression -> expression TIMES expression
Rule 17    expression -> expression DIVIDE expression
Rule 18    expression -> expression or expression
Rule 19    expression -> expression and expression
Rule 20    expression -> expression SUP expression
Rule 21    expression -> expression INFF expression
Rule 22    expression -> expression ISEQUAL expression
Rule 23    expression -> expression NOTEQUAL expression
Rule 24    expression -> expression ET expression
Rule 25    expression -> expression OU expression
Rule 26    statement -> NAME INCR SEMI
Rule 27    statement -> NAME DECR SEMI
Rule 28    expression -> MINUS expression
Rule 29    expression -> LPAREN expression RPAREN
Rule 30    expression -> NUMBER
Rule 31    expression -> NAME
>>>>>>> 03aa536 (++ and --)

Terminals, with rules where they appear

COMMA                : 7 15 21
COMMENT              : 
<<<<<<< HEAD
DECR                 : 35 37
DIVIDE               : 25
=======
DECR                 : 27
DIVIDE               : 17
>>>>>>> 03aa536 (++ and --)
ELSE                 : 10 11
ELSEIF               : 10
END                  : 16 17
EQUALS               : 4 5
<<<<<<< HEAD
ET                   : 32
=======
ET                   : 24
>>>>>>> 03aa536 (++ and --)
FOR                  : 7
FUNCTION             : 16 17
IF                   : 8 9 10 11
<<<<<<< HEAD
INCR                 : 34 36
INFF                 : 29
ISEQUAL              : 30
LACC                 : 6 7 9 10 10 10 11 11
LPAREN               : 7 12 16 17 18 19 43
MINEQ                : 39 41
MINUS                : 23 42
NAME                 : 4 5 14 15 16 17 18 19 34 35 36 37 38 39 40 41 45
NOTEQUAL             : 31
NUMBER               : 7 38 39 40 41 44
OU                   : 33
PLUS                 : 22
PLUSEQ               : 38 40
PRINT                : 12 13
RACC                 : 6 7 9 10 10 10 11 11
RPAREN               : 7 12 16 17 18 19 43
SEMI                 : 4 12 13 18 19 34 35 38 39
START                : 16 17
STRING               : 13
SUP                  : 28
THEN                 : 8 9 10 10 11
TIMES                : 24
TO                   : 7
WHILE                : 6
and                  : 27
error                : 
or                   : 26

Nonterminals, with rules where they appear

bloc                 : 1 2 6 7 9 10 10 10 11 11 16 17
expression           : 4 5 6 8 9 10 10 11 12 20 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 42 43
param_call           : 19 21
params               : 15 17
=======
INCR                 : 26
INFF                 : 21
ISEQUAL              : 22
LACC                 : 6 9 10 10 10 11 11
LPAREN               : 7 12 29
MINUS                : 15 28
NAME                 : 4 5 26 27 31
NOTEQUAL             : 23
NUMBER               : 7 30
OU                   : 25
PLUS                 : 14
PRINT                : 12 13
RACC                 : 6 9 10 10 10 11 11
RPAREN               : 7 12 29
SEMI                 : 4 12 13 26 27
STRING               : 13
SUP                  : 20
THEN                 : 8 9 10 10 11
TIMES                : 16
TO                   : 7
WHILE                : 6
and                  : 19
error                : 
or                   : 18

Nonterminals, with rules where they appear

bloc                 : 1 2 6 9 10 10 10 11 11
expression           : 4 5 6 8 9 10 10 11 12 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 28 29
>>>>>>> 03aa536 (++ and --)
start                : 0
statement            : 2 3 7 7 8

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI
>>>>>>> 03aa536 (++ and --)

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI
>>>>>>> 03aa536 (++ and --)

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 3

    (3) bloc -> statement .

    NAME            reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    LACC            reduce using rule 3 (bloc -> statement .)
    END             reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> NAME . EQUALS expression SEMI
    (5) statement -> NAME . EQUALS expression
<<<<<<< HEAD
    (18) statement -> NAME . LPAREN RPAREN SEMI
    (19) statement -> NAME . LPAREN param_call RPAREN SEMI
    (34) statement -> NAME . INCR SEMI
    (35) statement -> NAME . DECR SEMI
    (36) statement -> NAME . INCR
    (37) statement -> NAME . DECR
    (38) statement -> NAME . PLUSEQ NUMBER SEMI
    (39) statement -> NAME . MINEQ NUMBER SEMI
    (40) statement -> NAME . PLUSEQ NUMBER
    (41) statement -> NAME . MINEQ NUMBER

    EQUALS          shift and go to state 11
    LPAREN          shift and go to state 12
    INCR            shift and go to state 13
    DECR            shift and go to state 14
    PLUSEQ          shift and go to state 15
    MINEQ           shift and go to state 16
=======
    (26) statement -> NAME . INCR SEMI
    (27) statement -> NAME . DECR SEMI

    EQUALS          shift and go to state 10
    INCR            shift and go to state 11
    DECR            shift and go to state 12
>>>>>>> 03aa536 (++ and --)


state 5

    (6) statement -> WHILE . expression RACC bloc LACC
<<<<<<< HEAD
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 17
=======
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17

    expression                     shift and go to state 13
>>>>>>> 03aa536 (++ and --)

state 6

    (7) statement -> FOR . LPAREN statement TO NUMBER COMMA statement RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 22
=======
    LPAREN          shift and go to state 18
>>>>>>> 03aa536 (++ and --)


state 7

    (8) statement -> IF . expression THEN statement
    (9) statement -> IF . expression THEN RACC bloc LACC
    (10) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
<<<<<<< HEAD
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 23
=======
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17

    expression                     shift and go to state 19
>>>>>>> 03aa536 (++ and --)

state 8

    (12) statement -> PRINT . LPAREN expression RPAREN SEMI
    (13) statement -> PRINT . STRING SEMI

<<<<<<< HEAD
    LPAREN          shift and go to state 24
    STRING          shift and go to state 25
=======
    LPAREN          shift and go to state 20
    STRING          shift and go to state 21
>>>>>>> 03aa536 (++ and --)


state 9

    (16) statement -> FUNCTION . NAME LPAREN RPAREN START bloc END
    (17) statement -> FUNCTION . NAME LPAREN params RPAREN START bloc END

    NAME            shift and go to state 26


state 10

    (2) bloc -> bloc statement .

    NAME            reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    LACC            reduce using rule 2 (bloc -> bloc statement .)
    END             reduce using rule 2 (bloc -> bloc statement .)


<<<<<<< HEAD
state 11

    (4) statement -> NAME EQUALS . expression SEMI
    (5) statement -> NAME EQUALS . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21
=======
state 10

    (4) statement -> NAME EQUALS . expression SEMI
    (5) statement -> NAME EQUALS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17

    expression                     shift and go to state 22

state 11

    (26) statement -> NAME INCR . SEMI

    SEMI            shift and go to state 23
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 27

state 12

<<<<<<< HEAD
    (18) statement -> NAME LPAREN . RPAREN SEMI
    (19) statement -> NAME LPAREN . param_call RPAREN SEMI
    (20) param_call -> . expression
    (21) param_call -> . expression COMMA param_call
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    RPAREN          shift and go to state 28
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    param_call                     shift and go to state 29
    expression                     shift and go to state 30

state 13

    (34) statement -> NAME INCR . SEMI
    (36) statement -> NAME INCR .

    SEMI            shift and go to state 31
    NAME            reduce using rule 36 (statement -> NAME INCR .)
    WHILE           reduce using rule 36 (statement -> NAME INCR .)
    FOR             reduce using rule 36 (statement -> NAME INCR .)
    IF              reduce using rule 36 (statement -> NAME INCR .)
    PRINT           reduce using rule 36 (statement -> NAME INCR .)
    FUNCTION        reduce using rule 36 (statement -> NAME INCR .)
    $end            reduce using rule 36 (statement -> NAME INCR .)
    TO              reduce using rule 36 (statement -> NAME INCR .)
    LACC            reduce using rule 36 (statement -> NAME INCR .)
    END             reduce using rule 36 (statement -> NAME INCR .)
    RPAREN          reduce using rule 36 (statement -> NAME INCR .)
=======
    (27) statement -> NAME DECR . SEMI

    SEMI            shift and go to state 24


state 13

    (6) statement -> WHILE expression . RACC bloc LACC
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            shift and go to state 25
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37
>>>>>>> 03aa536 (++ and --)


state 14

<<<<<<< HEAD
    (35) statement -> NAME DECR . SEMI
    (37) statement -> NAME DECR .

    SEMI            shift and go to state 32
    NAME            reduce using rule 37 (statement -> NAME DECR .)
    WHILE           reduce using rule 37 (statement -> NAME DECR .)
    FOR             reduce using rule 37 (statement -> NAME DECR .)
    IF              reduce using rule 37 (statement -> NAME DECR .)
    PRINT           reduce using rule 37 (statement -> NAME DECR .)
    FUNCTION        reduce using rule 37 (statement -> NAME DECR .)
    $end            reduce using rule 37 (statement -> NAME DECR .)
    TO              reduce using rule 37 (statement -> NAME DECR .)
    LACC            reduce using rule 37 (statement -> NAME DECR .)
    END             reduce using rule 37 (statement -> NAME DECR .)
    RPAREN          reduce using rule 37 (statement -> NAME DECR .)
=======
    (28) expression -> MINUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 38

state 15

<<<<<<< HEAD
    (38) statement -> NAME PLUSEQ . NUMBER SEMI
    (40) statement -> NAME PLUSEQ . NUMBER

    NUMBER          shift and go to state 33
=======
    (29) expression -> LPAREN . expression RPAREN
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 39

state 16

<<<<<<< HEAD
    (39) statement -> NAME MINEQ . NUMBER SEMI
    (41) statement -> NAME MINEQ . NUMBER

    NUMBER          shift and go to state 34
=======
    (30) expression -> NUMBER .

    RACC            reduce using rule 30 (expression -> NUMBER .)
    PLUS            reduce using rule 30 (expression -> NUMBER .)
    MINUS           reduce using rule 30 (expression -> NUMBER .)
    TIMES           reduce using rule 30 (expression -> NUMBER .)
    DIVIDE          reduce using rule 30 (expression -> NUMBER .)
    or              reduce using rule 30 (expression -> NUMBER .)
    and             reduce using rule 30 (expression -> NUMBER .)
    SUP             reduce using rule 30 (expression -> NUMBER .)
    INFF            reduce using rule 30 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 30 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 30 (expression -> NUMBER .)
    ET              reduce using rule 30 (expression -> NUMBER .)
    OU              reduce using rule 30 (expression -> NUMBER .)
    THEN            reduce using rule 30 (expression -> NUMBER .)
    SEMI            reduce using rule 30 (expression -> NUMBER .)
    NAME            reduce using rule 30 (expression -> NUMBER .)
    WHILE           reduce using rule 30 (expression -> NUMBER .)
    FOR             reduce using rule 30 (expression -> NUMBER .)
    IF              reduce using rule 30 (expression -> NUMBER .)
    PRINT           reduce using rule 30 (expression -> NUMBER .)
    $end            reduce using rule 30 (expression -> NUMBER .)
    TO              reduce using rule 30 (expression -> NUMBER .)
    LACC            reduce using rule 30 (expression -> NUMBER .)
    RPAREN          reduce using rule 30 (expression -> NUMBER .)
>>>>>>> 03aa536 (++ and --)


state 17

<<<<<<< HEAD
    (6) statement -> WHILE expression . RACC bloc LACC
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47
=======
    (31) expression -> NAME .

    RACC            reduce using rule 31 (expression -> NAME .)
    PLUS            reduce using rule 31 (expression -> NAME .)
    MINUS           reduce using rule 31 (expression -> NAME .)
    TIMES           reduce using rule 31 (expression -> NAME .)
    DIVIDE          reduce using rule 31 (expression -> NAME .)
    or              reduce using rule 31 (expression -> NAME .)
    and             reduce using rule 31 (expression -> NAME .)
    SUP             reduce using rule 31 (expression -> NAME .)
    INFF            reduce using rule 31 (expression -> NAME .)
    ISEQUAL         reduce using rule 31 (expression -> NAME .)
    NOTEQUAL        reduce using rule 31 (expression -> NAME .)
    ET              reduce using rule 31 (expression -> NAME .)
    OU              reduce using rule 31 (expression -> NAME .)
    THEN            reduce using rule 31 (expression -> NAME .)
    SEMI            reduce using rule 31 (expression -> NAME .)
    NAME            reduce using rule 31 (expression -> NAME .)
    WHILE           reduce using rule 31 (expression -> NAME .)
    FOR             reduce using rule 31 (expression -> NAME .)
    IF              reduce using rule 31 (expression -> NAME .)
    PRINT           reduce using rule 31 (expression -> NAME .)
    $end            reduce using rule 31 (expression -> NAME .)
    TO              reduce using rule 31 (expression -> NAME .)
    LACC            reduce using rule 31 (expression -> NAME .)
    RPAREN          reduce using rule 31 (expression -> NAME .)
>>>>>>> 03aa536 (++ and --)


state 18

<<<<<<< HEAD
    (42) expression -> MINUS . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 48

state 19

    (43) expression -> LPAREN . expression RPAREN
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 49

state 20

    (44) expression -> NUMBER .

    RACC            reduce using rule 44 (expression -> NUMBER .)
    PLUS            reduce using rule 44 (expression -> NUMBER .)
    MINUS           reduce using rule 44 (expression -> NUMBER .)
    TIMES           reduce using rule 44 (expression -> NUMBER .)
    DIVIDE          reduce using rule 44 (expression -> NUMBER .)
    or              reduce using rule 44 (expression -> NUMBER .)
    and             reduce using rule 44 (expression -> NUMBER .)
    SUP             reduce using rule 44 (expression -> NUMBER .)
    INFF            reduce using rule 44 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 44 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 44 (expression -> NUMBER .)
    ET              reduce using rule 44 (expression -> NUMBER .)
    OU              reduce using rule 44 (expression -> NUMBER .)
    THEN            reduce using rule 44 (expression -> NUMBER .)
    SEMI            reduce using rule 44 (expression -> NUMBER .)
    NAME            reduce using rule 44 (expression -> NUMBER .)
    WHILE           reduce using rule 44 (expression -> NUMBER .)
    FOR             reduce using rule 44 (expression -> NUMBER .)
    IF              reduce using rule 44 (expression -> NUMBER .)
    PRINT           reduce using rule 44 (expression -> NUMBER .)
    FUNCTION        reduce using rule 44 (expression -> NUMBER .)
    $end            reduce using rule 44 (expression -> NUMBER .)
    TO              reduce using rule 44 (expression -> NUMBER .)
    LACC            reduce using rule 44 (expression -> NUMBER .)
    END             reduce using rule 44 (expression -> NUMBER .)
    RPAREN          reduce using rule 44 (expression -> NUMBER .)
    COMMA           reduce using rule 44 (expression -> NUMBER .)


state 21

    (45) expression -> NAME .

    RACC            reduce using rule 45 (expression -> NAME .)
    PLUS            reduce using rule 45 (expression -> NAME .)
    MINUS           reduce using rule 45 (expression -> NAME .)
    TIMES           reduce using rule 45 (expression -> NAME .)
    DIVIDE          reduce using rule 45 (expression -> NAME .)
    or              reduce using rule 45 (expression -> NAME .)
    and             reduce using rule 45 (expression -> NAME .)
    SUP             reduce using rule 45 (expression -> NAME .)
    INFF            reduce using rule 45 (expression -> NAME .)
    ISEQUAL         reduce using rule 45 (expression -> NAME .)
    NOTEQUAL        reduce using rule 45 (expression -> NAME .)
    ET              reduce using rule 45 (expression -> NAME .)
    OU              reduce using rule 45 (expression -> NAME .)
    THEN            reduce using rule 45 (expression -> NAME .)
    SEMI            reduce using rule 45 (expression -> NAME .)
    NAME            reduce using rule 45 (expression -> NAME .)
    WHILE           reduce using rule 45 (expression -> NAME .)
    FOR             reduce using rule 45 (expression -> NAME .)
    IF              reduce using rule 45 (expression -> NAME .)
    PRINT           reduce using rule 45 (expression -> NAME .)
    FUNCTION        reduce using rule 45 (expression -> NAME .)
    $end            reduce using rule 45 (expression -> NAME .)
    TO              reduce using rule 45 (expression -> NAME .)
    LACC            reduce using rule 45 (expression -> NAME .)
    END             reduce using rule 45 (expression -> NAME .)
    RPAREN          reduce using rule 45 (expression -> NAME .)
    COMMA           reduce using rule 45 (expression -> NAME .)


state 22

    (7) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
=======
    (7) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN
>>>>>>> 03aa536 (++ and --)
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI
>>>>>>> 03aa536 (++ and --)

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

<<<<<<< HEAD
    statement                      shift and go to state 50

state 23
=======
    statement                      shift and go to state 40

state 19
>>>>>>> 03aa536 (++ and --)

    (8) statement -> IF expression . THEN statement
    (9) statement -> IF expression . THEN RACC bloc LACC
    (10) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
<<<<<<< HEAD
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    THEN            shift and go to state 51
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47


state 24

    (12) statement -> PRINT LPAREN . expression RPAREN SEMI
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 52

state 25

    (13) statement -> PRINT STRING . SEMI

    SEMI            shift and go to state 53


state 26

    (16) statement -> FUNCTION NAME . LPAREN RPAREN START bloc END
    (17) statement -> FUNCTION NAME . LPAREN params RPAREN START bloc END

    LPAREN          shift and go to state 54


state 27

    (4) statement -> NAME EQUALS expression . SEMI
    (5) statement -> NAME EQUALS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    SEMI            shift and go to state 55
=======
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    THEN            shift and go to state 41
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 20

    (12) statement -> PRINT LPAREN . expression RPAREN SEMI
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17

    expression                     shift and go to state 42

state 21

    (13) statement -> PRINT STRING . SEMI

    SEMI            shift and go to state 43


state 22

    (4) statement -> NAME EQUALS expression . SEMI
    (5) statement -> NAME EQUALS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    SEMI            shift and go to state 44
>>>>>>> 03aa536 (++ and --)
    NAME            reduce using rule 5 (statement -> NAME EQUALS expression .)
    WHILE           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FOR             reduce using rule 5 (statement -> NAME EQUALS expression .)
    IF              reduce using rule 5 (statement -> NAME EQUALS expression .)
    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FUNCTION        reduce using rule 5 (statement -> NAME EQUALS expression .)
    $end            reduce using rule 5 (statement -> NAME EQUALS expression .)
    TO              reduce using rule 5 (statement -> NAME EQUALS expression .)
    LACC            reduce using rule 5 (statement -> NAME EQUALS expression .)
    END             reduce using rule 5 (statement -> NAME EQUALS expression .)
    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
<<<<<<< HEAD
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47


state 28

    (18) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 56


state 29

    (19) statement -> NAME LPAREN param_call . RPAREN SEMI

    RPAREN          shift and go to state 57


state 30

    (20) param_call -> expression .
    (21) param_call -> expression . COMMA param_call
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RPAREN          reduce using rule 20 (param_call -> expression .)
    COMMA           shift and go to state 58
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47


state 31

    (34) statement -> NAME INCR SEMI .

    NAME            reduce using rule 34 (statement -> NAME INCR SEMI .)
    WHILE           reduce using rule 34 (statement -> NAME INCR SEMI .)
    FOR             reduce using rule 34 (statement -> NAME INCR SEMI .)
    IF              reduce using rule 34 (statement -> NAME INCR SEMI .)
    PRINT           reduce using rule 34 (statement -> NAME INCR SEMI .)
    FUNCTION        reduce using rule 34 (statement -> NAME INCR SEMI .)
    $end            reduce using rule 34 (statement -> NAME INCR SEMI .)
    TO              reduce using rule 34 (statement -> NAME INCR SEMI .)
    LACC            reduce using rule 34 (statement -> NAME INCR SEMI .)
    END             reduce using rule 34 (statement -> NAME INCR SEMI .)
    RPAREN          reduce using rule 34 (statement -> NAME INCR SEMI .)


state 32

    (35) statement -> NAME DECR SEMI .

    NAME            reduce using rule 35 (statement -> NAME DECR SEMI .)
    WHILE           reduce using rule 35 (statement -> NAME DECR SEMI .)
    FOR             reduce using rule 35 (statement -> NAME DECR SEMI .)
    IF              reduce using rule 35 (statement -> NAME DECR SEMI .)
    PRINT           reduce using rule 35 (statement -> NAME DECR SEMI .)
    FUNCTION        reduce using rule 35 (statement -> NAME DECR SEMI .)
    $end            reduce using rule 35 (statement -> NAME DECR SEMI .)
    TO              reduce using rule 35 (statement -> NAME DECR SEMI .)
    LACC            reduce using rule 35 (statement -> NAME DECR SEMI .)
    END             reduce using rule 35 (statement -> NAME DECR SEMI .)
    RPAREN          reduce using rule 35 (statement -> NAME DECR SEMI .)


state 33

    (38) statement -> NAME PLUSEQ NUMBER . SEMI
    (40) statement -> NAME PLUSEQ NUMBER .

    SEMI            shift and go to state 59
    NAME            reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    WHILE           reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    FOR             reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    IF              reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    PRINT           reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    FUNCTION        reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    $end            reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    TO              reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    LACC            reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    END             reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)
    RPAREN          reduce using rule 40 (statement -> NAME PLUSEQ NUMBER .)


state 34

    (39) statement -> NAME MINEQ NUMBER . SEMI
    (41) statement -> NAME MINEQ NUMBER .

    SEMI            shift and go to state 60
    NAME            reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    WHILE           reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    FOR             reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    IF              reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    PRINT           reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    FUNCTION        reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    $end            reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    TO              reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    LACC            reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    END             reduce using rule 41 (statement -> NAME MINEQ NUMBER .)
    RPAREN          reduce using rule 41 (statement -> NAME MINEQ NUMBER .)


state 35
=======
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 23

    (26) statement -> NAME INCR SEMI .

    NAME            reduce using rule 26 (statement -> NAME INCR SEMI .)
    WHILE           reduce using rule 26 (statement -> NAME INCR SEMI .)
    FOR             reduce using rule 26 (statement -> NAME INCR SEMI .)
    IF              reduce using rule 26 (statement -> NAME INCR SEMI .)
    PRINT           reduce using rule 26 (statement -> NAME INCR SEMI .)
    $end            reduce using rule 26 (statement -> NAME INCR SEMI .)
    TO              reduce using rule 26 (statement -> NAME INCR SEMI .)
    LACC            reduce using rule 26 (statement -> NAME INCR SEMI .)
    RPAREN          reduce using rule 26 (statement -> NAME INCR SEMI .)


state 24

    (27) statement -> NAME DECR SEMI .

    NAME            reduce using rule 27 (statement -> NAME DECR SEMI .)
    WHILE           reduce using rule 27 (statement -> NAME DECR SEMI .)
    FOR             reduce using rule 27 (statement -> NAME DECR SEMI .)
    IF              reduce using rule 27 (statement -> NAME DECR SEMI .)
    PRINT           reduce using rule 27 (statement -> NAME DECR SEMI .)
    $end            reduce using rule 27 (statement -> NAME DECR SEMI .)
    TO              reduce using rule 27 (statement -> NAME DECR SEMI .)
    LACC            reduce using rule 27 (statement -> NAME DECR SEMI .)
    RPAREN          reduce using rule 27 (statement -> NAME DECR SEMI .)


state 25
>>>>>>> 03aa536 (++ and --)

    (6) statement -> WHILE expression RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI
>>>>>>> 03aa536 (++ and --)

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

<<<<<<< HEAD
    bloc                           shift and go to state 61
    statement                      shift and go to state 3

state 36

    (22) expression -> expression PLUS . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 62

state 37

    (23) expression -> expression MINUS . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 63

state 38

    (24) expression -> expression TIMES . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 64

state 39

    (25) expression -> expression DIVIDE . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 65

state 40

    (26) expression -> expression or . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 66

state 41

    (27) expression -> expression and . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 67

state 42

    (28) expression -> expression SUP . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21
=======
    bloc                           shift and go to state 45
    statement                      shift and go to state 3

state 26

    (14) expression -> expression PLUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 68

<<<<<<< HEAD
state 43

    (29) expression -> expression INFF . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21
=======
state 27

    (15) expression -> expression MINUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 69

<<<<<<< HEAD
state 44

    (30) expression -> expression ISEQUAL . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21
=======
state 28

    (16) expression -> expression TIMES . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 70

<<<<<<< HEAD
state 45

    (31) expression -> expression NOTEQUAL . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21
=======
state 29

    (17) expression -> expression DIVIDE . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 71

<<<<<<< HEAD
state 46

    (32) expression -> expression ET . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21
=======
state 30

    (18) expression -> expression or . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 72

<<<<<<< HEAD
state 47

    (33) expression -> expression OU . expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21
=======
state 31

    (19) expression -> expression and . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 73

<<<<<<< HEAD
state 48

    (42) expression -> MINUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            reduce using rule 42 (expression -> MINUS expression .)
    PLUS            reduce using rule 42 (expression -> MINUS expression .)
    MINUS           reduce using rule 42 (expression -> MINUS expression .)
    or              reduce using rule 42 (expression -> MINUS expression .)
    and             reduce using rule 42 (expression -> MINUS expression .)
    SUP             reduce using rule 42 (expression -> MINUS expression .)
    INFF            reduce using rule 42 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 42 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 42 (expression -> MINUS expression .)
    ET              reduce using rule 42 (expression -> MINUS expression .)
    OU              reduce using rule 42 (expression -> MINUS expression .)
    THEN            reduce using rule 42 (expression -> MINUS expression .)
    SEMI            reduce using rule 42 (expression -> MINUS expression .)
    NAME            reduce using rule 42 (expression -> MINUS expression .)
    WHILE           reduce using rule 42 (expression -> MINUS expression .)
    FOR             reduce using rule 42 (expression -> MINUS expression .)
    IF              reduce using rule 42 (expression -> MINUS expression .)
    PRINT           reduce using rule 42 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 42 (expression -> MINUS expression .)
    $end            reduce using rule 42 (expression -> MINUS expression .)
    TO              reduce using rule 42 (expression -> MINUS expression .)
    LACC            reduce using rule 42 (expression -> MINUS expression .)
    END             reduce using rule 42 (expression -> MINUS expression .)
    RPAREN          reduce using rule 42 (expression -> MINUS expression .)
    COMMA           reduce using rule 42 (expression -> MINUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 42 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! or              [ shift and go to state 40 ]
  ! and             [ shift and go to state 41 ]
  ! SUP             [ shift and go to state 42 ]
  ! INFF            [ shift and go to state 43 ]
  ! ISEQUAL         [ shift and go to state 44 ]
  ! NOTEQUAL        [ shift and go to state 45 ]
  ! ET              [ shift and go to state 46 ]
  ! OU              [ shift and go to state 47 ]
=======
state 32

    (20) expression -> expression SUP . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17

    expression                     shift and go to state 52

state 33

    (21) expression -> expression INFF . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 53

state 49

<<<<<<< HEAD
    (43) expression -> LPAREN expression . RPAREN
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47
=======
    (22) expression -> expression ISEQUAL . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 54

state 50

    (23) expression -> expression NOTEQUAL . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

<<<<<<< HEAD
    TO              shift and go to state 75
=======
    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
>>>>>>> 03aa536 (++ and --)

    expression                     shift and go to state 55

state 51

    (24) expression -> expression ET . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17

    expression                     shift and go to state 56

state 37

    (25) expression -> expression OU . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17

    expression                     shift and go to state 57

state 38

    (28) expression -> MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            reduce using rule 28 (expression -> MINUS expression .)
    PLUS            reduce using rule 28 (expression -> MINUS expression .)
    MINUS           reduce using rule 28 (expression -> MINUS expression .)
    or              reduce using rule 28 (expression -> MINUS expression .)
    and             reduce using rule 28 (expression -> MINUS expression .)
    SUP             reduce using rule 28 (expression -> MINUS expression .)
    INFF            reduce using rule 28 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 28 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 28 (expression -> MINUS expression .)
    ET              reduce using rule 28 (expression -> MINUS expression .)
    OU              reduce using rule 28 (expression -> MINUS expression .)
    THEN            reduce using rule 28 (expression -> MINUS expression .)
    SEMI            reduce using rule 28 (expression -> MINUS expression .)
    NAME            reduce using rule 28 (expression -> MINUS expression .)
    WHILE           reduce using rule 28 (expression -> MINUS expression .)
    FOR             reduce using rule 28 (expression -> MINUS expression .)
    IF              reduce using rule 28 (expression -> MINUS expression .)
    PRINT           reduce using rule 28 (expression -> MINUS expression .)
    $end            reduce using rule 28 (expression -> MINUS expression .)
    TO              reduce using rule 28 (expression -> MINUS expression .)
    LACC            reduce using rule 28 (expression -> MINUS expression .)
    RPAREN          reduce using rule 28 (expression -> MINUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 28 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! or              [ shift and go to state 30 ]
  ! and             [ shift and go to state 31 ]
  ! SUP             [ shift and go to state 32 ]
  ! INFF            [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 39

    (29) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RPAREN          shift and go to state 58
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 40

    (7) statement -> FOR LPAREN statement . TO NUMBER COMMA statement RPAREN

    TO              shift and go to state 59


state 41

    (8) statement -> IF expression THEN . statement
    (9) statement -> IF expression THEN . RACC bloc LACC
    (10) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    RACC            shift and go to state 77
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI

    RACC            shift and go to state 61
>>>>>>> 03aa536 (++ and --)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

<<<<<<< HEAD
    statement                      shift and go to state 76

state 52

    (12) statement -> PRINT LPAREN expression . RPAREN SEMI
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47


state 53
=======
    statement                      shift and go to state 60

state 42

    (12) statement -> PRINT LPAREN expression . RPAREN SEMI
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 43
>>>>>>> 03aa536 (++ and --)

    (13) statement -> PRINT STRING SEMI .

    NAME            reduce using rule 13 (statement -> PRINT STRING SEMI .)
    WHILE           reduce using rule 13 (statement -> PRINT STRING SEMI .)
    FOR             reduce using rule 13 (statement -> PRINT STRING SEMI .)
    IF              reduce using rule 13 (statement -> PRINT STRING SEMI .)
    PRINT           reduce using rule 13 (statement -> PRINT STRING SEMI .)
<<<<<<< HEAD
    FUNCTION        reduce using rule 13 (statement -> PRINT STRING SEMI .)
    $end            reduce using rule 13 (statement -> PRINT STRING SEMI .)
    TO              reduce using rule 13 (statement -> PRINT STRING SEMI .)
    LACC            reduce using rule 13 (statement -> PRINT STRING SEMI .)
    END             reduce using rule 13 (statement -> PRINT STRING SEMI .)
    RPAREN          reduce using rule 13 (statement -> PRINT STRING SEMI .)


state 54

    (16) statement -> FUNCTION NAME LPAREN . RPAREN START bloc END
    (17) statement -> FUNCTION NAME LPAREN . params RPAREN START bloc END
    (14) params -> . NAME
    (15) params -> . NAME COMMA params

    RPAREN          shift and go to state 80
    NAME            shift and go to state 79

    params                         shift and go to state 81

state 55
=======
    $end            reduce using rule 13 (statement -> PRINT STRING SEMI .)
    TO              reduce using rule 13 (statement -> PRINT STRING SEMI .)
    LACC            reduce using rule 13 (statement -> PRINT STRING SEMI .)
    RPAREN          reduce using rule 13 (statement -> PRINT STRING SEMI .)


state 44
>>>>>>> 03aa536 (++ and --)

    (4) statement -> NAME EQUALS expression SEMI .

    NAME            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FOR             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    IF              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    $end            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    TO              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LACC            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    END             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)


<<<<<<< HEAD
state 56

    (18) statement -> NAME LPAREN RPAREN SEMI .

    NAME            reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    TO              reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    LACC            reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    END             reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 18 (statement -> NAME LPAREN RPAREN SEMI .)


state 57

    (19) statement -> NAME LPAREN param_call RPAREN . SEMI

    SEMI            shift and go to state 82


state 58

    (21) param_call -> expression COMMA . param_call
    (20) param_call -> . expression
    (21) param_call -> . expression COMMA param_call
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 30
    param_call                     shift and go to state 83

state 59

    (38) statement -> NAME PLUSEQ NUMBER SEMI .

    NAME            reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    WHILE           reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FOR             reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    IF              reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    PRINT           reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    $end            reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TO              reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LACC            reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    END             reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RPAREN          reduce using rule 38 (statement -> NAME PLUSEQ NUMBER SEMI .)


state 60

    (39) statement -> NAME MINEQ NUMBER SEMI .

    NAME            reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    WHILE           reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    FOR             reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    IF              reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    PRINT           reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    $end            reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    TO              reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    LACC            reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    END             reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)
    RPAREN          reduce using rule 39 (statement -> NAME MINEQ NUMBER SEMI .)


state 61
=======
state 45
>>>>>>> 03aa536 (++ and --)

    (6) statement -> WHILE expression RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 84
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI

    LACC            shift and go to state 63
>>>>>>> 03aa536 (++ and --)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

<<<<<<< HEAD
state 62

    (22) expression -> expression PLUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            reduce using rule 22 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 22 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 22 (expression -> expression PLUS expression .)
    or              reduce using rule 22 (expression -> expression PLUS expression .)
    and             reduce using rule 22 (expression -> expression PLUS expression .)
    SUP             reduce using rule 22 (expression -> expression PLUS expression .)
    INFF            reduce using rule 22 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 22 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 22 (expression -> expression PLUS expression .)
    ET              reduce using rule 22 (expression -> expression PLUS expression .)
    OU              reduce using rule 22 (expression -> expression PLUS expression .)
    THEN            reduce using rule 22 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 22 (expression -> expression PLUS expression .)
    NAME            reduce using rule 22 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 22 (expression -> expression PLUS expression .)
    FOR             reduce using rule 22 (expression -> expression PLUS expression .)
    IF              reduce using rule 22 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 22 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 22 (expression -> expression PLUS expression .)
    $end            reduce using rule 22 (expression -> expression PLUS expression .)
    TO              reduce using rule 22 (expression -> expression PLUS expression .)
    LACC            reduce using rule 22 (expression -> expression PLUS expression .)
    END             reduce using rule 22 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 22 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 22 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! or              [ shift and go to state 40 ]
  ! and             [ shift and go to state 41 ]
  ! SUP             [ shift and go to state 42 ]
  ! INFF            [ shift and go to state 43 ]
  ! ISEQUAL         [ shift and go to state 44 ]
  ! NOTEQUAL        [ shift and go to state 45 ]
  ! ET              [ shift and go to state 46 ]
  ! OU              [ shift and go to state 47 ]


state 63

    (23) expression -> expression MINUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            reduce using rule 23 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 23 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 23 (expression -> expression MINUS expression .)
    or              reduce using rule 23 (expression -> expression MINUS expression .)
    and             reduce using rule 23 (expression -> expression MINUS expression .)
    SUP             reduce using rule 23 (expression -> expression MINUS expression .)
    INFF            reduce using rule 23 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 23 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 23 (expression -> expression MINUS expression .)
    ET              reduce using rule 23 (expression -> expression MINUS expression .)
    OU              reduce using rule 23 (expression -> expression MINUS expression .)
    THEN            reduce using rule 23 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 23 (expression -> expression MINUS expression .)
    NAME            reduce using rule 23 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 23 (expression -> expression MINUS expression .)
    FOR             reduce using rule 23 (expression -> expression MINUS expression .)
    IF              reduce using rule 23 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 23 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 23 (expression -> expression MINUS expression .)
    $end            reduce using rule 23 (expression -> expression MINUS expression .)
    TO              reduce using rule 23 (expression -> expression MINUS expression .)
    LACC            reduce using rule 23 (expression -> expression MINUS expression .)
    END             reduce using rule 23 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 23 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! or              [ shift and go to state 40 ]
  ! and             [ shift and go to state 41 ]
  ! SUP             [ shift and go to state 42 ]
  ! INFF            [ shift and go to state 43 ]
  ! ISEQUAL         [ shift and go to state 44 ]
  ! NOTEQUAL        [ shift and go to state 45 ]
  ! ET              [ shift and go to state 46 ]
  ! OU              [ shift and go to state 47 ]


state 64

    (24) expression -> expression TIMES expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            reduce using rule 24 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 24 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 24 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 24 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 24 (expression -> expression TIMES expression .)
    or              reduce using rule 24 (expression -> expression TIMES expression .)
    and             reduce using rule 24 (expression -> expression TIMES expression .)
    SUP             reduce using rule 24 (expression -> expression TIMES expression .)
    INFF            reduce using rule 24 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 24 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 24 (expression -> expression TIMES expression .)
    ET              reduce using rule 24 (expression -> expression TIMES expression .)
    OU              reduce using rule 24 (expression -> expression TIMES expression .)
    THEN            reduce using rule 24 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 24 (expression -> expression TIMES expression .)
    NAME            reduce using rule 24 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 24 (expression -> expression TIMES expression .)
    FOR             reduce using rule 24 (expression -> expression TIMES expression .)
    IF              reduce using rule 24 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 24 (expression -> expression TIMES expression .)
    FUNCTION        reduce using rule 24 (expression -> expression TIMES expression .)
    $end            reduce using rule 24 (expression -> expression TIMES expression .)
    TO              reduce using rule 24 (expression -> expression TIMES expression .)
    LACC            reduce using rule 24 (expression -> expression TIMES expression .)
    END             reduce using rule 24 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 24 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 24 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]
  ! or              [ shift and go to state 40 ]
  ! and             [ shift and go to state 41 ]
  ! SUP             [ shift and go to state 42 ]
  ! INFF            [ shift and go to state 43 ]
  ! ISEQUAL         [ shift and go to state 44 ]
  ! NOTEQUAL        [ shift and go to state 45 ]
  ! ET              [ shift and go to state 46 ]
  ! OU              [ shift and go to state 47 ]


state 65

    (25) expression -> expression DIVIDE expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            reduce using rule 25 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 25 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 25 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 25 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 25 (expression -> expression DIVIDE expression .)
    or              reduce using rule 25 (expression -> expression DIVIDE expression .)
    and             reduce using rule 25 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 25 (expression -> expression DIVIDE expression .)
    INFF            reduce using rule 25 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 25 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 25 (expression -> expression DIVIDE expression .)
    ET              reduce using rule 25 (expression -> expression DIVIDE expression .)
    OU              reduce using rule 25 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 25 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 25 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 25 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 25 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 25 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 25 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 25 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 25 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 25 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 25 (expression -> expression DIVIDE expression .)
    LACC            reduce using rule 25 (expression -> expression DIVIDE expression .)
    END             reduce using rule 25 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 25 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 25 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]
  ! or              [ shift and go to state 40 ]
  ! and             [ shift and go to state 41 ]
  ! SUP             [ shift and go to state 42 ]
  ! INFF            [ shift and go to state 43 ]
  ! ISEQUAL         [ shift and go to state 44 ]
  ! NOTEQUAL        [ shift and go to state 45 ]
  ! ET              [ shift and go to state 46 ]
  ! OU              [ shift and go to state 47 ]


state 66

    (26) expression -> expression or expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            reduce using rule 26 (expression -> expression or expression .)
    or              reduce using rule 26 (expression -> expression or expression .)
    INFF            reduce using rule 26 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 26 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 26 (expression -> expression or expression .)
    ET              reduce using rule 26 (expression -> expression or expression .)
    OU              reduce using rule 26 (expression -> expression or expression .)
    THEN            reduce using rule 26 (expression -> expression or expression .)
    SEMI            reduce using rule 26 (expression -> expression or expression .)
    NAME            reduce using rule 26 (expression -> expression or expression .)
    WHILE           reduce using rule 26 (expression -> expression or expression .)
    FOR             reduce using rule 26 (expression -> expression or expression .)
    IF              reduce using rule 26 (expression -> expression or expression .)
    PRINT           reduce using rule 26 (expression -> expression or expression .)
    FUNCTION        reduce using rule 26 (expression -> expression or expression .)
    $end            reduce using rule 26 (expression -> expression or expression .)
    TO              reduce using rule 26 (expression -> expression or expression .)
    LACC            reduce using rule 26 (expression -> expression or expression .)
    END             reduce using rule 26 (expression -> expression or expression .)
    RPAREN          reduce using rule 26 (expression -> expression or expression .)
    COMMA           reduce using rule 26 (expression -> expression or expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    and             shift and go to state 41
    SUP             shift and go to state 42

  ! PLUS            [ reduce using rule 26 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 26 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 26 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 40 ]
  ! INFF            [ shift and go to state 43 ]
  ! ISEQUAL         [ shift and go to state 44 ]
  ! NOTEQUAL        [ shift and go to state 45 ]
  ! ET              [ shift and go to state 46 ]
  ! OU              [ shift and go to state 47 ]


state 67

    (27) expression -> expression and expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            reduce using rule 27 (expression -> expression and expression .)
    or              reduce using rule 27 (expression -> expression and expression .)
    and             reduce using rule 27 (expression -> expression and expression .)
    INFF            reduce using rule 27 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 27 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 27 (expression -> expression and expression .)
    ET              reduce using rule 27 (expression -> expression and expression .)
    OU              reduce using rule 27 (expression -> expression and expression .)
    THEN            reduce using rule 27 (expression -> expression and expression .)
    SEMI            reduce using rule 27 (expression -> expression and expression .)
    NAME            reduce using rule 27 (expression -> expression and expression .)
    WHILE           reduce using rule 27 (expression -> expression and expression .)
    FOR             reduce using rule 27 (expression -> expression and expression .)
    IF              reduce using rule 27 (expression -> expression and expression .)
    PRINT           reduce using rule 27 (expression -> expression and expression .)
    FUNCTION        reduce using rule 27 (expression -> expression and expression .)
    $end            reduce using rule 27 (expression -> expression and expression .)
    TO              reduce using rule 27 (expression -> expression and expression .)
    LACC            reduce using rule 27 (expression -> expression and expression .)
    END             reduce using rule 27 (expression -> expression and expression .)
    RPAREN          reduce using rule 27 (expression -> expression and expression .)
    COMMA           reduce using rule 27 (expression -> expression and expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    SUP             shift and go to state 42

  ! PLUS            [ reduce using rule 27 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 27 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 40 ]
  ! and             [ shift and go to state 41 ]
  ! INFF            [ shift and go to state 43 ]
  ! ISEQUAL         [ shift and go to state 44 ]
  ! NOTEQUAL        [ shift and go to state 45 ]
  ! ET              [ shift and go to state 46 ]
  ! OU              [ shift and go to state 47 ]


state 68

    (28) expression -> expression SUP expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    RACC            reduce using rule 28 (expression -> expression SUP expression .)
    or              reduce using rule 28 (expression -> expression SUP expression .)
    and             reduce using rule 28 (expression -> expression SUP expression .)
    SUP             reduce using rule 28 (expression -> expression SUP expression .)
    INFF            reduce using rule 28 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 28 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 28 (expression -> expression SUP expression .)
    ET              reduce using rule 28 (expression -> expression SUP expression .)
    OU              reduce using rule 28 (expression -> expression SUP expression .)
    THEN            reduce using rule 28 (expression -> expression SUP expression .)
    SEMI            reduce using rule 28 (expression -> expression SUP expression .)
    NAME            reduce using rule 28 (expression -> expression SUP expression .)
    WHILE           reduce using rule 28 (expression -> expression SUP expression .)
    FOR             reduce using rule 28 (expression -> expression SUP expression .)
    IF              reduce using rule 28 (expression -> expression SUP expression .)
    PRINT           reduce using rule 28 (expression -> expression SUP expression .)
    FUNCTION        reduce using rule 28 (expression -> expression SUP expression .)
    $end            reduce using rule 28 (expression -> expression SUP expression .)
    TO              reduce using rule 28 (expression -> expression SUP expression .)
    LACC            reduce using rule 28 (expression -> expression SUP expression .)
    END             reduce using rule 28 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 28 (expression -> expression SUP expression .)
    COMMA           reduce using rule 28 (expression -> expression SUP expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! PLUS            [ reduce using rule 28 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 40 ]
  ! and             [ shift and go to state 41 ]
  ! SUP             [ shift and go to state 42 ]
  ! INFF            [ shift and go to state 43 ]
  ! ISEQUAL         [ shift and go to state 44 ]
  ! NOTEQUAL        [ shift and go to state 45 ]
  ! ET              [ shift and go to state 46 ]
  ! OU              [ shift and go to state 47 ]
=======
state 46

    (14) expression -> expression PLUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            reduce using rule 14 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 14 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 14 (expression -> expression PLUS expression .)
    or              reduce using rule 14 (expression -> expression PLUS expression .)
    and             reduce using rule 14 (expression -> expression PLUS expression .)
    SUP             reduce using rule 14 (expression -> expression PLUS expression .)
    INFF            reduce using rule 14 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 14 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 14 (expression -> expression PLUS expression .)
    ET              reduce using rule 14 (expression -> expression PLUS expression .)
    OU              reduce using rule 14 (expression -> expression PLUS expression .)
    THEN            reduce using rule 14 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 14 (expression -> expression PLUS expression .)
    NAME            reduce using rule 14 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 14 (expression -> expression PLUS expression .)
    FOR             reduce using rule 14 (expression -> expression PLUS expression .)
    IF              reduce using rule 14 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 14 (expression -> expression PLUS expression .)
    $end            reduce using rule 14 (expression -> expression PLUS expression .)
    TO              reduce using rule 14 (expression -> expression PLUS expression .)
    LACC            reduce using rule 14 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! or              [ shift and go to state 30 ]
  ! and             [ shift and go to state 31 ]
  ! SUP             [ shift and go to state 32 ]
  ! INFF            [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]
>>>>>>> 03aa536 (++ and --)


state 69

<<<<<<< HEAD
    (29) expression -> expression INFF expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 29 (expression -> expression INFF expression .)
    THEN            reduce using rule 29 (expression -> expression INFF expression .)
    SEMI            reduce using rule 29 (expression -> expression INFF expression .)
    NAME            reduce using rule 29 (expression -> expression INFF expression .)
    WHILE           reduce using rule 29 (expression -> expression INFF expression .)
    FOR             reduce using rule 29 (expression -> expression INFF expression .)
    IF              reduce using rule 29 (expression -> expression INFF expression .)
    PRINT           reduce using rule 29 (expression -> expression INFF expression .)
    FUNCTION        reduce using rule 29 (expression -> expression INFF expression .)
    $end            reduce using rule 29 (expression -> expression INFF expression .)
    TO              reduce using rule 29 (expression -> expression INFF expression .)
    LACC            reduce using rule 29 (expression -> expression INFF expression .)
    END             reduce using rule 29 (expression -> expression INFF expression .)
    RPAREN          reduce using rule 29 (expression -> expression INFF expression .)
    COMMA           reduce using rule 29 (expression -> expression INFF expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47

  ! PLUS            [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 29 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 29 (expression -> expression INFF expression .) ]
=======
    (15) expression -> expression MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            reduce using rule 15 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 15 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 15 (expression -> expression MINUS expression .)
    or              reduce using rule 15 (expression -> expression MINUS expression .)
    and             reduce using rule 15 (expression -> expression MINUS expression .)
    SUP             reduce using rule 15 (expression -> expression MINUS expression .)
    INFF            reduce using rule 15 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 15 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 15 (expression -> expression MINUS expression .)
    ET              reduce using rule 15 (expression -> expression MINUS expression .)
    OU              reduce using rule 15 (expression -> expression MINUS expression .)
    THEN            reduce using rule 15 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 15 (expression -> expression MINUS expression .)
    NAME            reduce using rule 15 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 15 (expression -> expression MINUS expression .)
    FOR             reduce using rule 15 (expression -> expression MINUS expression .)
    IF              reduce using rule 15 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 15 (expression -> expression MINUS expression .)
    $end            reduce using rule 15 (expression -> expression MINUS expression .)
    TO              reduce using rule 15 (expression -> expression MINUS expression .)
    LACC            reduce using rule 15 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! or              [ shift and go to state 30 ]
  ! and             [ shift and go to state 31 ]
  ! SUP             [ shift and go to state 32 ]
  ! INFF            [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]
>>>>>>> 03aa536 (++ and --)


state 70

<<<<<<< HEAD
    (30) expression -> expression ISEQUAL expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 30 (expression -> expression ISEQUAL expression .)
    THEN            reduce using rule 30 (expression -> expression ISEQUAL expression .)
    SEMI            reduce using rule 30 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 30 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 30 (expression -> expression ISEQUAL expression .)
    FOR             reduce using rule 30 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 30 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 30 (expression -> expression ISEQUAL expression .)
    FUNCTION        reduce using rule 30 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 30 (expression -> expression ISEQUAL expression .)
    TO              reduce using rule 30 (expression -> expression ISEQUAL expression .)
    LACC            reduce using rule 30 (expression -> expression ISEQUAL expression .)
    END             reduce using rule 30 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 30 (expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 30 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47

  ! PLUS            [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! or              [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! and             [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! SUP             [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! INFF            [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! ET              [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
  ! OU              [ reduce using rule 30 (expression -> expression ISEQUAL expression .) ]
=======
    (16) expression -> expression TIMES expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            reduce using rule 16 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 16 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 16 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 16 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 16 (expression -> expression TIMES expression .)
    or              reduce using rule 16 (expression -> expression TIMES expression .)
    and             reduce using rule 16 (expression -> expression TIMES expression .)
    SUP             reduce using rule 16 (expression -> expression TIMES expression .)
    INFF            reduce using rule 16 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 16 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 16 (expression -> expression TIMES expression .)
    ET              reduce using rule 16 (expression -> expression TIMES expression .)
    OU              reduce using rule 16 (expression -> expression TIMES expression .)
    THEN            reduce using rule 16 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 16 (expression -> expression TIMES expression .)
    NAME            reduce using rule 16 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 16 (expression -> expression TIMES expression .)
    FOR             reduce using rule 16 (expression -> expression TIMES expression .)
    IF              reduce using rule 16 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 16 (expression -> expression TIMES expression .)
    $end            reduce using rule 16 (expression -> expression TIMES expression .)
    TO              reduce using rule 16 (expression -> expression TIMES expression .)
    LACC            reduce using rule 16 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 16 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! or              [ shift and go to state 30 ]
  ! and             [ shift and go to state 31 ]
  ! SUP             [ shift and go to state 32 ]
  ! INFF            [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]
>>>>>>> 03aa536 (++ and --)


state 71

<<<<<<< HEAD
    (31) expression -> expression NOTEQUAL expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    THEN            reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    SEMI            reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    FUNCTION        reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    TO              reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    LACC            reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    END             reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 31 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47

  ! PLUS            [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! or              [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! and             [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! SUP             [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! INFF            [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! ET              [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
  ! OU              [ reduce using rule 31 (expression -> expression NOTEQUAL expression .) ]
=======
    (17) expression -> expression DIVIDE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            reduce using rule 17 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 17 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 17 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 17 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 17 (expression -> expression DIVIDE expression .)
    or              reduce using rule 17 (expression -> expression DIVIDE expression .)
    and             reduce using rule 17 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 17 (expression -> expression DIVIDE expression .)
    INFF            reduce using rule 17 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 17 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 17 (expression -> expression DIVIDE expression .)
    ET              reduce using rule 17 (expression -> expression DIVIDE expression .)
    OU              reduce using rule 17 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 17 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 17 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 17 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 17 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 17 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 17 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 17 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 17 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 17 (expression -> expression DIVIDE expression .)
    LACC            reduce using rule 17 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! or              [ shift and go to state 30 ]
  ! and             [ shift and go to state 31 ]
  ! SUP             [ shift and go to state 32 ]
  ! INFF            [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]
>>>>>>> 03aa536 (++ and --)


state 72

<<<<<<< HEAD
    (32) expression -> expression ET expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 32 (expression -> expression ET expression .)
    THEN            reduce using rule 32 (expression -> expression ET expression .)
    SEMI            reduce using rule 32 (expression -> expression ET expression .)
    NAME            reduce using rule 32 (expression -> expression ET expression .)
    WHILE           reduce using rule 32 (expression -> expression ET expression .)
    FOR             reduce using rule 32 (expression -> expression ET expression .)
    IF              reduce using rule 32 (expression -> expression ET expression .)
    PRINT           reduce using rule 32 (expression -> expression ET expression .)
    FUNCTION        reduce using rule 32 (expression -> expression ET expression .)
    $end            reduce using rule 32 (expression -> expression ET expression .)
    TO              reduce using rule 32 (expression -> expression ET expression .)
    LACC            reduce using rule 32 (expression -> expression ET expression .)
    END             reduce using rule 32 (expression -> expression ET expression .)
    RPAREN          reduce using rule 32 (expression -> expression ET expression .)
    COMMA           reduce using rule 32 (expression -> expression ET expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47

  ! PLUS            [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! or              [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! and             [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! SUP             [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! INFF            [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! ISEQUAL         [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! NOTEQUAL        [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! ET              [ reduce using rule 32 (expression -> expression ET expression .) ]
  ! OU              [ reduce using rule 32 (expression -> expression ET expression .) ]
=======
    (18) expression -> expression or expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            reduce using rule 18 (expression -> expression or expression .)
    or              reduce using rule 18 (expression -> expression or expression .)
    INFF            reduce using rule 18 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 18 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 18 (expression -> expression or expression .)
    ET              reduce using rule 18 (expression -> expression or expression .)
    OU              reduce using rule 18 (expression -> expression or expression .)
    THEN            reduce using rule 18 (expression -> expression or expression .)
    SEMI            reduce using rule 18 (expression -> expression or expression .)
    NAME            reduce using rule 18 (expression -> expression or expression .)
    WHILE           reduce using rule 18 (expression -> expression or expression .)
    FOR             reduce using rule 18 (expression -> expression or expression .)
    IF              reduce using rule 18 (expression -> expression or expression .)
    PRINT           reduce using rule 18 (expression -> expression or expression .)
    $end            reduce using rule 18 (expression -> expression or expression .)
    TO              reduce using rule 18 (expression -> expression or expression .)
    LACC            reduce using rule 18 (expression -> expression or expression .)
    RPAREN          reduce using rule 18 (expression -> expression or expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    and             shift and go to state 31
    SUP             shift and go to state 32

  ! PLUS            [ reduce using rule 18 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 18 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 18 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 30 ]
  ! INFF            [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]
>>>>>>> 03aa536 (++ and --)


state 73

<<<<<<< HEAD
    (33) expression -> expression OU expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression
=======
    (19) expression -> expression and expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            reduce using rule 19 (expression -> expression and expression .)
    or              reduce using rule 19 (expression -> expression and expression .)
    and             reduce using rule 19 (expression -> expression and expression .)
    INFF            reduce using rule 19 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 19 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 19 (expression -> expression and expression .)
    ET              reduce using rule 19 (expression -> expression and expression .)
    OU              reduce using rule 19 (expression -> expression and expression .)
    THEN            reduce using rule 19 (expression -> expression and expression .)
    SEMI            reduce using rule 19 (expression -> expression and expression .)
    NAME            reduce using rule 19 (expression -> expression and expression .)
    WHILE           reduce using rule 19 (expression -> expression and expression .)
    FOR             reduce using rule 19 (expression -> expression and expression .)
    IF              reduce using rule 19 (expression -> expression and expression .)
    PRINT           reduce using rule 19 (expression -> expression and expression .)
    $end            reduce using rule 19 (expression -> expression and expression .)
    TO              reduce using rule 19 (expression -> expression and expression .)
    LACC            reduce using rule 19 (expression -> expression and expression .)
    RPAREN          reduce using rule 19 (expression -> expression and expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    SUP             shift and go to state 32

  ! PLUS            [ reduce using rule 19 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 19 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 30 ]
  ! and             [ shift and go to state 31 ]
  ! INFF            [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 52

    (20) expression -> expression SUP expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    RACC            reduce using rule 20 (expression -> expression SUP expression .)
    or              reduce using rule 20 (expression -> expression SUP expression .)
    and             reduce using rule 20 (expression -> expression SUP expression .)
    SUP             reduce using rule 20 (expression -> expression SUP expression .)
    INFF            reduce using rule 20 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 20 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 20 (expression -> expression SUP expression .)
    ET              reduce using rule 20 (expression -> expression SUP expression .)
    OU              reduce using rule 20 (expression -> expression SUP expression .)
    THEN            reduce using rule 20 (expression -> expression SUP expression .)
    SEMI            reduce using rule 20 (expression -> expression SUP expression .)
    NAME            reduce using rule 20 (expression -> expression SUP expression .)
    WHILE           reduce using rule 20 (expression -> expression SUP expression .)
    FOR             reduce using rule 20 (expression -> expression SUP expression .)
    IF              reduce using rule 20 (expression -> expression SUP expression .)
    PRINT           reduce using rule 20 (expression -> expression SUP expression .)
    $end            reduce using rule 20 (expression -> expression SUP expression .)
    TO              reduce using rule 20 (expression -> expression SUP expression .)
    LACC            reduce using rule 20 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 20 (expression -> expression SUP expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! PLUS            [ reduce using rule 20 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 30 ]
  ! and             [ shift and go to state 31 ]
  ! SUP             [ shift and go to state 32 ]
  ! INFF            [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 53

    (21) expression -> expression INFF expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression
>>>>>>> 03aa536 (++ and --)

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
<<<<<<< HEAD
    RACC            reduce using rule 33 (expression -> expression OU expression .)
    THEN            reduce using rule 33 (expression -> expression OU expression .)
    SEMI            reduce using rule 33 (expression -> expression OU expression .)
    NAME            reduce using rule 33 (expression -> expression OU expression .)
    WHILE           reduce using rule 33 (expression -> expression OU expression .)
    FOR             reduce using rule 33 (expression -> expression OU expression .)
    IF              reduce using rule 33 (expression -> expression OU expression .)
    PRINT           reduce using rule 33 (expression -> expression OU expression .)
    FUNCTION        reduce using rule 33 (expression -> expression OU expression .)
    $end            reduce using rule 33 (expression -> expression OU expression .)
    TO              reduce using rule 33 (expression -> expression OU expression .)
    LACC            reduce using rule 33 (expression -> expression OU expression .)
    END             reduce using rule 33 (expression -> expression OU expression .)
    RPAREN          reduce using rule 33 (expression -> expression OU expression .)
    COMMA           reduce using rule 33 (expression -> expression OU expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47

  ! PLUS            [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! or              [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! and             [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! SUP             [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! INFF            [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! ISEQUAL         [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! NOTEQUAL        [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! ET              [ reduce using rule 33 (expression -> expression OU expression .) ]
  ! OU              [ reduce using rule 33 (expression -> expression OU expression .) ]


state 74

    (43) expression -> LPAREN expression RPAREN .

    RACC            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    INFF            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    ET              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    OU              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    LACC            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 43 (expression -> LPAREN expression RPAREN .)


state 75

    (7) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN RACC bloc LACC

    NUMBER          shift and go to state 85
=======
    RACC            reduce using rule 21 (expression -> expression INFF expression .)
    THEN            reduce using rule 21 (expression -> expression INFF expression .)
    SEMI            reduce using rule 21 (expression -> expression INFF expression .)
    NAME            reduce using rule 21 (expression -> expression INFF expression .)
    WHILE           reduce using rule 21 (expression -> expression INFF expression .)
    FOR             reduce using rule 21 (expression -> expression INFF expression .)
    IF              reduce using rule 21 (expression -> expression INFF expression .)
    PRINT           reduce using rule 21 (expression -> expression INFF expression .)
    $end            reduce using rule 21 (expression -> expression INFF expression .)
    TO              reduce using rule 21 (expression -> expression INFF expression .)
    LACC            reduce using rule 21 (expression -> expression INFF expression .)
    RPAREN          reduce using rule 21 (expression -> expression INFF expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! PLUS            [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 21 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 21 (expression -> expression INFF expression .) ]
>>>>>>> 03aa536 (++ and --)


state 76

    (22) expression -> expression ISEQUAL expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 22 (expression -> expression ISEQUAL expression .)
    THEN            reduce using rule 22 (expression -> expression ISEQUAL expression .)
    SEMI            reduce using rule 22 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 22 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 22 (expression -> expression ISEQUAL expression .)
    FOR             reduce using rule 22 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 22 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 22 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 22 (expression -> expression ISEQUAL expression .)
    TO              reduce using rule 22 (expression -> expression ISEQUAL expression .)
    LACC            reduce using rule 22 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 22 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! PLUS            [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! or              [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! and             [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! SUP             [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! INFF            [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! ET              [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]
  ! OU              [ reduce using rule 22 (expression -> expression ISEQUAL expression .) ]


state 55

    (23) expression -> expression NOTEQUAL expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    THEN            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    SEMI            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    TO              reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    LACC            reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 23 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! PLUS            [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! or              [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! and             [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! SUP             [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! INFF            [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! ET              [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]
  ! OU              [ reduce using rule 23 (expression -> expression NOTEQUAL expression .) ]


state 56

    (24) expression -> expression ET expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 24 (expression -> expression ET expression .)
    THEN            reduce using rule 24 (expression -> expression ET expression .)
    SEMI            reduce using rule 24 (expression -> expression ET expression .)
    NAME            reduce using rule 24 (expression -> expression ET expression .)
    WHILE           reduce using rule 24 (expression -> expression ET expression .)
    FOR             reduce using rule 24 (expression -> expression ET expression .)
    IF              reduce using rule 24 (expression -> expression ET expression .)
    PRINT           reduce using rule 24 (expression -> expression ET expression .)
    $end            reduce using rule 24 (expression -> expression ET expression .)
    TO              reduce using rule 24 (expression -> expression ET expression .)
    LACC            reduce using rule 24 (expression -> expression ET expression .)
    RPAREN          reduce using rule 24 (expression -> expression ET expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! PLUS            [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! or              [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! and             [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! SUP             [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! INFF            [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! ISEQUAL         [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! NOTEQUAL        [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! ET              [ reduce using rule 24 (expression -> expression ET expression .) ]
  ! OU              [ reduce using rule 24 (expression -> expression ET expression .) ]


state 57

    (25) expression -> expression OU expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 25 (expression -> expression OU expression .)
    THEN            reduce using rule 25 (expression -> expression OU expression .)
    SEMI            reduce using rule 25 (expression -> expression OU expression .)
    NAME            reduce using rule 25 (expression -> expression OU expression .)
    WHILE           reduce using rule 25 (expression -> expression OU expression .)
    FOR             reduce using rule 25 (expression -> expression OU expression .)
    IF              reduce using rule 25 (expression -> expression OU expression .)
    PRINT           reduce using rule 25 (expression -> expression OU expression .)
    $end            reduce using rule 25 (expression -> expression OU expression .)
    TO              reduce using rule 25 (expression -> expression OU expression .)
    LACC            reduce using rule 25 (expression -> expression OU expression .)
    RPAREN          reduce using rule 25 (expression -> expression OU expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! PLUS            [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! or              [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! and             [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! SUP             [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! INFF            [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! ISEQUAL         [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! NOTEQUAL        [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! ET              [ reduce using rule 25 (expression -> expression OU expression .) ]
  ! OU              [ reduce using rule 25 (expression -> expression OU expression .) ]


state 58

    (29) expression -> LPAREN expression RPAREN .

    RACC            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    INFF            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    ET              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    OU              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LACC            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (expression -> LPAREN expression RPAREN .)


state 59

    (7) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN

    NUMBER          shift and go to state 64


state 60

    (8) statement -> IF expression THEN statement .

    NAME            reduce using rule 8 (statement -> IF expression THEN statement .)
    WHILE           reduce using rule 8 (statement -> IF expression THEN statement .)
    FOR             reduce using rule 8 (statement -> IF expression THEN statement .)
    IF              reduce using rule 8 (statement -> IF expression THEN statement .)
    PRINT           reduce using rule 8 (statement -> IF expression THEN statement .)
    FUNCTION        reduce using rule 8 (statement -> IF expression THEN statement .)
    $end            reduce using rule 8 (statement -> IF expression THEN statement .)
    TO              reduce using rule 8 (statement -> IF expression THEN statement .)
    LACC            reduce using rule 8 (statement -> IF expression THEN statement .)
    END             reduce using rule 8 (statement -> IF expression THEN statement .)
    RPAREN          reduce using rule 8 (statement -> IF expression THEN statement .)


<<<<<<< HEAD
state 77
=======
state 61
>>>>>>> 03aa536 (++ and --)

    (9) statement -> IF expression THEN RACC . bloc LACC
    (10) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI
>>>>>>> 03aa536 (++ and --)

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

<<<<<<< HEAD
    bloc                           shift and go to state 86
    statement                      shift and go to state 3

state 78

    (12) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 87


state 79

    (14) params -> NAME .
    (15) params -> NAME . COMMA params

    RPAREN          reduce using rule 14 (params -> NAME .)
    COMMA           shift and go to state 88


state 80

    (16) statement -> FUNCTION NAME LPAREN RPAREN . START bloc END

    START           shift and go to state 89


state 81

    (17) statement -> FUNCTION NAME LPAREN params . RPAREN START bloc END

    RPAREN          shift and go to state 90


state 82

    (19) statement -> NAME LPAREN param_call RPAREN SEMI .

    NAME            reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    WHILE           reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FOR             reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    IF              reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    PRINT           reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FUNCTION        reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    $end            reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    TO              reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LACC            reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    END             reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RPAREN          reduce using rule 19 (statement -> NAME LPAREN param_call RPAREN SEMI .)


state 83

    (21) param_call -> expression COMMA param_call .

    RPAREN          reduce using rule 21 (param_call -> expression COMMA param_call .)


state 84
=======
    bloc                           shift and go to state 65
    statement                      shift and go to state 3

state 62

    (12) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 66


state 63
>>>>>>> 03aa536 (++ and --)

    (6) statement -> WHILE expression RACC bloc LACC .

    NAME            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    WHILE           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FOR             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    IF              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    PRINT           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FUNCTION        reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    $end            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    TO              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    LACC            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    END             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    RPAREN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)


<<<<<<< HEAD
state 85
=======
state 64
>>>>>>> 03aa536 (++ and --)

    (7) statement -> FOR LPAREN statement TO NUMBER . COMMA statement RPAREN

<<<<<<< HEAD
    COMMA           shift and go to state 91


state 86
=======
    COMMA           shift and go to state 67


state 65
>>>>>>> 03aa536 (++ and --)

    (9) statement -> IF expression THEN RACC bloc . LACC
    (10) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 92
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI

    LACC            shift and go to state 68
>>>>>>> 03aa536 (++ and --)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

<<<<<<< HEAD
state 87
=======
state 66
>>>>>>> 03aa536 (++ and --)

    (12) statement -> PRINT LPAREN expression RPAREN SEMI .

    NAME            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FUNCTION        reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TO              reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LACC            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    END             reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)


<<<<<<< HEAD
state 88

    (15) params -> NAME COMMA . params
    (14) params -> . NAME
    (15) params -> . NAME COMMA params

    NAME            shift and go to state 79

    params                         shift and go to state 93

state 89

    (16) statement -> FUNCTION NAME LPAREN RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 94
    statement                      shift and go to state 3

state 90

    (17) statement -> FUNCTION NAME LPAREN params RPAREN . START bloc END

    START           shift and go to state 95


state 91
=======
state 67
>>>>>>> 03aa536 (++ and --)

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA . statement RPAREN
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI
>>>>>>> 03aa536 (++ and --)

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

<<<<<<< HEAD
    statement                      shift and go to state 96

state 92
=======
    statement                      shift and go to state 69

state 68
>>>>>>> 03aa536 (++ and --)

    (9) statement -> IF expression THEN RACC bloc LACC .
    (10) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    NAME            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    WHILE           reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    FOR             reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    IF              reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    PRINT           reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    FUNCTION        reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    $end            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    TO              reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    LACC            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    END             reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    RPAREN          reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
<<<<<<< HEAD
    ELSEIF          shift and go to state 97
    ELSE            shift and go to state 98


state 93

    (15) params -> NAME COMMA params .

    RPAREN          reduce using rule 15 (params -> NAME COMMA params .)


state 94

    (16) statement -> FUNCTION NAME LPAREN RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    END             shift and go to state 99
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 95

    (17) statement -> FUNCTION NAME LPAREN params RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 100
    statement                      shift and go to state 3

state 96
=======
    ELSEIF          shift and go to state 70
    ELSE            shift and go to state 71


state 69
>>>>>>> 03aa536 (++ and --)

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement . RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 101


state 97

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression TIMES expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression or expression
    (27) expression -> . expression and expression
    (28) expression -> . expression SUP expression
    (29) expression -> . expression INFF expression
    (30) expression -> . expression ISEQUAL expression
    (31) expression -> . expression NOTEQUAL expression
    (32) expression -> . expression ET expression
    (33) expression -> . expression OU expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 102

state 98

    (11) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 103


state 99

    (16) statement -> FUNCTION NAME LPAREN RPAREN START bloc END .

    NAME            reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    WHILE           reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FOR             reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    IF              reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    PRINT           reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FUNCTION        reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    $end            reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TO              reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LACC            reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    END             reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RPAREN          reduce using rule 16 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)


state 100

    (17) statement -> FUNCTION NAME LPAREN params RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    END             shift and go to state 104
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 101
=======
    RPAREN          shift and go to state 72


state 70

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression or expression
    (19) expression -> . expression and expression
    (20) expression -> . expression SUP expression
    (21) expression -> . expression INFF expression
    (22) expression -> . expression ISEQUAL expression
    (23) expression -> . expression NOTEQUAL expression
    (24) expression -> . expression ET expression
    (25) expression -> . expression OU expression
    (28) expression -> . MINUS expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . NAME

    MINUS           shift and go to state 14
    LPAREN          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17

    expression                     shift and go to state 73

state 71

    (11) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 74


state 72
>>>>>>> 03aa536 (++ and --)

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .

<<<<<<< HEAD
    RACC            shift and go to state 105


state 102

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . TIMES expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . or expression
    (27) expression -> expression . and expression
    (28) expression -> expression . SUP expression
    (29) expression -> expression . INFF expression
    (30) expression -> expression . ISEQUAL expression
    (31) expression -> expression . NOTEQUAL expression
    (32) expression -> expression . ET expression
    (33) expression -> expression . OU expression

    THEN            shift and go to state 106
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 40
    and             shift and go to state 41
    SUP             shift and go to state 42
    INFF            shift and go to state 43
    ISEQUAL         shift and go to state 44
    NOTEQUAL        shift and go to state 45
    ET              shift and go to state 46
    OU              shift and go to state 47


state 103
=======
    NAME            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
    WHILE           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
    FOR             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
    IF              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
    PRINT           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
    $end            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
    TO              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
    LACC            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)
    RPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN .)


state 73

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . or expression
    (19) expression -> expression . and expression
    (20) expression -> expression . SUP expression
    (21) expression -> expression . INFF expression
    (22) expression -> expression . ISEQUAL expression
    (23) expression -> expression . NOTEQUAL expression
    (24) expression -> expression . ET expression
    (25) expression -> expression . OU expression

    THEN            shift and go to state 75
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    or              shift and go to state 30
    and             shift and go to state 31
    SUP             shift and go to state 32
    INFF            shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 74
>>>>>>> 03aa536 (++ and --)

    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
<<<<<<< HEAD
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 107
    statement                      shift and go to state 3

state 104

    (17) statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .

    NAME            reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    WHILE           reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FOR             reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    IF              reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    PRINT           reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FUNCTION        reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    $end            reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    TO              reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LACC            reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    END             reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RPAREN          reduce using rule 17 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)


state 105

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 3
    bloc                           shift and go to state 108

state 106

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC

    RACC            shift and go to state 109


state 107

    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 110
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 108

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 111
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 109

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
=======
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
>>>>>>> 03aa536 (++ and --)
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI
>>>>>>> 03aa536 (++ and --)

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 112
    statement                      shift and go to state 3

<<<<<<< HEAD
state 110
=======
state 75

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC

    RACC            shift and go to state 77


state 76

    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI

    LACC            shift and go to state 78
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8

    statement                      shift and go to state 9

state 77

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8

    bloc                           shift and go to state 79
    statement                      shift and go to state 3

state 78
>>>>>>> 03aa536 (++ and --)

    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)


<<<<<<< HEAD
state 111

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .

    NAME            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    WHILE           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FOR             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    IF              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    PRINT           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FUNCTION        reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    $end            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    TO              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LACC            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    END             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)


state 112
=======
state 79
>>>>>>> 03aa536 (++ and --)

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 113
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI

    LACC            shift and go to state 80
>>>>>>> 03aa536 (++ and --)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

<<<<<<< HEAD
state 113

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 114


state 114

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 115


state 115
=======
state 80

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 81


state 81

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 82


state 82
>>>>>>> 03aa536 (++ and --)

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI
>>>>>>> 03aa536 (++ and --)

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

<<<<<<< HEAD
    bloc                           shift and go to state 116
    statement                      shift and go to state 3

state 116
=======
    bloc                           shift and go to state 83
    statement                      shift and go to state 3

state 83
>>>>>>> 03aa536 (++ and --)

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
<<<<<<< HEAD
    (16) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (17) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (18) statement -> . NAME LPAREN RPAREN SEMI
    (19) statement -> . NAME LPAREN param_call RPAREN SEMI
    (34) statement -> . NAME INCR SEMI
    (35) statement -> . NAME DECR SEMI
    (36) statement -> . NAME INCR
    (37) statement -> . NAME DECR
    (38) statement -> . NAME PLUSEQ NUMBER SEMI
    (39) statement -> . NAME MINEQ NUMBER SEMI
    (40) statement -> . NAME PLUSEQ NUMBER
    (41) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 117
=======
    (26) statement -> . NAME INCR SEMI
    (27) statement -> . NAME DECR SEMI

    LACC            shift and go to state 84
>>>>>>> 03aa536 (++ and --)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

<<<<<<< HEAD
state 117
=======
state 84
>>>>>>> 03aa536 (++ and --)

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
<<<<<<< HEAD
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for or in state 69 resolved as shift
WARNING: shift/reduce conflict for and in state 69 resolved as shift
WARNING: shift/reduce conflict for SUP in state 69 resolved as shift
WARNING: shift/reduce conflict for INFF in state 69 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for ET in state 69 resolved as shift
WARNING: shift/reduce conflict for OU in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for or in state 70 resolved as shift
WARNING: shift/reduce conflict for and in state 70 resolved as shift
WARNING: shift/reduce conflict for SUP in state 70 resolved as shift
WARNING: shift/reduce conflict for INFF in state 70 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for ET in state 70 resolved as shift
WARNING: shift/reduce conflict for OU in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for or in state 71 resolved as shift
WARNING: shift/reduce conflict for and in state 71 resolved as shift
WARNING: shift/reduce conflict for SUP in state 71 resolved as shift
WARNING: shift/reduce conflict for INFF in state 71 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for ET in state 71 resolved as shift
WARNING: shift/reduce conflict for OU in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for or in state 72 resolved as shift
WARNING: shift/reduce conflict for and in state 72 resolved as shift
WARNING: shift/reduce conflict for SUP in state 72 resolved as shift
WARNING: shift/reduce conflict for INFF in state 72 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for ET in state 72 resolved as shift
WARNING: shift/reduce conflict for OU in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for or in state 73 resolved as shift
WARNING: shift/reduce conflict for and in state 73 resolved as shift
WARNING: shift/reduce conflict for SUP in state 73 resolved as shift
WARNING: shift/reduce conflict for INFF in state 73 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for ET in state 73 resolved as shift
WARNING: shift/reduce conflict for OU in state 73 resolved as shift
=======
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for or in state 53 resolved as shift
WARNING: shift/reduce conflict for and in state 53 resolved as shift
WARNING: shift/reduce conflict for SUP in state 53 resolved as shift
WARNING: shift/reduce conflict for INFF in state 53 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for ET in state 53 resolved as shift
WARNING: shift/reduce conflict for OU in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for or in state 54 resolved as shift
WARNING: shift/reduce conflict for and in state 54 resolved as shift
WARNING: shift/reduce conflict for SUP in state 54 resolved as shift
WARNING: shift/reduce conflict for INFF in state 54 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for ET in state 54 resolved as shift
WARNING: shift/reduce conflict for OU in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for or in state 55 resolved as shift
WARNING: shift/reduce conflict for and in state 55 resolved as shift
WARNING: shift/reduce conflict for SUP in state 55 resolved as shift
WARNING: shift/reduce conflict for INFF in state 55 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for ET in state 55 resolved as shift
WARNING: shift/reduce conflict for OU in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for or in state 56 resolved as shift
WARNING: shift/reduce conflict for and in state 56 resolved as shift
WARNING: shift/reduce conflict for SUP in state 56 resolved as shift
WARNING: shift/reduce conflict for INFF in state 56 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 56 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 56 resolved as shift
WARNING: shift/reduce conflict for ET in state 56 resolved as shift
WARNING: shift/reduce conflict for OU in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for or in state 57 resolved as shift
WARNING: shift/reduce conflict for and in state 57 resolved as shift
WARNING: shift/reduce conflict for SUP in state 57 resolved as shift
WARNING: shift/reduce conflict for INFF in state 57 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for ET in state 57 resolved as shift
WARNING: shift/reduce conflict for OU in state 57 resolved as shift
>>>>>>> 03aa536 (++ and --)
