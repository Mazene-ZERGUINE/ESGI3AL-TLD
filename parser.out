Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> NAME EQUALS expression SEMI
Rule 5     statement -> NAME EQUALS expression
Rule 6     statement -> WHILE expression RACC bloc LACC
Rule 7     statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
Rule 8     statement -> COMMENTS
Rule 9     statement -> IF expression THEN statement
Rule 10    statement -> IF expression THEN RACC bloc LACC
Rule 11    statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 12    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 13    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 14    statement -> PRINT STRING SEMI
Rule 15    params -> NAME
Rule 16    params -> NAME COMMA params
Rule 17    statement -> FUNCTION NAME LPAREN RPAREN START bloc END
Rule 18    statement -> FUNCTION NAME LPAREN params RPAREN START bloc END
Rule 19    statement -> NAME LPAREN RPAREN SEMI
Rule 20    statement -> NAME LPAREN param_call RPAREN SEMI
Rule 21    param_call -> expression
Rule 22    param_call -> expression COMMA param_call
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression MINUS expression
Rule 25    expression -> expression TIMES expression
Rule 26    expression -> expression DIVIDE expression
Rule 27    expression -> expression or expression
Rule 28    expression -> expression and expression
Rule 29    expression -> expression SUP expression
Rule 30    expression -> expression INFF expression
Rule 31    expression -> expression ISEQUAL expression
Rule 32    expression -> expression NOTEQUAL expression
Rule 33    expression -> expression ET expression
Rule 34    expression -> expression OU expression
Rule 35    statement -> NAME INCR SEMI
Rule 36    statement -> NAME DECR SEMI
Rule 37    statement -> NAME INCR
Rule 38    statement -> NAME DECR
Rule 39    statement -> NAME PLUSEQ NUMBER SEMI
Rule 40    statement -> NAME MINEQ NUMBER SEMI
Rule 41    statement -> NAME PLUSEQ NUMBER
Rule 42    statement -> NAME MINEQ NUMBER
Rule 43    expression -> MINUS expression
Rule 44    expression -> LPAREN expression RPAREN
Rule 45    expression -> NUMBER
Rule 46    expression -> NAME

Terminals, with rules where they appear

COMMA                : 7 16 22
COMMENT              : 
COMMENTS             : 8
DECR                 : 36 38
DIVIDE               : 26
ELSE                 : 11 12
ELSEIF               : 11
END                  : 17 18
EQUALS               : 4 5
ET                   : 33
FOR                  : 7
FUNCTION             : 17 18
IF                   : 9 10 11 12
INCR                 : 35 37
INFF                 : 30
ISEQUAL              : 31
LACC                 : 6 7 10 11 11 11 12 12
LPAREN               : 7 13 17 18 19 20 44
MINEQ                : 40 42
MINUS                : 24 43
NAME                 : 4 5 15 16 17 18 19 20 35 36 37 38 39 40 41 42 46
NOTEQUAL             : 32
NUMBER               : 7 39 40 41 42 45
OU                   : 34
PLUS                 : 23
PLUSEQ               : 39 41
PRINT                : 13 14
RACC                 : 6 7 10 11 11 11 12 12
RPAREN               : 7 13 17 18 19 20 44
SEMI                 : 4 13 14 19 20 35 36 39 40
START                : 17 18
STRING               : 14
SUP                  : 29
THEN                 : 9 10 11 11 12
TIMES                : 25
TO                   : 7
WHILE                : 6
and                  : 28
error                : 
or                   : 27

Nonterminals, with rules where they appear

bloc                 : 1 2 6 7 10 11 11 11 12 12 17 18
expression           : 4 5 6 9 10 11 11 12 13 21 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 43 44
param_call           : 20 22
params               : 16 18
start                : 0
statement            : 2 3 7 7 9

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) bloc -> statement .

    NAME            reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    COMMENTS        reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    LACC            reduce using rule 3 (bloc -> statement .)
    END             reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> NAME . EQUALS expression SEMI
    (5) statement -> NAME . EQUALS expression
    (19) statement -> NAME . LPAREN RPAREN SEMI
    (20) statement -> NAME . LPAREN param_call RPAREN SEMI
    (35) statement -> NAME . INCR SEMI
    (36) statement -> NAME . DECR SEMI
    (37) statement -> NAME . INCR
    (38) statement -> NAME . DECR
    (39) statement -> NAME . PLUSEQ NUMBER SEMI
    (40) statement -> NAME . MINEQ NUMBER SEMI
    (41) statement -> NAME . PLUSEQ NUMBER
    (42) statement -> NAME . MINEQ NUMBER

    EQUALS          shift and go to state 12
    LPAREN          shift and go to state 13
    INCR            shift and go to state 14
    DECR            shift and go to state 15
    PLUSEQ          shift and go to state 16
    MINEQ           shift and go to state 17


state 5

    (6) statement -> WHILE . expression RACC bloc LACC
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 18

state 6

    (7) statement -> FOR . LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC

    LPAREN          shift and go to state 23


state 7

    (8) statement -> COMMENTS .

    NAME            reduce using rule 8 (statement -> COMMENTS .)
    WHILE           reduce using rule 8 (statement -> COMMENTS .)
    FOR             reduce using rule 8 (statement -> COMMENTS .)
    COMMENTS        reduce using rule 8 (statement -> COMMENTS .)
    IF              reduce using rule 8 (statement -> COMMENTS .)
    PRINT           reduce using rule 8 (statement -> COMMENTS .)
    FUNCTION        reduce using rule 8 (statement -> COMMENTS .)
    $end            reduce using rule 8 (statement -> COMMENTS .)
    TO              reduce using rule 8 (statement -> COMMENTS .)
    LACC            reduce using rule 8 (statement -> COMMENTS .)
    END             reduce using rule 8 (statement -> COMMENTS .)
    RPAREN          reduce using rule 8 (statement -> COMMENTS .)


state 8

    (9) statement -> IF . expression THEN statement
    (10) statement -> IF . expression THEN RACC bloc LACC
    (11) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 24

state 9

    (13) statement -> PRINT . LPAREN expression RPAREN SEMI
    (14) statement -> PRINT . STRING SEMI

    LPAREN          shift and go to state 25
    STRING          shift and go to state 26


state 10

    (17) statement -> FUNCTION . NAME LPAREN RPAREN START bloc END
    (18) statement -> FUNCTION . NAME LPAREN params RPAREN START bloc END

    NAME            shift and go to state 27


state 11

    (2) bloc -> bloc statement .

    NAME            reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    COMMENTS        reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    LACC            reduce using rule 2 (bloc -> bloc statement .)
    END             reduce using rule 2 (bloc -> bloc statement .)


state 12

    (4) statement -> NAME EQUALS . expression SEMI
    (5) statement -> NAME EQUALS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 28

state 13

    (19) statement -> NAME LPAREN . RPAREN SEMI
    (20) statement -> NAME LPAREN . param_call RPAREN SEMI
    (21) param_call -> . expression
    (22) param_call -> . expression COMMA param_call
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    RPAREN          shift and go to state 29
    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    param_call                     shift and go to state 30
    expression                     shift and go to state 31

state 14

    (35) statement -> NAME INCR . SEMI
    (37) statement -> NAME INCR .

    SEMI            shift and go to state 32
    NAME            reduce using rule 37 (statement -> NAME INCR .)
    WHILE           reduce using rule 37 (statement -> NAME INCR .)
    FOR             reduce using rule 37 (statement -> NAME INCR .)
    COMMENTS        reduce using rule 37 (statement -> NAME INCR .)
    IF              reduce using rule 37 (statement -> NAME INCR .)
    PRINT           reduce using rule 37 (statement -> NAME INCR .)
    FUNCTION        reduce using rule 37 (statement -> NAME INCR .)
    $end            reduce using rule 37 (statement -> NAME INCR .)
    TO              reduce using rule 37 (statement -> NAME INCR .)
    LACC            reduce using rule 37 (statement -> NAME INCR .)
    END             reduce using rule 37 (statement -> NAME INCR .)
    RPAREN          reduce using rule 37 (statement -> NAME INCR .)


state 15

    (36) statement -> NAME DECR . SEMI
    (38) statement -> NAME DECR .

    SEMI            shift and go to state 33
    NAME            reduce using rule 38 (statement -> NAME DECR .)
    WHILE           reduce using rule 38 (statement -> NAME DECR .)
    FOR             reduce using rule 38 (statement -> NAME DECR .)
    COMMENTS        reduce using rule 38 (statement -> NAME DECR .)
    IF              reduce using rule 38 (statement -> NAME DECR .)
    PRINT           reduce using rule 38 (statement -> NAME DECR .)
    FUNCTION        reduce using rule 38 (statement -> NAME DECR .)
    $end            reduce using rule 38 (statement -> NAME DECR .)
    TO              reduce using rule 38 (statement -> NAME DECR .)
    LACC            reduce using rule 38 (statement -> NAME DECR .)
    END             reduce using rule 38 (statement -> NAME DECR .)
    RPAREN          reduce using rule 38 (statement -> NAME DECR .)


state 16

    (39) statement -> NAME PLUSEQ . NUMBER SEMI
    (41) statement -> NAME PLUSEQ . NUMBER

    NUMBER          shift and go to state 34


state 17

    (40) statement -> NAME MINEQ . NUMBER SEMI
    (42) statement -> NAME MINEQ . NUMBER

    NUMBER          shift and go to state 35


state 18

    (6) statement -> WHILE expression . RACC bloc LACC
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48


state 19

    (43) expression -> MINUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 49

state 20

    (44) expression -> LPAREN . expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 50

state 21

    (45) expression -> NUMBER .

    RACC            reduce using rule 45 (expression -> NUMBER .)
    PLUS            reduce using rule 45 (expression -> NUMBER .)
    MINUS           reduce using rule 45 (expression -> NUMBER .)
    TIMES           reduce using rule 45 (expression -> NUMBER .)
    DIVIDE          reduce using rule 45 (expression -> NUMBER .)
    or              reduce using rule 45 (expression -> NUMBER .)
    and             reduce using rule 45 (expression -> NUMBER .)
    SUP             reduce using rule 45 (expression -> NUMBER .)
    INFF            reduce using rule 45 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 45 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 45 (expression -> NUMBER .)
    ET              reduce using rule 45 (expression -> NUMBER .)
    OU              reduce using rule 45 (expression -> NUMBER .)
    THEN            reduce using rule 45 (expression -> NUMBER .)
    SEMI            reduce using rule 45 (expression -> NUMBER .)
    NAME            reduce using rule 45 (expression -> NUMBER .)
    WHILE           reduce using rule 45 (expression -> NUMBER .)
    FOR             reduce using rule 45 (expression -> NUMBER .)
    COMMENTS        reduce using rule 45 (expression -> NUMBER .)
    IF              reduce using rule 45 (expression -> NUMBER .)
    PRINT           reduce using rule 45 (expression -> NUMBER .)
    FUNCTION        reduce using rule 45 (expression -> NUMBER .)
    $end            reduce using rule 45 (expression -> NUMBER .)
    TO              reduce using rule 45 (expression -> NUMBER .)
    LACC            reduce using rule 45 (expression -> NUMBER .)
    END             reduce using rule 45 (expression -> NUMBER .)
    RPAREN          reduce using rule 45 (expression -> NUMBER .)
    COMMA           reduce using rule 45 (expression -> NUMBER .)


state 22

    (46) expression -> NAME .

    RACC            reduce using rule 46 (expression -> NAME .)
    PLUS            reduce using rule 46 (expression -> NAME .)
    MINUS           reduce using rule 46 (expression -> NAME .)
    TIMES           reduce using rule 46 (expression -> NAME .)
    DIVIDE          reduce using rule 46 (expression -> NAME .)
    or              reduce using rule 46 (expression -> NAME .)
    and             reduce using rule 46 (expression -> NAME .)
    SUP             reduce using rule 46 (expression -> NAME .)
    INFF            reduce using rule 46 (expression -> NAME .)
    ISEQUAL         reduce using rule 46 (expression -> NAME .)
    NOTEQUAL        reduce using rule 46 (expression -> NAME .)
    ET              reduce using rule 46 (expression -> NAME .)
    OU              reduce using rule 46 (expression -> NAME .)
    THEN            reduce using rule 46 (expression -> NAME .)
    SEMI            reduce using rule 46 (expression -> NAME .)
    NAME            reduce using rule 46 (expression -> NAME .)
    WHILE           reduce using rule 46 (expression -> NAME .)
    FOR             reduce using rule 46 (expression -> NAME .)
    COMMENTS        reduce using rule 46 (expression -> NAME .)
    IF              reduce using rule 46 (expression -> NAME .)
    PRINT           reduce using rule 46 (expression -> NAME .)
    FUNCTION        reduce using rule 46 (expression -> NAME .)
    $end            reduce using rule 46 (expression -> NAME .)
    TO              reduce using rule 46 (expression -> NAME .)
    LACC            reduce using rule 46 (expression -> NAME .)
    END             reduce using rule 46 (expression -> NAME .)
    RPAREN          reduce using rule 46 (expression -> NAME .)
    COMMA           reduce using rule 46 (expression -> NAME .)


state 23

    (7) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 51

state 24

    (9) statement -> IF expression . THEN statement
    (10) statement -> IF expression . THEN RACC bloc LACC
    (11) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    THEN            shift and go to state 52
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48


state 25

    (13) statement -> PRINT LPAREN . expression RPAREN SEMI
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 53

state 26

    (14) statement -> PRINT STRING . SEMI

    SEMI            shift and go to state 54


state 27

    (17) statement -> FUNCTION NAME . LPAREN RPAREN START bloc END
    (18) statement -> FUNCTION NAME . LPAREN params RPAREN START bloc END

    LPAREN          shift and go to state 55


state 28

    (4) statement -> NAME EQUALS expression . SEMI
    (5) statement -> NAME EQUALS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    SEMI            shift and go to state 56
    NAME            reduce using rule 5 (statement -> NAME EQUALS expression .)
    WHILE           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FOR             reduce using rule 5 (statement -> NAME EQUALS expression .)
    COMMENTS        reduce using rule 5 (statement -> NAME EQUALS expression .)
    IF              reduce using rule 5 (statement -> NAME EQUALS expression .)
    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FUNCTION        reduce using rule 5 (statement -> NAME EQUALS expression .)
    $end            reduce using rule 5 (statement -> NAME EQUALS expression .)
    TO              reduce using rule 5 (statement -> NAME EQUALS expression .)
    LACC            reduce using rule 5 (statement -> NAME EQUALS expression .)
    END             reduce using rule 5 (statement -> NAME EQUALS expression .)
    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48


state 29

    (19) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 57


state 30

    (20) statement -> NAME LPAREN param_call . RPAREN SEMI

    RPAREN          shift and go to state 58


state 31

    (21) param_call -> expression .
    (22) param_call -> expression . COMMA param_call
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RPAREN          reduce using rule 21 (param_call -> expression .)
    COMMA           shift and go to state 59
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48


state 32

    (35) statement -> NAME INCR SEMI .

    NAME            reduce using rule 35 (statement -> NAME INCR SEMI .)
    WHILE           reduce using rule 35 (statement -> NAME INCR SEMI .)
    FOR             reduce using rule 35 (statement -> NAME INCR SEMI .)
    COMMENTS        reduce using rule 35 (statement -> NAME INCR SEMI .)
    IF              reduce using rule 35 (statement -> NAME INCR SEMI .)
    PRINT           reduce using rule 35 (statement -> NAME INCR SEMI .)
    FUNCTION        reduce using rule 35 (statement -> NAME INCR SEMI .)
    $end            reduce using rule 35 (statement -> NAME INCR SEMI .)
    TO              reduce using rule 35 (statement -> NAME INCR SEMI .)
    LACC            reduce using rule 35 (statement -> NAME INCR SEMI .)
    END             reduce using rule 35 (statement -> NAME INCR SEMI .)
    RPAREN          reduce using rule 35 (statement -> NAME INCR SEMI .)


state 33

    (36) statement -> NAME DECR SEMI .

    NAME            reduce using rule 36 (statement -> NAME DECR SEMI .)
    WHILE           reduce using rule 36 (statement -> NAME DECR SEMI .)
    FOR             reduce using rule 36 (statement -> NAME DECR SEMI .)
    COMMENTS        reduce using rule 36 (statement -> NAME DECR SEMI .)
    IF              reduce using rule 36 (statement -> NAME DECR SEMI .)
    PRINT           reduce using rule 36 (statement -> NAME DECR SEMI .)
    FUNCTION        reduce using rule 36 (statement -> NAME DECR SEMI .)
    $end            reduce using rule 36 (statement -> NAME DECR SEMI .)
    TO              reduce using rule 36 (statement -> NAME DECR SEMI .)
    LACC            reduce using rule 36 (statement -> NAME DECR SEMI .)
    END             reduce using rule 36 (statement -> NAME DECR SEMI .)
    RPAREN          reduce using rule 36 (statement -> NAME DECR SEMI .)


state 34

    (39) statement -> NAME PLUSEQ NUMBER . SEMI
    (41) statement -> NAME PLUSEQ NUMBER .

    SEMI            shift and go to state 60
    NAME            reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    WHILE           reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    FOR             reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    COMMENTS        reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    IF              reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    PRINT           reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    FUNCTION        reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    $end            reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    TO              reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    LACC            reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    END             reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)
    RPAREN          reduce using rule 41 (statement -> NAME PLUSEQ NUMBER .)


state 35

    (40) statement -> NAME MINEQ NUMBER . SEMI
    (42) statement -> NAME MINEQ NUMBER .

    SEMI            shift and go to state 61
    NAME            reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    WHILE           reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    FOR             reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    COMMENTS        reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    IF              reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    PRINT           reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    FUNCTION        reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    $end            reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    TO              reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    LACC            reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    END             reduce using rule 42 (statement -> NAME MINEQ NUMBER .)
    RPAREN          reduce using rule 42 (statement -> NAME MINEQ NUMBER .)


state 36

    (6) statement -> WHILE expression RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 62
    statement                      shift and go to state 3

state 37

    (23) expression -> expression PLUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 63

state 38

    (24) expression -> expression MINUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 64

state 39

    (25) expression -> expression TIMES . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 65

state 40

    (26) expression -> expression DIVIDE . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 66

state 41

    (27) expression -> expression or . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 67

state 42

    (28) expression -> expression and . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 68

state 43

    (29) expression -> expression SUP . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 69

state 44

    (30) expression -> expression INFF . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 70

state 45

    (31) expression -> expression ISEQUAL . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 71

state 46

    (32) expression -> expression NOTEQUAL . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 72

state 47

    (33) expression -> expression ET . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 73

state 48

    (34) expression -> expression OU . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 74

state 49

    (43) expression -> MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            reduce using rule 43 (expression -> MINUS expression .)
    PLUS            reduce using rule 43 (expression -> MINUS expression .)
    MINUS           reduce using rule 43 (expression -> MINUS expression .)
    or              reduce using rule 43 (expression -> MINUS expression .)
    and             reduce using rule 43 (expression -> MINUS expression .)
    SUP             reduce using rule 43 (expression -> MINUS expression .)
    INFF            reduce using rule 43 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 43 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 43 (expression -> MINUS expression .)
    ET              reduce using rule 43 (expression -> MINUS expression .)
    OU              reduce using rule 43 (expression -> MINUS expression .)
    THEN            reduce using rule 43 (expression -> MINUS expression .)
    SEMI            reduce using rule 43 (expression -> MINUS expression .)
    NAME            reduce using rule 43 (expression -> MINUS expression .)
    WHILE           reduce using rule 43 (expression -> MINUS expression .)
    FOR             reduce using rule 43 (expression -> MINUS expression .)
    COMMENTS        reduce using rule 43 (expression -> MINUS expression .)
    IF              reduce using rule 43 (expression -> MINUS expression .)
    PRINT           reduce using rule 43 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 43 (expression -> MINUS expression .)
    $end            reduce using rule 43 (expression -> MINUS expression .)
    TO              reduce using rule 43 (expression -> MINUS expression .)
    LACC            reduce using rule 43 (expression -> MINUS expression .)
    END             reduce using rule 43 (expression -> MINUS expression .)
    RPAREN          reduce using rule 43 (expression -> MINUS expression .)
    COMMA           reduce using rule 43 (expression -> MINUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 43 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! or              [ shift and go to state 41 ]
  ! and             [ shift and go to state 42 ]
  ! SUP             [ shift and go to state 43 ]
  ! INFF            [ shift and go to state 44 ]
  ! ISEQUAL         [ shift and go to state 45 ]
  ! NOTEQUAL        [ shift and go to state 46 ]
  ! ET              [ shift and go to state 47 ]
  ! OU              [ shift and go to state 48 ]


state 50

    (44) expression -> LPAREN expression . RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RPAREN          shift and go to state 75
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48


state 51

    (7) statement -> FOR LPAREN statement . TO NUMBER COMMA statement RPAREN RACC bloc LACC

    TO              shift and go to state 76


state 52

    (9) statement -> IF expression THEN . statement
    (10) statement -> IF expression THEN . RACC bloc LACC
    (11) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    RACC            shift and go to state 78
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 77

state 53

    (13) statement -> PRINT LPAREN expression . RPAREN SEMI
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RPAREN          shift and go to state 79
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48


state 54

    (14) statement -> PRINT STRING SEMI .

    NAME            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    WHILE           reduce using rule 14 (statement -> PRINT STRING SEMI .)
    FOR             reduce using rule 14 (statement -> PRINT STRING SEMI .)
    COMMENTS        reduce using rule 14 (statement -> PRINT STRING SEMI .)
    IF              reduce using rule 14 (statement -> PRINT STRING SEMI .)
    PRINT           reduce using rule 14 (statement -> PRINT STRING SEMI .)
    FUNCTION        reduce using rule 14 (statement -> PRINT STRING SEMI .)
    $end            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    TO              reduce using rule 14 (statement -> PRINT STRING SEMI .)
    LACC            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    END             reduce using rule 14 (statement -> PRINT STRING SEMI .)
    RPAREN          reduce using rule 14 (statement -> PRINT STRING SEMI .)


state 55

    (17) statement -> FUNCTION NAME LPAREN . RPAREN START bloc END
    (18) statement -> FUNCTION NAME LPAREN . params RPAREN START bloc END
    (15) params -> . NAME
    (16) params -> . NAME COMMA params

    RPAREN          shift and go to state 81
    NAME            shift and go to state 80

    params                         shift and go to state 82

state 56

    (4) statement -> NAME EQUALS expression SEMI .

    NAME            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FOR             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    IF              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    $end            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    TO              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LACC            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    END             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)


state 57

    (19) statement -> NAME LPAREN RPAREN SEMI .

    NAME            reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    TO              reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    LACC            reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    END             reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 19 (statement -> NAME LPAREN RPAREN SEMI .)


state 58

    (20) statement -> NAME LPAREN param_call RPAREN . SEMI

    SEMI            shift and go to state 83


state 59

    (22) param_call -> expression COMMA . param_call
    (21) param_call -> . expression
    (22) param_call -> . expression COMMA param_call
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 31
    param_call                     shift and go to state 84

state 60

    (39) statement -> NAME PLUSEQ NUMBER SEMI .

    NAME            reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    WHILE           reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FOR             reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    IF              reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    PRINT           reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    $end            reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TO              reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LACC            reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    END             reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RPAREN          reduce using rule 39 (statement -> NAME PLUSEQ NUMBER SEMI .)


state 61

    (40) statement -> NAME MINEQ NUMBER SEMI .

    NAME            reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    WHILE           reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    FOR             reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    IF              reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    PRINT           reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    $end            reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    TO              reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    LACC            reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    END             reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)
    RPAREN          reduce using rule 40 (statement -> NAME MINEQ NUMBER SEMI .)


state 62

    (6) statement -> WHILE expression RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 85
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 63

    (23) expression -> expression PLUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            reduce using rule 23 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    or              reduce using rule 23 (expression -> expression PLUS expression .)
    and             reduce using rule 23 (expression -> expression PLUS expression .)
    SUP             reduce using rule 23 (expression -> expression PLUS expression .)
    INFF            reduce using rule 23 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 23 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 23 (expression -> expression PLUS expression .)
    ET              reduce using rule 23 (expression -> expression PLUS expression .)
    OU              reduce using rule 23 (expression -> expression PLUS expression .)
    THEN            reduce using rule 23 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 23 (expression -> expression PLUS expression .)
    NAME            reduce using rule 23 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 23 (expression -> expression PLUS expression .)
    FOR             reduce using rule 23 (expression -> expression PLUS expression .)
    COMMENTS        reduce using rule 23 (expression -> expression PLUS expression .)
    IF              reduce using rule 23 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 23 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 23 (expression -> expression PLUS expression .)
    $end            reduce using rule 23 (expression -> expression PLUS expression .)
    TO              reduce using rule 23 (expression -> expression PLUS expression .)
    LACC            reduce using rule 23 (expression -> expression PLUS expression .)
    END             reduce using rule 23 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 23 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! or              [ shift and go to state 41 ]
  ! and             [ shift and go to state 42 ]
  ! SUP             [ shift and go to state 43 ]
  ! INFF            [ shift and go to state 44 ]
  ! ISEQUAL         [ shift and go to state 45 ]
  ! NOTEQUAL        [ shift and go to state 46 ]
  ! ET              [ shift and go to state 47 ]
  ! OU              [ shift and go to state 48 ]


state 64

    (24) expression -> expression MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            reduce using rule 24 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 24 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS expression .)
    or              reduce using rule 24 (expression -> expression MINUS expression .)
    and             reduce using rule 24 (expression -> expression MINUS expression .)
    SUP             reduce using rule 24 (expression -> expression MINUS expression .)
    INFF            reduce using rule 24 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 24 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 24 (expression -> expression MINUS expression .)
    ET              reduce using rule 24 (expression -> expression MINUS expression .)
    OU              reduce using rule 24 (expression -> expression MINUS expression .)
    THEN            reduce using rule 24 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 24 (expression -> expression MINUS expression .)
    NAME            reduce using rule 24 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 24 (expression -> expression MINUS expression .)
    FOR             reduce using rule 24 (expression -> expression MINUS expression .)
    COMMENTS        reduce using rule 24 (expression -> expression MINUS expression .)
    IF              reduce using rule 24 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 24 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 24 (expression -> expression MINUS expression .)
    $end            reduce using rule 24 (expression -> expression MINUS expression .)
    TO              reduce using rule 24 (expression -> expression MINUS expression .)
    LACC            reduce using rule 24 (expression -> expression MINUS expression .)
    END             reduce using rule 24 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 24 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! or              [ shift and go to state 41 ]
  ! and             [ shift and go to state 42 ]
  ! SUP             [ shift and go to state 43 ]
  ! INFF            [ shift and go to state 44 ]
  ! ISEQUAL         [ shift and go to state 45 ]
  ! NOTEQUAL        [ shift and go to state 46 ]
  ! ET              [ shift and go to state 47 ]
  ! OU              [ shift and go to state 48 ]


state 65

    (25) expression -> expression TIMES expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            reduce using rule 25 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 25 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 25 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 25 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 25 (expression -> expression TIMES expression .)
    or              reduce using rule 25 (expression -> expression TIMES expression .)
    and             reduce using rule 25 (expression -> expression TIMES expression .)
    SUP             reduce using rule 25 (expression -> expression TIMES expression .)
    INFF            reduce using rule 25 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 25 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 25 (expression -> expression TIMES expression .)
    ET              reduce using rule 25 (expression -> expression TIMES expression .)
    OU              reduce using rule 25 (expression -> expression TIMES expression .)
    THEN            reduce using rule 25 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 25 (expression -> expression TIMES expression .)
    NAME            reduce using rule 25 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 25 (expression -> expression TIMES expression .)
    FOR             reduce using rule 25 (expression -> expression TIMES expression .)
    COMMENTS        reduce using rule 25 (expression -> expression TIMES expression .)
    IF              reduce using rule 25 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 25 (expression -> expression TIMES expression .)
    FUNCTION        reduce using rule 25 (expression -> expression TIMES expression .)
    $end            reduce using rule 25 (expression -> expression TIMES expression .)
    TO              reduce using rule 25 (expression -> expression TIMES expression .)
    LACC            reduce using rule 25 (expression -> expression TIMES expression .)
    END             reduce using rule 25 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 25 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 25 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! or              [ shift and go to state 41 ]
  ! and             [ shift and go to state 42 ]
  ! SUP             [ shift and go to state 43 ]
  ! INFF            [ shift and go to state 44 ]
  ! ISEQUAL         [ shift and go to state 45 ]
  ! NOTEQUAL        [ shift and go to state 46 ]
  ! ET              [ shift and go to state 47 ]
  ! OU              [ shift and go to state 48 ]


state 66

    (26) expression -> expression DIVIDE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            reduce using rule 26 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 26 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    or              reduce using rule 26 (expression -> expression DIVIDE expression .)
    and             reduce using rule 26 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 26 (expression -> expression DIVIDE expression .)
    INFF            reduce using rule 26 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 26 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 26 (expression -> expression DIVIDE expression .)
    ET              reduce using rule 26 (expression -> expression DIVIDE expression .)
    OU              reduce using rule 26 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 26 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 26 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 26 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 26 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 26 (expression -> expression DIVIDE expression .)
    COMMENTS        reduce using rule 26 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 26 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 26 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 26 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 26 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 26 (expression -> expression DIVIDE expression .)
    LACC            reduce using rule 26 (expression -> expression DIVIDE expression .)
    END             reduce using rule 26 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 26 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 26 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! or              [ shift and go to state 41 ]
  ! and             [ shift and go to state 42 ]
  ! SUP             [ shift and go to state 43 ]
  ! INFF            [ shift and go to state 44 ]
  ! ISEQUAL         [ shift and go to state 45 ]
  ! NOTEQUAL        [ shift and go to state 46 ]
  ! ET              [ shift and go to state 47 ]
  ! OU              [ shift and go to state 48 ]


state 67

    (27) expression -> expression or expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            reduce using rule 27 (expression -> expression or expression .)
    or              reduce using rule 27 (expression -> expression or expression .)
    INFF            reduce using rule 27 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 27 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 27 (expression -> expression or expression .)
    ET              reduce using rule 27 (expression -> expression or expression .)
    OU              reduce using rule 27 (expression -> expression or expression .)
    THEN            reduce using rule 27 (expression -> expression or expression .)
    SEMI            reduce using rule 27 (expression -> expression or expression .)
    NAME            reduce using rule 27 (expression -> expression or expression .)
    WHILE           reduce using rule 27 (expression -> expression or expression .)
    FOR             reduce using rule 27 (expression -> expression or expression .)
    COMMENTS        reduce using rule 27 (expression -> expression or expression .)
    IF              reduce using rule 27 (expression -> expression or expression .)
    PRINT           reduce using rule 27 (expression -> expression or expression .)
    FUNCTION        reduce using rule 27 (expression -> expression or expression .)
    $end            reduce using rule 27 (expression -> expression or expression .)
    TO              reduce using rule 27 (expression -> expression or expression .)
    LACC            reduce using rule 27 (expression -> expression or expression .)
    END             reduce using rule 27 (expression -> expression or expression .)
    RPAREN          reduce using rule 27 (expression -> expression or expression .)
    COMMA           reduce using rule 27 (expression -> expression or expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    and             shift and go to state 42
    SUP             shift and go to state 43

  ! PLUS            [ reduce using rule 27 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 27 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 27 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 41 ]
  ! INFF            [ shift and go to state 44 ]
  ! ISEQUAL         [ shift and go to state 45 ]
  ! NOTEQUAL        [ shift and go to state 46 ]
  ! ET              [ shift and go to state 47 ]
  ! OU              [ shift and go to state 48 ]


state 68

    (28) expression -> expression and expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            reduce using rule 28 (expression -> expression and expression .)
    or              reduce using rule 28 (expression -> expression and expression .)
    and             reduce using rule 28 (expression -> expression and expression .)
    INFF            reduce using rule 28 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 28 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 28 (expression -> expression and expression .)
    ET              reduce using rule 28 (expression -> expression and expression .)
    OU              reduce using rule 28 (expression -> expression and expression .)
    THEN            reduce using rule 28 (expression -> expression and expression .)
    SEMI            reduce using rule 28 (expression -> expression and expression .)
    NAME            reduce using rule 28 (expression -> expression and expression .)
    WHILE           reduce using rule 28 (expression -> expression and expression .)
    FOR             reduce using rule 28 (expression -> expression and expression .)
    COMMENTS        reduce using rule 28 (expression -> expression and expression .)
    IF              reduce using rule 28 (expression -> expression and expression .)
    PRINT           reduce using rule 28 (expression -> expression and expression .)
    FUNCTION        reduce using rule 28 (expression -> expression and expression .)
    $end            reduce using rule 28 (expression -> expression and expression .)
    TO              reduce using rule 28 (expression -> expression and expression .)
    LACC            reduce using rule 28 (expression -> expression and expression .)
    END             reduce using rule 28 (expression -> expression and expression .)
    RPAREN          reduce using rule 28 (expression -> expression and expression .)
    COMMA           reduce using rule 28 (expression -> expression and expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    SUP             shift and go to state 43

  ! PLUS            [ reduce using rule 28 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 28 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 41 ]
  ! and             [ shift and go to state 42 ]
  ! INFF            [ shift and go to state 44 ]
  ! ISEQUAL         [ shift and go to state 45 ]
  ! NOTEQUAL        [ shift and go to state 46 ]
  ! ET              [ shift and go to state 47 ]
  ! OU              [ shift and go to state 48 ]


state 69

    (29) expression -> expression SUP expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    RACC            reduce using rule 29 (expression -> expression SUP expression .)
    or              reduce using rule 29 (expression -> expression SUP expression .)
    and             reduce using rule 29 (expression -> expression SUP expression .)
    SUP             reduce using rule 29 (expression -> expression SUP expression .)
    INFF            reduce using rule 29 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 29 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 29 (expression -> expression SUP expression .)
    ET              reduce using rule 29 (expression -> expression SUP expression .)
    OU              reduce using rule 29 (expression -> expression SUP expression .)
    THEN            reduce using rule 29 (expression -> expression SUP expression .)
    SEMI            reduce using rule 29 (expression -> expression SUP expression .)
    NAME            reduce using rule 29 (expression -> expression SUP expression .)
    WHILE           reduce using rule 29 (expression -> expression SUP expression .)
    FOR             reduce using rule 29 (expression -> expression SUP expression .)
    COMMENTS        reduce using rule 29 (expression -> expression SUP expression .)
    IF              reduce using rule 29 (expression -> expression SUP expression .)
    PRINT           reduce using rule 29 (expression -> expression SUP expression .)
    FUNCTION        reduce using rule 29 (expression -> expression SUP expression .)
    $end            reduce using rule 29 (expression -> expression SUP expression .)
    TO              reduce using rule 29 (expression -> expression SUP expression .)
    LACC            reduce using rule 29 (expression -> expression SUP expression .)
    END             reduce using rule 29 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 29 (expression -> expression SUP expression .)
    COMMA           reduce using rule 29 (expression -> expression SUP expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! PLUS            [ reduce using rule 29 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 41 ]
  ! and             [ shift and go to state 42 ]
  ! SUP             [ shift and go to state 43 ]
  ! INFF            [ shift and go to state 44 ]
  ! ISEQUAL         [ shift and go to state 45 ]
  ! NOTEQUAL        [ shift and go to state 46 ]
  ! ET              [ shift and go to state 47 ]
  ! OU              [ shift and go to state 48 ]


state 70

    (30) expression -> expression INFF expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 30 (expression -> expression INFF expression .)
    THEN            reduce using rule 30 (expression -> expression INFF expression .)
    SEMI            reduce using rule 30 (expression -> expression INFF expression .)
    NAME            reduce using rule 30 (expression -> expression INFF expression .)
    WHILE           reduce using rule 30 (expression -> expression INFF expression .)
    FOR             reduce using rule 30 (expression -> expression INFF expression .)
    COMMENTS        reduce using rule 30 (expression -> expression INFF expression .)
    IF              reduce using rule 30 (expression -> expression INFF expression .)
    PRINT           reduce using rule 30 (expression -> expression INFF expression .)
    FUNCTION        reduce using rule 30 (expression -> expression INFF expression .)
    $end            reduce using rule 30 (expression -> expression INFF expression .)
    TO              reduce using rule 30 (expression -> expression INFF expression .)
    LACC            reduce using rule 30 (expression -> expression INFF expression .)
    END             reduce using rule 30 (expression -> expression INFF expression .)
    RPAREN          reduce using rule 30 (expression -> expression INFF expression .)
    COMMA           reduce using rule 30 (expression -> expression INFF expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48

  ! PLUS            [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 30 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 30 (expression -> expression INFF expression .) ]


state 71

    (31) expression -> expression ISEQUAL expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 31 (expression -> expression ISEQUAL expression .)
    THEN            reduce using rule 31 (expression -> expression ISEQUAL expression .)
    SEMI            reduce using rule 31 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 31 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 31 (expression -> expression ISEQUAL expression .)
    FOR             reduce using rule 31 (expression -> expression ISEQUAL expression .)
    COMMENTS        reduce using rule 31 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 31 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 31 (expression -> expression ISEQUAL expression .)
    FUNCTION        reduce using rule 31 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 31 (expression -> expression ISEQUAL expression .)
    TO              reduce using rule 31 (expression -> expression ISEQUAL expression .)
    LACC            reduce using rule 31 (expression -> expression ISEQUAL expression .)
    END             reduce using rule 31 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 31 (expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 31 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48

  ! PLUS            [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! or              [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! and             [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! SUP             [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! INFF            [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! ET              [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]
  ! OU              [ reduce using rule 31 (expression -> expression ISEQUAL expression .) ]


state 72

    (32) expression -> expression NOTEQUAL expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    THEN            reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    SEMI            reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    COMMENTS        reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    FUNCTION        reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    TO              reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    LACC            reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    END             reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 32 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48

  ! PLUS            [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! or              [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! and             [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! SUP             [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! INFF            [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! ET              [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]
  ! OU              [ reduce using rule 32 (expression -> expression NOTEQUAL expression .) ]


state 73

    (33) expression -> expression ET expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 33 (expression -> expression ET expression .)
    THEN            reduce using rule 33 (expression -> expression ET expression .)
    SEMI            reduce using rule 33 (expression -> expression ET expression .)
    NAME            reduce using rule 33 (expression -> expression ET expression .)
    WHILE           reduce using rule 33 (expression -> expression ET expression .)
    FOR             reduce using rule 33 (expression -> expression ET expression .)
    COMMENTS        reduce using rule 33 (expression -> expression ET expression .)
    IF              reduce using rule 33 (expression -> expression ET expression .)
    PRINT           reduce using rule 33 (expression -> expression ET expression .)
    FUNCTION        reduce using rule 33 (expression -> expression ET expression .)
    $end            reduce using rule 33 (expression -> expression ET expression .)
    TO              reduce using rule 33 (expression -> expression ET expression .)
    LACC            reduce using rule 33 (expression -> expression ET expression .)
    END             reduce using rule 33 (expression -> expression ET expression .)
    RPAREN          reduce using rule 33 (expression -> expression ET expression .)
    COMMA           reduce using rule 33 (expression -> expression ET expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48

  ! PLUS            [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! or              [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! and             [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! SUP             [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! INFF            [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! ISEQUAL         [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! NOTEQUAL        [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! ET              [ reduce using rule 33 (expression -> expression ET expression .) ]
  ! OU              [ reduce using rule 33 (expression -> expression ET expression .) ]


state 74

    (34) expression -> expression OU expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 34 (expression -> expression OU expression .)
    THEN            reduce using rule 34 (expression -> expression OU expression .)
    SEMI            reduce using rule 34 (expression -> expression OU expression .)
    NAME            reduce using rule 34 (expression -> expression OU expression .)
    WHILE           reduce using rule 34 (expression -> expression OU expression .)
    FOR             reduce using rule 34 (expression -> expression OU expression .)
    COMMENTS        reduce using rule 34 (expression -> expression OU expression .)
    IF              reduce using rule 34 (expression -> expression OU expression .)
    PRINT           reduce using rule 34 (expression -> expression OU expression .)
    FUNCTION        reduce using rule 34 (expression -> expression OU expression .)
    $end            reduce using rule 34 (expression -> expression OU expression .)
    TO              reduce using rule 34 (expression -> expression OU expression .)
    LACC            reduce using rule 34 (expression -> expression OU expression .)
    END             reduce using rule 34 (expression -> expression OU expression .)
    RPAREN          reduce using rule 34 (expression -> expression OU expression .)
    COMMA           reduce using rule 34 (expression -> expression OU expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48

  ! PLUS            [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! or              [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! and             [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! SUP             [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! INFF            [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! ISEQUAL         [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! NOTEQUAL        [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! ET              [ reduce using rule 34 (expression -> expression OU expression .) ]
  ! OU              [ reduce using rule 34 (expression -> expression OU expression .) ]


state 75

    (44) expression -> LPAREN expression RPAREN .

    RACC            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    INFF            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    ET              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    OU              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    COMMENTS        reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LACC            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 44 (expression -> LPAREN expression RPAREN .)


state 76

    (7) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN RACC bloc LACC

    NUMBER          shift and go to state 86


state 77

    (9) statement -> IF expression THEN statement .

    NAME            reduce using rule 9 (statement -> IF expression THEN statement .)
    WHILE           reduce using rule 9 (statement -> IF expression THEN statement .)
    FOR             reduce using rule 9 (statement -> IF expression THEN statement .)
    COMMENTS        reduce using rule 9 (statement -> IF expression THEN statement .)
    IF              reduce using rule 9 (statement -> IF expression THEN statement .)
    PRINT           reduce using rule 9 (statement -> IF expression THEN statement .)
    FUNCTION        reduce using rule 9 (statement -> IF expression THEN statement .)
    $end            reduce using rule 9 (statement -> IF expression THEN statement .)
    TO              reduce using rule 9 (statement -> IF expression THEN statement .)
    LACC            reduce using rule 9 (statement -> IF expression THEN statement .)
    END             reduce using rule 9 (statement -> IF expression THEN statement .)
    RPAREN          reduce using rule 9 (statement -> IF expression THEN statement .)


state 78

    (10) statement -> IF expression THEN RACC . bloc LACC
    (11) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 87
    statement                      shift and go to state 3

state 79

    (13) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 88


state 80

    (15) params -> NAME .
    (16) params -> NAME . COMMA params

    RPAREN          reduce using rule 15 (params -> NAME .)
    COMMA           shift and go to state 89


state 81

    (17) statement -> FUNCTION NAME LPAREN RPAREN . START bloc END

    START           shift and go to state 90


state 82

    (18) statement -> FUNCTION NAME LPAREN params . RPAREN START bloc END

    RPAREN          shift and go to state 91


state 83

    (20) statement -> NAME LPAREN param_call RPAREN SEMI .

    NAME            reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    WHILE           reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FOR             reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    COMMENTS        reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    IF              reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    PRINT           reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FUNCTION        reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    $end            reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    TO              reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LACC            reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    END             reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RPAREN          reduce using rule 20 (statement -> NAME LPAREN param_call RPAREN SEMI .)


state 84

    (22) param_call -> expression COMMA param_call .

    RPAREN          reduce using rule 22 (param_call -> expression COMMA param_call .)


state 85

    (6) statement -> WHILE expression RACC bloc LACC .

    NAME            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    WHILE           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FOR             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    COMMENTS        reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    IF              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    PRINT           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FUNCTION        reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    $end            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    TO              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    LACC            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    END             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    RPAREN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)


state 86

    (7) statement -> FOR LPAREN statement TO NUMBER . COMMA statement RPAREN RACC bloc LACC

    COMMA           shift and go to state 92


state 87

    (10) statement -> IF expression THEN RACC bloc . LACC
    (11) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 93
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 88

    (13) statement -> PRINT LPAREN expression RPAREN SEMI .

    NAME            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    COMMENTS        reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FUNCTION        reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TO              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LACC            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    END             reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 89

    (16) params -> NAME COMMA . params
    (15) params -> . NAME
    (16) params -> . NAME COMMA params

    NAME            shift and go to state 80

    params                         shift and go to state 94

state 90

    (17) statement -> FUNCTION NAME LPAREN RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 95
    statement                      shift and go to state 3

state 91

    (18) statement -> FUNCTION NAME LPAREN params RPAREN . START bloc END

    START           shift and go to state 96


state 92

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA . statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 97

state 93

    (10) statement -> IF expression THEN RACC bloc LACC .
    (11) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    NAME            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    WHILE           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    FOR             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    COMMENTS        reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    IF              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    PRINT           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    FUNCTION        reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    $end            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    TO              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    LACC            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    END             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    RPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    ELSEIF          shift and go to state 98
    ELSE            shift and go to state 99


state 94

    (16) params -> NAME COMMA params .

    RPAREN          reduce using rule 16 (params -> NAME COMMA params .)


state 95

    (17) statement -> FUNCTION NAME LPAREN RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    END             shift and go to state 100
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 96

    (18) statement -> FUNCTION NAME LPAREN params RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 101
    statement                      shift and go to state 3

state 97

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement . RPAREN RACC bloc LACC

    RPAREN          shift and go to state 102


state 98

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression or expression
    (28) expression -> . expression and expression
    (29) expression -> . expression SUP expression
    (30) expression -> . expression INFF expression
    (31) expression -> . expression ISEQUAL expression
    (32) expression -> . expression NOTEQUAL expression
    (33) expression -> . expression ET expression
    (34) expression -> . expression OU expression
    (43) expression -> . MINUS expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . NUMBER
    (46) expression -> . NAME

    MINUS           shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 22

    expression                     shift and go to state 103

state 99

    (12) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 104


state 100

    (17) statement -> FUNCTION NAME LPAREN RPAREN START bloc END .

    NAME            reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    WHILE           reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FOR             reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    COMMENTS        reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    IF              reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    PRINT           reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FUNCTION        reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    $end            reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TO              reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LACC            reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    END             reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RPAREN          reduce using rule 17 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)


state 101

    (18) statement -> FUNCTION NAME LPAREN params RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    END             shift and go to state 105
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 102

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN . RACC bloc LACC

    RACC            shift and go to state 106


state 103

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . or expression
    (28) expression -> expression . and expression
    (29) expression -> expression . SUP expression
    (30) expression -> expression . INFF expression
    (31) expression -> expression . ISEQUAL expression
    (32) expression -> expression . NOTEQUAL expression
    (33) expression -> expression . ET expression
    (34) expression -> expression . OU expression

    THEN            shift and go to state 107
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 41
    and             shift and go to state 42
    SUP             shift and go to state 43
    INFF            shift and go to state 44
    ISEQUAL         shift and go to state 45
    NOTEQUAL        shift and go to state 46
    ET              shift and go to state 47
    OU              shift and go to state 48


state 104

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 108
    statement                      shift and go to state 3

state 105

    (18) statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .

    NAME            reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    WHILE           reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FOR             reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    COMMENTS        reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    IF              reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    PRINT           reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FUNCTION        reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    $end            reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    TO              reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LACC            reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    END             reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RPAREN          reduce using rule 18 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)


state 106

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 109

state 107

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC

    RACC            shift and go to state 110


state 108

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 111
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 109

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 112
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 110

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 113
    statement                      shift and go to state 3

state 111

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)


state 112

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .

    NAME            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    WHILE           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FOR             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    COMMENTS        reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    IF              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    PRINT           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FUNCTION        reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    $end            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    TO              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LACC            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    END             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)


state 113

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 114
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 114

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 115


state 115

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 116


state 116

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 117
    statement                      shift and go to state 3

state 117

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (18) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (19) statement -> . NAME LPAREN RPAREN SEMI
    (20) statement -> . NAME LPAREN param_call RPAREN SEMI
    (35) statement -> . NAME INCR SEMI
    (36) statement -> . NAME DECR SEMI
    (37) statement -> . NAME INCR
    (38) statement -> . NAME DECR
    (39) statement -> . NAME PLUSEQ NUMBER SEMI
    (40) statement -> . NAME MINEQ NUMBER SEMI
    (41) statement -> . NAME PLUSEQ NUMBER
    (42) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 118
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    COMMENTS        shift and go to state 7
    IF              shift and go to state 8
    PRINT           shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 118

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for or in state 70 resolved as shift
WARNING: shift/reduce conflict for and in state 70 resolved as shift
WARNING: shift/reduce conflict for SUP in state 70 resolved as shift
WARNING: shift/reduce conflict for INFF in state 70 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for ET in state 70 resolved as shift
WARNING: shift/reduce conflict for OU in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for or in state 71 resolved as shift
WARNING: shift/reduce conflict for and in state 71 resolved as shift
WARNING: shift/reduce conflict for SUP in state 71 resolved as shift
WARNING: shift/reduce conflict for INFF in state 71 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for ET in state 71 resolved as shift
WARNING: shift/reduce conflict for OU in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for or in state 72 resolved as shift
WARNING: shift/reduce conflict for and in state 72 resolved as shift
WARNING: shift/reduce conflict for SUP in state 72 resolved as shift
WARNING: shift/reduce conflict for INFF in state 72 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for ET in state 72 resolved as shift
WARNING: shift/reduce conflict for OU in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for or in state 73 resolved as shift
WARNING: shift/reduce conflict for and in state 73 resolved as shift
WARNING: shift/reduce conflict for SUP in state 73 resolved as shift
WARNING: shift/reduce conflict for INFF in state 73 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for ET in state 73 resolved as shift
WARNING: shift/reduce conflict for OU in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for or in state 74 resolved as shift
WARNING: shift/reduce conflict for and in state 74 resolved as shift
WARNING: shift/reduce conflict for SUP in state 74 resolved as shift
WARNING: shift/reduce conflict for INFF in state 74 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for ET in state 74 resolved as shift
WARNING: shift/reduce conflict for OU in state 74 resolved as shift
