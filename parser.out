Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> NAME EQUALS expression SEMI
Rule 5     statement -> NAME EQUALS expression
Rule 6     statement -> WHILE expression RACC bloc LACC
Rule 7     statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
Rule 8     statement -> IF expression THEN statement
Rule 9     statement -> IF expression THEN RACC bloc LACC
Rule 10    statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 11    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 12    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 13    statement -> PRINT STRING SEMI
Rule 14    statement -> FUNCTION NAME LPAREN RPAREN START bloc END
Rule 15    statement -> NAME LPAREN RPAREN SEMI
Rule 16    expression -> expression PLUS expression
Rule 17    expression -> expression MINUS expression
Rule 18    expression -> expression TIMES expression
Rule 19    expression -> expression DIVIDE expression
Rule 20    expression -> expression or expression
Rule 21    expression -> expression and expression
Rule 22    expression -> expression SUP expression
Rule 23    expression -> expression INFF expression
Rule 24    expression -> expression ISEQUAL expression
Rule 25    expression -> expression NOTEQUAL expression
Rule 26    expression -> expression ET expression
Rule 27    expression -> expression OU expression
Rule 28    statement -> NAME INCR SEMI
Rule 29    statement -> NAME DECR SEMI
Rule 30    statement -> NAME INCR
Rule 31    statement -> NAME DECR
Rule 32    statement -> NAME PLUSEQ NUMBER SEMI
Rule 33    statement -> NAME MINEQ NUMBER SEMI
Rule 34    statement -> NAME PLUSEQ NUMBER
Rule 35    statement -> NAME MINEQ NUMBER
Rule 36    expression -> MINUS expression
Rule 37    expression -> LPAREN expression RPAREN
Rule 38    expression -> NUMBER
Rule 39    expression -> NAME

Terminals, with rules where they appear

COMMA                : 7
COMMENT              : 
DECR                 : 29 31
DIVIDE               : 19
ELSE                 : 10 11
ELSEIF               : 10
END                  : 14
EQUALS               : 4 5
ET                   : 26
FOR                  : 7
FUNCTION             : 14
IF                   : 8 9 10 11
INCR                 : 28 30
INFF                 : 23
ISEQUAL              : 24
LACC                 : 6 7 9 10 10 10 11 11
LPAREN               : 7 12 14 15 37
MINEQ                : 33 35
MINUS                : 17 36
NAME                 : 4 5 14 15 28 29 30 31 32 33 34 35 39
NOTEQUAL             : 25
NUMBER               : 7 32 33 34 35 38
OU                   : 27
PLUS                 : 16
PLUSEQ               : 32 34
PRINT                : 12 13
RACC                 : 6 7 9 10 10 10 11 11
RPAREN               : 7 12 14 15 37
SEMI                 : 4 12 13 15 28 29 32 33
START                : 14
STRING               : 13
SUP                  : 22
THEN                 : 8 9 10 10 11
TIMES                : 18
TO                   : 7
WHILE                : 6
and                  : 21
error                : 
or                   : 20

Nonterminals, with rules where they appear

bloc                 : 1 2 6 7 9 10 10 10 11 11 14
expression           : 4 5 6 8 9 10 10 11 12 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 36 37
start                : 0
statement            : 2 3 7 7 8

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 3

    (3) bloc -> statement .

    NAME            reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    LACC            reduce using rule 3 (bloc -> statement .)
    END             reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> NAME . EQUALS expression SEMI
    (5) statement -> NAME . EQUALS expression
    (15) statement -> NAME . LPAREN RPAREN SEMI
    (28) statement -> NAME . INCR SEMI
    (29) statement -> NAME . DECR SEMI
    (30) statement -> NAME . INCR
    (31) statement -> NAME . DECR
    (32) statement -> NAME . PLUSEQ NUMBER SEMI
    (33) statement -> NAME . MINEQ NUMBER SEMI
    (34) statement -> NAME . PLUSEQ NUMBER
    (35) statement -> NAME . MINEQ NUMBER

    EQUALS          shift and go to state 11
    LPAREN          shift and go to state 12
    INCR            shift and go to state 13
    DECR            shift and go to state 14
    PLUSEQ          shift and go to state 15
    MINEQ           shift and go to state 16


state 5

    (6) statement -> WHILE . expression RACC bloc LACC
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 17

state 6

    (7) statement -> FOR . LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC

    LPAREN          shift and go to state 22


state 7

    (8) statement -> IF . expression THEN statement
    (9) statement -> IF . expression THEN RACC bloc LACC
    (10) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 23

state 8

    (12) statement -> PRINT . LPAREN expression RPAREN SEMI
    (13) statement -> PRINT . STRING SEMI

    LPAREN          shift and go to state 24
    STRING          shift and go to state 25


state 9

    (14) statement -> FUNCTION . NAME LPAREN RPAREN START bloc END

    NAME            shift and go to state 26


state 10

    (2) bloc -> bloc statement .

    NAME            reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    LACC            reduce using rule 2 (bloc -> bloc statement .)
    END             reduce using rule 2 (bloc -> bloc statement .)


state 11

    (4) statement -> NAME EQUALS . expression SEMI
    (5) statement -> NAME EQUALS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 27

state 12

    (15) statement -> NAME LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 28


state 13

    (28) statement -> NAME INCR . SEMI
    (30) statement -> NAME INCR .

    SEMI            shift and go to state 29
    NAME            reduce using rule 30 (statement -> NAME INCR .)
    WHILE           reduce using rule 30 (statement -> NAME INCR .)
    FOR             reduce using rule 30 (statement -> NAME INCR .)
    IF              reduce using rule 30 (statement -> NAME INCR .)
    PRINT           reduce using rule 30 (statement -> NAME INCR .)
    FUNCTION        reduce using rule 30 (statement -> NAME INCR .)
    $end            reduce using rule 30 (statement -> NAME INCR .)
    TO              reduce using rule 30 (statement -> NAME INCR .)
    LACC            reduce using rule 30 (statement -> NAME INCR .)
    END             reduce using rule 30 (statement -> NAME INCR .)
    RPAREN          reduce using rule 30 (statement -> NAME INCR .)


state 14

    (29) statement -> NAME DECR . SEMI
    (31) statement -> NAME DECR .

    SEMI            shift and go to state 30
    NAME            reduce using rule 31 (statement -> NAME DECR .)
    WHILE           reduce using rule 31 (statement -> NAME DECR .)
    FOR             reduce using rule 31 (statement -> NAME DECR .)
    IF              reduce using rule 31 (statement -> NAME DECR .)
    PRINT           reduce using rule 31 (statement -> NAME DECR .)
    FUNCTION        reduce using rule 31 (statement -> NAME DECR .)
    $end            reduce using rule 31 (statement -> NAME DECR .)
    TO              reduce using rule 31 (statement -> NAME DECR .)
    LACC            reduce using rule 31 (statement -> NAME DECR .)
    END             reduce using rule 31 (statement -> NAME DECR .)
    RPAREN          reduce using rule 31 (statement -> NAME DECR .)


state 15

    (32) statement -> NAME PLUSEQ . NUMBER SEMI
    (34) statement -> NAME PLUSEQ . NUMBER

    NUMBER          shift and go to state 31


state 16

    (33) statement -> NAME MINEQ . NUMBER SEMI
    (35) statement -> NAME MINEQ . NUMBER

    NUMBER          shift and go to state 32


state 17

    (6) statement -> WHILE expression . RACC bloc LACC
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45


state 18

    (36) expression -> MINUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 46

state 19

    (37) expression -> LPAREN . expression RPAREN
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 47

state 20

    (38) expression -> NUMBER .

    RACC            reduce using rule 38 (expression -> NUMBER .)
    PLUS            reduce using rule 38 (expression -> NUMBER .)
    MINUS           reduce using rule 38 (expression -> NUMBER .)
    TIMES           reduce using rule 38 (expression -> NUMBER .)
    DIVIDE          reduce using rule 38 (expression -> NUMBER .)
    or              reduce using rule 38 (expression -> NUMBER .)
    and             reduce using rule 38 (expression -> NUMBER .)
    SUP             reduce using rule 38 (expression -> NUMBER .)
    INFF            reduce using rule 38 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 38 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 38 (expression -> NUMBER .)
    ET              reduce using rule 38 (expression -> NUMBER .)
    OU              reduce using rule 38 (expression -> NUMBER .)
    THEN            reduce using rule 38 (expression -> NUMBER .)
    SEMI            reduce using rule 38 (expression -> NUMBER .)
    NAME            reduce using rule 38 (expression -> NUMBER .)
    WHILE           reduce using rule 38 (expression -> NUMBER .)
    FOR             reduce using rule 38 (expression -> NUMBER .)
    IF              reduce using rule 38 (expression -> NUMBER .)
    PRINT           reduce using rule 38 (expression -> NUMBER .)
    FUNCTION        reduce using rule 38 (expression -> NUMBER .)
    $end            reduce using rule 38 (expression -> NUMBER .)
    TO              reduce using rule 38 (expression -> NUMBER .)
    LACC            reduce using rule 38 (expression -> NUMBER .)
    END             reduce using rule 38 (expression -> NUMBER .)
    RPAREN          reduce using rule 38 (expression -> NUMBER .)


state 21

    (39) expression -> NAME .

    RACC            reduce using rule 39 (expression -> NAME .)
    PLUS            reduce using rule 39 (expression -> NAME .)
    MINUS           reduce using rule 39 (expression -> NAME .)
    TIMES           reduce using rule 39 (expression -> NAME .)
    DIVIDE          reduce using rule 39 (expression -> NAME .)
    or              reduce using rule 39 (expression -> NAME .)
    and             reduce using rule 39 (expression -> NAME .)
    SUP             reduce using rule 39 (expression -> NAME .)
    INFF            reduce using rule 39 (expression -> NAME .)
    ISEQUAL         reduce using rule 39 (expression -> NAME .)
    NOTEQUAL        reduce using rule 39 (expression -> NAME .)
    ET              reduce using rule 39 (expression -> NAME .)
    OU              reduce using rule 39 (expression -> NAME .)
    THEN            reduce using rule 39 (expression -> NAME .)
    SEMI            reduce using rule 39 (expression -> NAME .)
    NAME            reduce using rule 39 (expression -> NAME .)
    WHILE           reduce using rule 39 (expression -> NAME .)
    FOR             reduce using rule 39 (expression -> NAME .)
    IF              reduce using rule 39 (expression -> NAME .)
    PRINT           reduce using rule 39 (expression -> NAME .)
    FUNCTION        reduce using rule 39 (expression -> NAME .)
    $end            reduce using rule 39 (expression -> NAME .)
    TO              reduce using rule 39 (expression -> NAME .)
    LACC            reduce using rule 39 (expression -> NAME .)
    END             reduce using rule 39 (expression -> NAME .)
    RPAREN          reduce using rule 39 (expression -> NAME .)


state 22

    (7) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 48

state 23

    (8) statement -> IF expression . THEN statement
    (9) statement -> IF expression . THEN RACC bloc LACC
    (10) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    THEN            shift and go to state 49
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45


state 24

    (12) statement -> PRINT LPAREN . expression RPAREN SEMI
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 50

state 25

    (13) statement -> PRINT STRING . SEMI

    SEMI            shift and go to state 51


state 26

    (14) statement -> FUNCTION NAME . LPAREN RPAREN START bloc END

    LPAREN          shift and go to state 52


state 27

    (4) statement -> NAME EQUALS expression . SEMI
    (5) statement -> NAME EQUALS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    SEMI            shift and go to state 53
    NAME            reduce using rule 5 (statement -> NAME EQUALS expression .)
    WHILE           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FOR             reduce using rule 5 (statement -> NAME EQUALS expression .)
    IF              reduce using rule 5 (statement -> NAME EQUALS expression .)
    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FUNCTION        reduce using rule 5 (statement -> NAME EQUALS expression .)
    $end            reduce using rule 5 (statement -> NAME EQUALS expression .)
    TO              reduce using rule 5 (statement -> NAME EQUALS expression .)
    LACC            reduce using rule 5 (statement -> NAME EQUALS expression .)
    END             reduce using rule 5 (statement -> NAME EQUALS expression .)
    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45


state 28

    (15) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 54


state 29

    (28) statement -> NAME INCR SEMI .

    NAME            reduce using rule 28 (statement -> NAME INCR SEMI .)
    WHILE           reduce using rule 28 (statement -> NAME INCR SEMI .)
    FOR             reduce using rule 28 (statement -> NAME INCR SEMI .)
    IF              reduce using rule 28 (statement -> NAME INCR SEMI .)
    PRINT           reduce using rule 28 (statement -> NAME INCR SEMI .)
    FUNCTION        reduce using rule 28 (statement -> NAME INCR SEMI .)
    $end            reduce using rule 28 (statement -> NAME INCR SEMI .)
    TO              reduce using rule 28 (statement -> NAME INCR SEMI .)
    LACC            reduce using rule 28 (statement -> NAME INCR SEMI .)
    END             reduce using rule 28 (statement -> NAME INCR SEMI .)
    RPAREN          reduce using rule 28 (statement -> NAME INCR SEMI .)


state 30

    (29) statement -> NAME DECR SEMI .

    NAME            reduce using rule 29 (statement -> NAME DECR SEMI .)
    WHILE           reduce using rule 29 (statement -> NAME DECR SEMI .)
    FOR             reduce using rule 29 (statement -> NAME DECR SEMI .)
    IF              reduce using rule 29 (statement -> NAME DECR SEMI .)
    PRINT           reduce using rule 29 (statement -> NAME DECR SEMI .)
    FUNCTION        reduce using rule 29 (statement -> NAME DECR SEMI .)
    $end            reduce using rule 29 (statement -> NAME DECR SEMI .)
    TO              reduce using rule 29 (statement -> NAME DECR SEMI .)
    LACC            reduce using rule 29 (statement -> NAME DECR SEMI .)
    END             reduce using rule 29 (statement -> NAME DECR SEMI .)
    RPAREN          reduce using rule 29 (statement -> NAME DECR SEMI .)


state 31

    (32) statement -> NAME PLUSEQ NUMBER . SEMI
    (34) statement -> NAME PLUSEQ NUMBER .

    SEMI            shift and go to state 55
    NAME            reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    WHILE           reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    FOR             reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    IF              reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    PRINT           reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    FUNCTION        reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    $end            reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    TO              reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    LACC            reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    END             reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)
    RPAREN          reduce using rule 34 (statement -> NAME PLUSEQ NUMBER .)


state 32

    (33) statement -> NAME MINEQ NUMBER . SEMI
    (35) statement -> NAME MINEQ NUMBER .

    SEMI            shift and go to state 56
    NAME            reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    WHILE           reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    FOR             reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    IF              reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    PRINT           reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    FUNCTION        reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    $end            reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    TO              reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    LACC            reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    END             reduce using rule 35 (statement -> NAME MINEQ NUMBER .)
    RPAREN          reduce using rule 35 (statement -> NAME MINEQ NUMBER .)


state 33

    (6) statement -> WHILE expression RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 57
    statement                      shift and go to state 3

state 34

    (16) expression -> expression PLUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 58

state 35

    (17) expression -> expression MINUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 59

state 36

    (18) expression -> expression TIMES . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 60

state 37

    (19) expression -> expression DIVIDE . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 61

state 38

    (20) expression -> expression or . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 62

state 39

    (21) expression -> expression and . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 63

state 40

    (22) expression -> expression SUP . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 64

state 41

    (23) expression -> expression INFF . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 65

state 42

    (24) expression -> expression ISEQUAL . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 66

state 43

    (25) expression -> expression NOTEQUAL . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 67

state 44

    (26) expression -> expression ET . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 68

state 45

    (27) expression -> expression OU . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 69

state 46

    (36) expression -> MINUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            reduce using rule 36 (expression -> MINUS expression .)
    PLUS            reduce using rule 36 (expression -> MINUS expression .)
    MINUS           reduce using rule 36 (expression -> MINUS expression .)
    or              reduce using rule 36 (expression -> MINUS expression .)
    and             reduce using rule 36 (expression -> MINUS expression .)
    SUP             reduce using rule 36 (expression -> MINUS expression .)
    INFF            reduce using rule 36 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 36 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 36 (expression -> MINUS expression .)
    ET              reduce using rule 36 (expression -> MINUS expression .)
    OU              reduce using rule 36 (expression -> MINUS expression .)
    THEN            reduce using rule 36 (expression -> MINUS expression .)
    SEMI            reduce using rule 36 (expression -> MINUS expression .)
    NAME            reduce using rule 36 (expression -> MINUS expression .)
    WHILE           reduce using rule 36 (expression -> MINUS expression .)
    FOR             reduce using rule 36 (expression -> MINUS expression .)
    IF              reduce using rule 36 (expression -> MINUS expression .)
    PRINT           reduce using rule 36 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 36 (expression -> MINUS expression .)
    $end            reduce using rule 36 (expression -> MINUS expression .)
    TO              reduce using rule 36 (expression -> MINUS expression .)
    LACC            reduce using rule 36 (expression -> MINUS expression .)
    END             reduce using rule 36 (expression -> MINUS expression .)
    RPAREN          reduce using rule 36 (expression -> MINUS expression .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37

  ! TIMES           [ reduce using rule 36 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! or              [ shift and go to state 38 ]
  ! and             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! INFF            [ shift and go to state 41 ]
  ! ISEQUAL         [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! ET              [ shift and go to state 44 ]
  ! OU              [ shift and go to state 45 ]


state 47

    (37) expression -> LPAREN expression . RPAREN
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RPAREN          shift and go to state 70
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45


state 48

    (7) statement -> FOR LPAREN statement . TO NUMBER COMMA statement RPAREN RACC bloc LACC

    TO              shift and go to state 71


state 49

    (8) statement -> IF expression THEN . statement
    (9) statement -> IF expression THEN . RACC bloc LACC
    (10) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    RACC            shift and go to state 73
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 72

state 50

    (12) statement -> PRINT LPAREN expression . RPAREN SEMI
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45


state 51

    (13) statement -> PRINT STRING SEMI .

    NAME            reduce using rule 13 (statement -> PRINT STRING SEMI .)
    WHILE           reduce using rule 13 (statement -> PRINT STRING SEMI .)
    FOR             reduce using rule 13 (statement -> PRINT STRING SEMI .)
    IF              reduce using rule 13 (statement -> PRINT STRING SEMI .)
    PRINT           reduce using rule 13 (statement -> PRINT STRING SEMI .)
    FUNCTION        reduce using rule 13 (statement -> PRINT STRING SEMI .)
    $end            reduce using rule 13 (statement -> PRINT STRING SEMI .)
    TO              reduce using rule 13 (statement -> PRINT STRING SEMI .)
    LACC            reduce using rule 13 (statement -> PRINT STRING SEMI .)
    END             reduce using rule 13 (statement -> PRINT STRING SEMI .)
    RPAREN          reduce using rule 13 (statement -> PRINT STRING SEMI .)


state 52

    (14) statement -> FUNCTION NAME LPAREN . RPAREN START bloc END

    RPAREN          shift and go to state 75


state 53

    (4) statement -> NAME EQUALS expression SEMI .

    NAME            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FOR             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    IF              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    $end            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    TO              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LACC            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    END             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)


state 54

    (15) statement -> NAME LPAREN RPAREN SEMI .

    NAME            reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    TO              reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    LACC            reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    END             reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 15 (statement -> NAME LPAREN RPAREN SEMI .)


state 55

    (32) statement -> NAME PLUSEQ NUMBER SEMI .

    NAME            reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    WHILE           reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FOR             reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    IF              reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    PRINT           reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    $end            reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TO              reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LACC            reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    END             reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RPAREN          reduce using rule 32 (statement -> NAME PLUSEQ NUMBER SEMI .)


state 56

    (33) statement -> NAME MINEQ NUMBER SEMI .

    NAME            reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    WHILE           reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    FOR             reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    IF              reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    PRINT           reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    $end            reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    TO              reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    LACC            reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    END             reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)
    RPAREN          reduce using rule 33 (statement -> NAME MINEQ NUMBER SEMI .)


state 57

    (6) statement -> WHILE expression RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 76
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 58

    (16) expression -> expression PLUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            reduce using rule 16 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 16 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 16 (expression -> expression PLUS expression .)
    or              reduce using rule 16 (expression -> expression PLUS expression .)
    and             reduce using rule 16 (expression -> expression PLUS expression .)
    SUP             reduce using rule 16 (expression -> expression PLUS expression .)
    INFF            reduce using rule 16 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 16 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 16 (expression -> expression PLUS expression .)
    ET              reduce using rule 16 (expression -> expression PLUS expression .)
    OU              reduce using rule 16 (expression -> expression PLUS expression .)
    THEN            reduce using rule 16 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 16 (expression -> expression PLUS expression .)
    NAME            reduce using rule 16 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 16 (expression -> expression PLUS expression .)
    FOR             reduce using rule 16 (expression -> expression PLUS expression .)
    IF              reduce using rule 16 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 16 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 16 (expression -> expression PLUS expression .)
    $end            reduce using rule 16 (expression -> expression PLUS expression .)
    TO              reduce using rule 16 (expression -> expression PLUS expression .)
    LACC            reduce using rule 16 (expression -> expression PLUS expression .)
    END             reduce using rule 16 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37

  ! TIMES           [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! or              [ shift and go to state 38 ]
  ! and             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! INFF            [ shift and go to state 41 ]
  ! ISEQUAL         [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! ET              [ shift and go to state 44 ]
  ! OU              [ shift and go to state 45 ]


state 59

    (17) expression -> expression MINUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            reduce using rule 17 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 17 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 17 (expression -> expression MINUS expression .)
    or              reduce using rule 17 (expression -> expression MINUS expression .)
    and             reduce using rule 17 (expression -> expression MINUS expression .)
    SUP             reduce using rule 17 (expression -> expression MINUS expression .)
    INFF            reduce using rule 17 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 17 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 17 (expression -> expression MINUS expression .)
    ET              reduce using rule 17 (expression -> expression MINUS expression .)
    OU              reduce using rule 17 (expression -> expression MINUS expression .)
    THEN            reduce using rule 17 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 17 (expression -> expression MINUS expression .)
    NAME            reduce using rule 17 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 17 (expression -> expression MINUS expression .)
    FOR             reduce using rule 17 (expression -> expression MINUS expression .)
    IF              reduce using rule 17 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 17 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 17 (expression -> expression MINUS expression .)
    $end            reduce using rule 17 (expression -> expression MINUS expression .)
    TO              reduce using rule 17 (expression -> expression MINUS expression .)
    LACC            reduce using rule 17 (expression -> expression MINUS expression .)
    END             reduce using rule 17 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37

  ! TIMES           [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! or              [ shift and go to state 38 ]
  ! and             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! INFF            [ shift and go to state 41 ]
  ! ISEQUAL         [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! ET              [ shift and go to state 44 ]
  ! OU              [ shift and go to state 45 ]


state 60

    (18) expression -> expression TIMES expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            reduce using rule 18 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 18 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 18 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 18 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 18 (expression -> expression TIMES expression .)
    or              reduce using rule 18 (expression -> expression TIMES expression .)
    and             reduce using rule 18 (expression -> expression TIMES expression .)
    SUP             reduce using rule 18 (expression -> expression TIMES expression .)
    INFF            reduce using rule 18 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 18 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 18 (expression -> expression TIMES expression .)
    ET              reduce using rule 18 (expression -> expression TIMES expression .)
    OU              reduce using rule 18 (expression -> expression TIMES expression .)
    THEN            reduce using rule 18 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 18 (expression -> expression TIMES expression .)
    NAME            reduce using rule 18 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 18 (expression -> expression TIMES expression .)
    FOR             reduce using rule 18 (expression -> expression TIMES expression .)
    IF              reduce using rule 18 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 18 (expression -> expression TIMES expression .)
    FUNCTION        reduce using rule 18 (expression -> expression TIMES expression .)
    $end            reduce using rule 18 (expression -> expression TIMES expression .)
    TO              reduce using rule 18 (expression -> expression TIMES expression .)
    LACC            reduce using rule 18 (expression -> expression TIMES expression .)
    END             reduce using rule 18 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 18 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! TIMES           [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 37 ]
  ! or              [ shift and go to state 38 ]
  ! and             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! INFF            [ shift and go to state 41 ]
  ! ISEQUAL         [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! ET              [ shift and go to state 44 ]
  ! OU              [ shift and go to state 45 ]


state 61

    (19) expression -> expression DIVIDE expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            reduce using rule 19 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 19 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 19 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 19 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 19 (expression -> expression DIVIDE expression .)
    or              reduce using rule 19 (expression -> expression DIVIDE expression .)
    and             reduce using rule 19 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 19 (expression -> expression DIVIDE expression .)
    INFF            reduce using rule 19 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 19 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 19 (expression -> expression DIVIDE expression .)
    ET              reduce using rule 19 (expression -> expression DIVIDE expression .)
    OU              reduce using rule 19 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 19 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 19 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 19 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 19 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 19 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 19 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 19 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 19 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 19 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 19 (expression -> expression DIVIDE expression .)
    LACC            reduce using rule 19 (expression -> expression DIVIDE expression .)
    END             reduce using rule 19 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 19 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! TIMES           [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 37 ]
  ! or              [ shift and go to state 38 ]
  ! and             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! INFF            [ shift and go to state 41 ]
  ! ISEQUAL         [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! ET              [ shift and go to state 44 ]
  ! OU              [ shift and go to state 45 ]


state 62

    (20) expression -> expression or expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            reduce using rule 20 (expression -> expression or expression .)
    or              reduce using rule 20 (expression -> expression or expression .)
    INFF            reduce using rule 20 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 20 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 20 (expression -> expression or expression .)
    ET              reduce using rule 20 (expression -> expression or expression .)
    OU              reduce using rule 20 (expression -> expression or expression .)
    THEN            reduce using rule 20 (expression -> expression or expression .)
    SEMI            reduce using rule 20 (expression -> expression or expression .)
    NAME            reduce using rule 20 (expression -> expression or expression .)
    WHILE           reduce using rule 20 (expression -> expression or expression .)
    FOR             reduce using rule 20 (expression -> expression or expression .)
    IF              reduce using rule 20 (expression -> expression or expression .)
    PRINT           reduce using rule 20 (expression -> expression or expression .)
    FUNCTION        reduce using rule 20 (expression -> expression or expression .)
    $end            reduce using rule 20 (expression -> expression or expression .)
    TO              reduce using rule 20 (expression -> expression or expression .)
    LACC            reduce using rule 20 (expression -> expression or expression .)
    END             reduce using rule 20 (expression -> expression or expression .)
    RPAREN          reduce using rule 20 (expression -> expression or expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    and             shift and go to state 39
    SUP             shift and go to state 40

  ! PLUS            [ reduce using rule 20 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 20 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 20 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 38 ]
  ! INFF            [ shift and go to state 41 ]
  ! ISEQUAL         [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! ET              [ shift and go to state 44 ]
  ! OU              [ shift and go to state 45 ]


state 63

    (21) expression -> expression and expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            reduce using rule 21 (expression -> expression and expression .)
    or              reduce using rule 21 (expression -> expression and expression .)
    and             reduce using rule 21 (expression -> expression and expression .)
    INFF            reduce using rule 21 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 21 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 21 (expression -> expression and expression .)
    ET              reduce using rule 21 (expression -> expression and expression .)
    OU              reduce using rule 21 (expression -> expression and expression .)
    THEN            reduce using rule 21 (expression -> expression and expression .)
    SEMI            reduce using rule 21 (expression -> expression and expression .)
    NAME            reduce using rule 21 (expression -> expression and expression .)
    WHILE           reduce using rule 21 (expression -> expression and expression .)
    FOR             reduce using rule 21 (expression -> expression and expression .)
    IF              reduce using rule 21 (expression -> expression and expression .)
    PRINT           reduce using rule 21 (expression -> expression and expression .)
    FUNCTION        reduce using rule 21 (expression -> expression and expression .)
    $end            reduce using rule 21 (expression -> expression and expression .)
    TO              reduce using rule 21 (expression -> expression and expression .)
    LACC            reduce using rule 21 (expression -> expression and expression .)
    END             reduce using rule 21 (expression -> expression and expression .)
    RPAREN          reduce using rule 21 (expression -> expression and expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    SUP             shift and go to state 40

  ! PLUS            [ reduce using rule 21 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 21 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 38 ]
  ! and             [ shift and go to state 39 ]
  ! INFF            [ shift and go to state 41 ]
  ! ISEQUAL         [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! ET              [ shift and go to state 44 ]
  ! OU              [ shift and go to state 45 ]


state 64

    (22) expression -> expression SUP expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    RACC            reduce using rule 22 (expression -> expression SUP expression .)
    or              reduce using rule 22 (expression -> expression SUP expression .)
    and             reduce using rule 22 (expression -> expression SUP expression .)
    SUP             reduce using rule 22 (expression -> expression SUP expression .)
    INFF            reduce using rule 22 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 22 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 22 (expression -> expression SUP expression .)
    ET              reduce using rule 22 (expression -> expression SUP expression .)
    OU              reduce using rule 22 (expression -> expression SUP expression .)
    THEN            reduce using rule 22 (expression -> expression SUP expression .)
    SEMI            reduce using rule 22 (expression -> expression SUP expression .)
    NAME            reduce using rule 22 (expression -> expression SUP expression .)
    WHILE           reduce using rule 22 (expression -> expression SUP expression .)
    FOR             reduce using rule 22 (expression -> expression SUP expression .)
    IF              reduce using rule 22 (expression -> expression SUP expression .)
    PRINT           reduce using rule 22 (expression -> expression SUP expression .)
    FUNCTION        reduce using rule 22 (expression -> expression SUP expression .)
    $end            reduce using rule 22 (expression -> expression SUP expression .)
    TO              reduce using rule 22 (expression -> expression SUP expression .)
    LACC            reduce using rule 22 (expression -> expression SUP expression .)
    END             reduce using rule 22 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 22 (expression -> expression SUP expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37

  ! PLUS            [ reduce using rule 22 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 38 ]
  ! and             [ shift and go to state 39 ]
  ! SUP             [ shift and go to state 40 ]
  ! INFF            [ shift and go to state 41 ]
  ! ISEQUAL         [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! ET              [ shift and go to state 44 ]
  ! OU              [ shift and go to state 45 ]


state 65

    (23) expression -> expression INFF expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 23 (expression -> expression INFF expression .)
    THEN            reduce using rule 23 (expression -> expression INFF expression .)
    SEMI            reduce using rule 23 (expression -> expression INFF expression .)
    NAME            reduce using rule 23 (expression -> expression INFF expression .)
    WHILE           reduce using rule 23 (expression -> expression INFF expression .)
    FOR             reduce using rule 23 (expression -> expression INFF expression .)
    IF              reduce using rule 23 (expression -> expression INFF expression .)
    PRINT           reduce using rule 23 (expression -> expression INFF expression .)
    FUNCTION        reduce using rule 23 (expression -> expression INFF expression .)
    $end            reduce using rule 23 (expression -> expression INFF expression .)
    TO              reduce using rule 23 (expression -> expression INFF expression .)
    LACC            reduce using rule 23 (expression -> expression INFF expression .)
    END             reduce using rule 23 (expression -> expression INFF expression .)
    RPAREN          reduce using rule 23 (expression -> expression INFF expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45

  ! PLUS            [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 23 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 23 (expression -> expression INFF expression .) ]


state 66

    (24) expression -> expression ISEQUAL expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 24 (expression -> expression ISEQUAL expression .)
    THEN            reduce using rule 24 (expression -> expression ISEQUAL expression .)
    SEMI            reduce using rule 24 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 24 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 24 (expression -> expression ISEQUAL expression .)
    FOR             reduce using rule 24 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 24 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 24 (expression -> expression ISEQUAL expression .)
    FUNCTION        reduce using rule 24 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 24 (expression -> expression ISEQUAL expression .)
    TO              reduce using rule 24 (expression -> expression ISEQUAL expression .)
    LACC            reduce using rule 24 (expression -> expression ISEQUAL expression .)
    END             reduce using rule 24 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 24 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45

  ! PLUS            [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! or              [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! and             [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! SUP             [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! INFF            [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! ET              [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]
  ! OU              [ reduce using rule 24 (expression -> expression ISEQUAL expression .) ]


state 67

    (25) expression -> expression NOTEQUAL expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    THEN            reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    SEMI            reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    FUNCTION        reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    TO              reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    LACC            reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    END             reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 25 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45

  ! PLUS            [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! or              [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! and             [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! SUP             [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! INFF            [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! ET              [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]
  ! OU              [ reduce using rule 25 (expression -> expression NOTEQUAL expression .) ]


state 68

    (26) expression -> expression ET expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 26 (expression -> expression ET expression .)
    THEN            reduce using rule 26 (expression -> expression ET expression .)
    SEMI            reduce using rule 26 (expression -> expression ET expression .)
    NAME            reduce using rule 26 (expression -> expression ET expression .)
    WHILE           reduce using rule 26 (expression -> expression ET expression .)
    FOR             reduce using rule 26 (expression -> expression ET expression .)
    IF              reduce using rule 26 (expression -> expression ET expression .)
    PRINT           reduce using rule 26 (expression -> expression ET expression .)
    FUNCTION        reduce using rule 26 (expression -> expression ET expression .)
    $end            reduce using rule 26 (expression -> expression ET expression .)
    TO              reduce using rule 26 (expression -> expression ET expression .)
    LACC            reduce using rule 26 (expression -> expression ET expression .)
    END             reduce using rule 26 (expression -> expression ET expression .)
    RPAREN          reduce using rule 26 (expression -> expression ET expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45

  ! PLUS            [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! or              [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! and             [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! SUP             [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! INFF            [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! ISEQUAL         [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! NOTEQUAL        [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! ET              [ reduce using rule 26 (expression -> expression ET expression .) ]
  ! OU              [ reduce using rule 26 (expression -> expression ET expression .) ]


state 69

    (27) expression -> expression OU expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 27 (expression -> expression OU expression .)
    THEN            reduce using rule 27 (expression -> expression OU expression .)
    SEMI            reduce using rule 27 (expression -> expression OU expression .)
    NAME            reduce using rule 27 (expression -> expression OU expression .)
    WHILE           reduce using rule 27 (expression -> expression OU expression .)
    FOR             reduce using rule 27 (expression -> expression OU expression .)
    IF              reduce using rule 27 (expression -> expression OU expression .)
    PRINT           reduce using rule 27 (expression -> expression OU expression .)
    FUNCTION        reduce using rule 27 (expression -> expression OU expression .)
    $end            reduce using rule 27 (expression -> expression OU expression .)
    TO              reduce using rule 27 (expression -> expression OU expression .)
    LACC            reduce using rule 27 (expression -> expression OU expression .)
    END             reduce using rule 27 (expression -> expression OU expression .)
    RPAREN          reduce using rule 27 (expression -> expression OU expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45

  ! PLUS            [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! or              [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! and             [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! SUP             [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! INFF            [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! ISEQUAL         [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! NOTEQUAL        [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! ET              [ reduce using rule 27 (expression -> expression OU expression .) ]
  ! OU              [ reduce using rule 27 (expression -> expression OU expression .) ]


state 70

    (37) expression -> LPAREN expression RPAREN .

    RACC            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    INFF            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    ET              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    OU              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LACC            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 37 (expression -> LPAREN expression RPAREN .)


state 71

    (7) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN RACC bloc LACC

    NUMBER          shift and go to state 77


state 72

    (8) statement -> IF expression THEN statement .

    NAME            reduce using rule 8 (statement -> IF expression THEN statement .)
    WHILE           reduce using rule 8 (statement -> IF expression THEN statement .)
    FOR             reduce using rule 8 (statement -> IF expression THEN statement .)
    IF              reduce using rule 8 (statement -> IF expression THEN statement .)
    PRINT           reduce using rule 8 (statement -> IF expression THEN statement .)
    FUNCTION        reduce using rule 8 (statement -> IF expression THEN statement .)
    $end            reduce using rule 8 (statement -> IF expression THEN statement .)
    TO              reduce using rule 8 (statement -> IF expression THEN statement .)
    LACC            reduce using rule 8 (statement -> IF expression THEN statement .)
    END             reduce using rule 8 (statement -> IF expression THEN statement .)
    RPAREN          reduce using rule 8 (statement -> IF expression THEN statement .)


state 73

    (9) statement -> IF expression THEN RACC . bloc LACC
    (10) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 78
    statement                      shift and go to state 3

state 74

    (12) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 79


state 75

    (14) statement -> FUNCTION NAME LPAREN RPAREN . START bloc END

    START           shift and go to state 80


state 76

    (6) statement -> WHILE expression RACC bloc LACC .

    NAME            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    WHILE           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FOR             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    IF              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    PRINT           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FUNCTION        reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    $end            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    TO              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    LACC            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    END             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    RPAREN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)


state 77

    (7) statement -> FOR LPAREN statement TO NUMBER . COMMA statement RPAREN RACC bloc LACC

    COMMA           shift and go to state 81


state 78

    (9) statement -> IF expression THEN RACC bloc . LACC
    (10) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 82
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 79

    (12) statement -> PRINT LPAREN expression RPAREN SEMI .

    NAME            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FUNCTION        reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TO              reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LACC            reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    END             reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 12 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 80

    (14) statement -> FUNCTION NAME LPAREN RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 83
    statement                      shift and go to state 3

state 81

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA . statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 84

state 82

    (9) statement -> IF expression THEN RACC bloc LACC .
    (10) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    NAME            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    WHILE           reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    FOR             reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    IF              reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    PRINT           reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    FUNCTION        reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    $end            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    TO              reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    LACC            reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    END             reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    RPAREN          reduce using rule 9 (statement -> IF expression THEN RACC bloc LACC .)
    ELSEIF          shift and go to state 85
    ELSE            shift and go to state 86


state 83

    (14) statement -> FUNCTION NAME LPAREN RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    END             shift and go to state 87
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 84

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement . RPAREN RACC bloc LACC

    RPAREN          shift and go to state 88


state 85

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression or expression
    (21) expression -> . expression and expression
    (22) expression -> . expression SUP expression
    (23) expression -> . expression INFF expression
    (24) expression -> . expression ISEQUAL expression
    (25) expression -> . expression NOTEQUAL expression
    (26) expression -> . expression ET expression
    (27) expression -> . expression OU expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . NUMBER
    (39) expression -> . NAME

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 19
    NUMBER          shift and go to state 20
    NAME            shift and go to state 21

    expression                     shift and go to state 89

state 86

    (11) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 90


state 87

    (14) statement -> FUNCTION NAME LPAREN RPAREN START bloc END .

    NAME            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    WHILE           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FOR             reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    IF              reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    PRINT           reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FUNCTION        reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    $end            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TO              reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LACC            reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    END             reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RPAREN          reduce using rule 14 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)


state 88

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN . RACC bloc LACC

    RACC            shift and go to state 91


state 89

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . or expression
    (21) expression -> expression . and expression
    (22) expression -> expression . SUP expression
    (23) expression -> expression . INFF expression
    (24) expression -> expression . ISEQUAL expression
    (25) expression -> expression . NOTEQUAL expression
    (26) expression -> expression . ET expression
    (27) expression -> expression . OU expression

    THEN            shift and go to state 92
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    or              shift and go to state 38
    and             shift and go to state 39
    SUP             shift and go to state 40
    INFF            shift and go to state 41
    ISEQUAL         shift and go to state 42
    NOTEQUAL        shift and go to state 43
    ET              shift and go to state 44
    OU              shift and go to state 45


state 90

    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 93
    statement                      shift and go to state 3

state 91

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 3
    bloc                           shift and go to state 94

state 92

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC

    RACC            shift and go to state 95


state 93

    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 96
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 94

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 97
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 95

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 98
    statement                      shift and go to state 3

state 96

    (11) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)


state 97

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .

    NAME            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    WHILE           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FOR             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    IF              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    PRINT           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FUNCTION        reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    $end            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    TO              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LACC            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    END             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)


state 98

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 99
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 99

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 100


state 100

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 101


state 101

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    bloc                           shift and go to state 102
    statement                      shift and go to state 3

state 102

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . IF expression THEN statement
    (9) statement -> . IF expression THEN RACC bloc LACC
    (10) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . PRINT LPAREN expression RPAREN SEMI
    (13) statement -> . PRINT STRING SEMI
    (14) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (15) statement -> . NAME LPAREN RPAREN SEMI
    (28) statement -> . NAME INCR SEMI
    (29) statement -> . NAME DECR SEMI
    (30) statement -> . NAME INCR
    (31) statement -> . NAME DECR
    (32) statement -> . NAME PLUSEQ NUMBER SEMI
    (33) statement -> . NAME MINEQ NUMBER SEMI
    (34) statement -> . NAME PLUSEQ NUMBER
    (35) statement -> . NAME MINEQ NUMBER

    LACC            shift and go to state 103
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    FOR             shift and go to state 6
    IF              shift and go to state 7
    PRINT           shift and go to state 8
    FUNCTION        shift and go to state 9

    statement                      shift and go to state 10

state 103

    (10) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for or in state 65 resolved as shift
WARNING: shift/reduce conflict for and in state 65 resolved as shift
WARNING: shift/reduce conflict for SUP in state 65 resolved as shift
WARNING: shift/reduce conflict for INFF in state 65 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for ET in state 65 resolved as shift
WARNING: shift/reduce conflict for OU in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for or in state 66 resolved as shift
WARNING: shift/reduce conflict for and in state 66 resolved as shift
WARNING: shift/reduce conflict for SUP in state 66 resolved as shift
WARNING: shift/reduce conflict for INFF in state 66 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for ET in state 66 resolved as shift
WARNING: shift/reduce conflict for OU in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for or in state 67 resolved as shift
WARNING: shift/reduce conflict for and in state 67 resolved as shift
WARNING: shift/reduce conflict for SUP in state 67 resolved as shift
WARNING: shift/reduce conflict for INFF in state 67 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for ET in state 67 resolved as shift
WARNING: shift/reduce conflict for OU in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for or in state 68 resolved as shift
WARNING: shift/reduce conflict for and in state 68 resolved as shift
WARNING: shift/reduce conflict for SUP in state 68 resolved as shift
WARNING: shift/reduce conflict for INFF in state 68 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for ET in state 68 resolved as shift
WARNING: shift/reduce conflict for OU in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for or in state 69 resolved as shift
WARNING: shift/reduce conflict for and in state 69 resolved as shift
WARNING: shift/reduce conflict for SUP in state 69 resolved as shift
WARNING: shift/reduce conflict for INFF in state 69 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for ET in state 69 resolved as shift
WARNING: shift/reduce conflict for OU in state 69 resolved as shift
