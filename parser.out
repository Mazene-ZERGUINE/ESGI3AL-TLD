Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> NAME EQUALS expression SEMI
Rule 5     statement -> NAME EQUALS expression
Rule 6     statement -> WHILE expression RACC bloc LACC
Rule 7     statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
Rule 8     statement -> COMMENTS
Rule 9     statement -> IF expression THEN statement
Rule 10    statement -> IF expression THEN RACC bloc LACC
Rule 11    statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 12    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 13    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 14    statement -> PRINT STRING SEMI
Rule 15    print_params -> expression
Rule 16    print_params -> expression COMMA print_params
Rule 17    statement -> PRINT LPAREN print_params RPAREN SEMI
Rule 18    params -> NAME
Rule 19    params -> NAME COMMA params
Rule 20    statement -> expression INFF statement
Rule 21    statement -> expression SUP statement
Rule 22    statement -> expression and statement
Rule 23    statement -> expression or statement
Rule 24    statement -> expression SEMI
Rule 25    statement -> RETURN expression SEMI
Rule 26    statement -> FUNCTION NAME LPAREN RPAREN START bloc END
Rule 27    statement -> FUNCTION NAME LPAREN params RPAREN START bloc END
Rule 28    statement -> NAME LPAREN RPAREN SEMI
Rule 29    statement -> NAME LPAREN param_call RPAREN SEMI
Rule 30    param_call -> expression
Rule 31    param_call -> expression COMMA param_call
Rule 32    statement -> DEFINE NAME EQUALS expression SEMI
Rule 33    expression -> expression PLUS expression
Rule 34    expression -> expression MINUS expression
Rule 35    expression -> expression TIMES expression
Rule 36    expression -> expression DIVIDE expression
Rule 37    expression -> expression or expression
Rule 38    expression -> expression and expression
Rule 39    expression -> expression SUP expression
Rule 40    expression -> expression INFF expression
Rule 41    expression -> expression ISEQUAL expression
Rule 42    expression -> expression NOTEQUAL expression
Rule 43    expression -> expression ET expression
Rule 44    expression -> expression OU expression
Rule 45    statement -> NAME INCR SEMI
Rule 46    statement -> NAME DECR SEMI
Rule 47    statement -> NAME INCR
Rule 48    statement -> NAME DECR
Rule 49    statement -> NAME PLUSEQ NUMBER SEMI
Rule 50    statement -> NAME MINEQ NUMBER SEMI
Rule 51    statement -> NAME PLUSEQ NUMBER
Rule 52    statement -> NAME MINEQ NUMBER
Rule 53    expression -> MINUS expression
Rule 54    expression -> LPAREN expression RPAREN
Rule 55    expression -> NUMBER
Rule 56    expression -> STRING
Rule 57    expression -> NAME

Terminals, with rules where they appear

COMMA                : 7 16 19 31
COMMENT              : 
COMMENTS             : 8
DECR                 : 46 48
DEFINE               : 32
DIVIDE               : 36
ELSE                 : 11 12
ELSEIF               : 11
END                  : 26 27
EQUALS               : 4 5 32
ET                   : 43
FOR                  : 7
FUNCTION             : 26 27
IF                   : 9 10 11 12
INCR                 : 45 47
INFF                 : 20 40
ISEQUAL              : 41
LACC                 : 6 7 10 11 11 11 12 12
LPAREN               : 7 13 17 26 27 28 29 54
MINEQ                : 50 52
MINUS                : 34 53
NAME                 : 4 5 18 19 26 27 28 29 32 45 46 47 48 49 50 51 52 57
NOTEQUAL             : 42
NUMBER               : 7 49 50 51 52 55
OU                   : 44
PLUS                 : 33
PLUSEQ               : 49 51
PRINT                : 13 14 17
RACC                 : 6 7 10 11 11 11 12 12
RETURN               : 25
RPAREN               : 7 13 17 26 27 28 29 54
SEMI                 : 4 13 14 17 24 25 28 29 32 45 46 49 50
START                : 26 27
STRING               : 14 56
SUP                  : 21 39
THEN                 : 9 10 11 11 12
TIMES                : 35
TO                   : 7
WHILE                : 6
and                  : 22 38
error                : 
or                   : 23 37

Nonterminals, with rules where they appear

bloc                 : 1 2 6 7 10 11 11 11 12 12 26 27
expression           : 4 5 6 9 10 11 11 12 13 15 16 20 21 22 23 24 25 30 31 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 53 54
param_call           : 29 31
params               : 19 27
print_params         : 16 17
start                : 0
statement            : 2 3 7 7 9 20 21 22 23

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    statement                      shift and go to state 18
    expression                     shift and go to state 5

state 3

    (3) bloc -> statement .

    NAME            reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    COMMENTS        reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    RETURN          reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    DEFINE          reduce using rule 3 (bloc -> statement .)
    MINUS           reduce using rule 3 (bloc -> statement .)
    LPAREN          reduce using rule 3 (bloc -> statement .)
    NUMBER          reduce using rule 3 (bloc -> statement .)
    STRING          reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    LACC            reduce using rule 3 (bloc -> statement .)
    END             reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> NAME . EQUALS expression SEMI
    (5) statement -> NAME . EQUALS expression
    (28) statement -> NAME . LPAREN RPAREN SEMI
    (29) statement -> NAME . LPAREN param_call RPAREN SEMI
    (45) statement -> NAME . INCR SEMI
    (46) statement -> NAME . DECR SEMI
    (47) statement -> NAME . INCR
    (48) statement -> NAME . DECR
    (49) statement -> NAME . PLUSEQ NUMBER SEMI
    (50) statement -> NAME . MINEQ NUMBER SEMI
    (51) statement -> NAME . PLUSEQ NUMBER
    (52) statement -> NAME . MINEQ NUMBER
    (57) expression -> NAME .

    EQUALS          shift and go to state 19
    LPAREN          shift and go to state 20
    INCR            shift and go to state 21
    DECR            shift and go to state 22
    PLUSEQ          shift and go to state 23
    MINEQ           shift and go to state 24
    INFF            reduce using rule 57 (expression -> NAME .)
    SUP             reduce using rule 57 (expression -> NAME .)
    and             reduce using rule 57 (expression -> NAME .)
    or              reduce using rule 57 (expression -> NAME .)
    SEMI            reduce using rule 57 (expression -> NAME .)
    PLUS            reduce using rule 57 (expression -> NAME .)
    MINUS           reduce using rule 57 (expression -> NAME .)
    TIMES           reduce using rule 57 (expression -> NAME .)
    DIVIDE          reduce using rule 57 (expression -> NAME .)
    ISEQUAL         reduce using rule 57 (expression -> NAME .)
    NOTEQUAL        reduce using rule 57 (expression -> NAME .)
    ET              reduce using rule 57 (expression -> NAME .)
    OU              reduce using rule 57 (expression -> NAME .)


state 5

    (20) statement -> expression . INFF statement
    (21) statement -> expression . SUP statement
    (22) statement -> expression . and statement
    (23) statement -> expression . or statement
    (24) statement -> expression . SEMI
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            shift and go to state 25
    SUP             shift and go to state 26
    and             shift and go to state 27
    or              shift and go to state 28
    SEMI            shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 6

    (6) statement -> WHILE . expression RACC bloc LACC
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 38

state 7

    (7) statement -> FOR . LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC

    LPAREN          shift and go to state 40


state 8

    (54) expression -> LPAREN . expression RPAREN
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 41

state 9

    (55) expression -> NUMBER .

    INFF            reduce using rule 55 (expression -> NUMBER .)
    SUP             reduce using rule 55 (expression -> NUMBER .)
    and             reduce using rule 55 (expression -> NUMBER .)
    or              reduce using rule 55 (expression -> NUMBER .)
    SEMI            reduce using rule 55 (expression -> NUMBER .)
    PLUS            reduce using rule 55 (expression -> NUMBER .)
    MINUS           reduce using rule 55 (expression -> NUMBER .)
    TIMES           reduce using rule 55 (expression -> NUMBER .)
    DIVIDE          reduce using rule 55 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 55 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 55 (expression -> NUMBER .)
    ET              reduce using rule 55 (expression -> NUMBER .)
    OU              reduce using rule 55 (expression -> NUMBER .)
    RACC            reduce using rule 55 (expression -> NUMBER .)
    RPAREN          reduce using rule 55 (expression -> NUMBER .)
    THEN            reduce using rule 55 (expression -> NUMBER .)
    NAME            reduce using rule 55 (expression -> NUMBER .)
    WHILE           reduce using rule 55 (expression -> NUMBER .)
    FOR             reduce using rule 55 (expression -> NUMBER .)
    COMMENTS        reduce using rule 55 (expression -> NUMBER .)
    IF              reduce using rule 55 (expression -> NUMBER .)
    PRINT           reduce using rule 55 (expression -> NUMBER .)
    RETURN          reduce using rule 55 (expression -> NUMBER .)
    FUNCTION        reduce using rule 55 (expression -> NUMBER .)
    DEFINE          reduce using rule 55 (expression -> NUMBER .)
    LPAREN          reduce using rule 55 (expression -> NUMBER .)
    NUMBER          reduce using rule 55 (expression -> NUMBER .)
    STRING          reduce using rule 55 (expression -> NUMBER .)
    $end            reduce using rule 55 (expression -> NUMBER .)
    TO              reduce using rule 55 (expression -> NUMBER .)
    LACC            reduce using rule 55 (expression -> NUMBER .)
    END             reduce using rule 55 (expression -> NUMBER .)
    COMMA           reduce using rule 55 (expression -> NUMBER .)


state 10

    (8) statement -> COMMENTS .

    NAME            reduce using rule 8 (statement -> COMMENTS .)
    WHILE           reduce using rule 8 (statement -> COMMENTS .)
    FOR             reduce using rule 8 (statement -> COMMENTS .)
    COMMENTS        reduce using rule 8 (statement -> COMMENTS .)
    IF              reduce using rule 8 (statement -> COMMENTS .)
    PRINT           reduce using rule 8 (statement -> COMMENTS .)
    RETURN          reduce using rule 8 (statement -> COMMENTS .)
    FUNCTION        reduce using rule 8 (statement -> COMMENTS .)
    DEFINE          reduce using rule 8 (statement -> COMMENTS .)
    MINUS           reduce using rule 8 (statement -> COMMENTS .)
    LPAREN          reduce using rule 8 (statement -> COMMENTS .)
    NUMBER          reduce using rule 8 (statement -> COMMENTS .)
    STRING          reduce using rule 8 (statement -> COMMENTS .)
    $end            reduce using rule 8 (statement -> COMMENTS .)
    TO              reduce using rule 8 (statement -> COMMENTS .)
    LACC            reduce using rule 8 (statement -> COMMENTS .)
    END             reduce using rule 8 (statement -> COMMENTS .)
    RPAREN          reduce using rule 8 (statement -> COMMENTS .)


state 11

    (9) statement -> IF . expression THEN statement
    (10) statement -> IF . expression THEN RACC bloc LACC
    (11) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 42

state 12

    (13) statement -> PRINT . LPAREN expression RPAREN SEMI
    (14) statement -> PRINT . STRING SEMI
    (17) statement -> PRINT . LPAREN print_params RPAREN SEMI

    LPAREN          shift and go to state 43
    STRING          shift and go to state 44


state 13

    (56) expression -> STRING .

    INFF            reduce using rule 56 (expression -> STRING .)
    SUP             reduce using rule 56 (expression -> STRING .)
    and             reduce using rule 56 (expression -> STRING .)
    or              reduce using rule 56 (expression -> STRING .)
    SEMI            reduce using rule 56 (expression -> STRING .)
    PLUS            reduce using rule 56 (expression -> STRING .)
    MINUS           reduce using rule 56 (expression -> STRING .)
    TIMES           reduce using rule 56 (expression -> STRING .)
    DIVIDE          reduce using rule 56 (expression -> STRING .)
    ISEQUAL         reduce using rule 56 (expression -> STRING .)
    NOTEQUAL        reduce using rule 56 (expression -> STRING .)
    ET              reduce using rule 56 (expression -> STRING .)
    OU              reduce using rule 56 (expression -> STRING .)
    RACC            reduce using rule 56 (expression -> STRING .)
    RPAREN          reduce using rule 56 (expression -> STRING .)
    THEN            reduce using rule 56 (expression -> STRING .)
    NAME            reduce using rule 56 (expression -> STRING .)
    WHILE           reduce using rule 56 (expression -> STRING .)
    FOR             reduce using rule 56 (expression -> STRING .)
    COMMENTS        reduce using rule 56 (expression -> STRING .)
    IF              reduce using rule 56 (expression -> STRING .)
    PRINT           reduce using rule 56 (expression -> STRING .)
    RETURN          reduce using rule 56 (expression -> STRING .)
    FUNCTION        reduce using rule 56 (expression -> STRING .)
    DEFINE          reduce using rule 56 (expression -> STRING .)
    LPAREN          reduce using rule 56 (expression -> STRING .)
    NUMBER          reduce using rule 56 (expression -> STRING .)
    STRING          reduce using rule 56 (expression -> STRING .)
    $end            reduce using rule 56 (expression -> STRING .)
    TO              reduce using rule 56 (expression -> STRING .)
    LACC            reduce using rule 56 (expression -> STRING .)
    END             reduce using rule 56 (expression -> STRING .)
    COMMA           reduce using rule 56 (expression -> STRING .)


state 14

    (25) statement -> RETURN . expression SEMI
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 45

state 15

    (26) statement -> FUNCTION . NAME LPAREN RPAREN START bloc END
    (27) statement -> FUNCTION . NAME LPAREN params RPAREN START bloc END

    NAME            shift and go to state 46


state 16

    (32) statement -> DEFINE . NAME EQUALS expression SEMI

    NAME            shift and go to state 47


state 17

    (53) expression -> MINUS . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 48

state 18

    (2) bloc -> bloc statement .

    NAME            reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    COMMENTS        reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    RETURN          reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    DEFINE          reduce using rule 2 (bloc -> bloc statement .)
    MINUS           reduce using rule 2 (bloc -> bloc statement .)
    LPAREN          reduce using rule 2 (bloc -> bloc statement .)
    NUMBER          reduce using rule 2 (bloc -> bloc statement .)
    STRING          reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    LACC            reduce using rule 2 (bloc -> bloc statement .)
    END             reduce using rule 2 (bloc -> bloc statement .)


state 19

    (4) statement -> NAME EQUALS . expression SEMI
    (5) statement -> NAME EQUALS . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 49

state 20

    (28) statement -> NAME LPAREN . RPAREN SEMI
    (29) statement -> NAME LPAREN . param_call RPAREN SEMI
    (30) param_call -> . expression
    (31) param_call -> . expression COMMA param_call
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    RPAREN          shift and go to state 50
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    param_call                     shift and go to state 51
    expression                     shift and go to state 52

state 21

    (45) statement -> NAME INCR . SEMI
    (47) statement -> NAME INCR .

    SEMI            shift and go to state 53
    NAME            reduce using rule 47 (statement -> NAME INCR .)
    WHILE           reduce using rule 47 (statement -> NAME INCR .)
    FOR             reduce using rule 47 (statement -> NAME INCR .)
    COMMENTS        reduce using rule 47 (statement -> NAME INCR .)
    IF              reduce using rule 47 (statement -> NAME INCR .)
    PRINT           reduce using rule 47 (statement -> NAME INCR .)
    RETURN          reduce using rule 47 (statement -> NAME INCR .)
    FUNCTION        reduce using rule 47 (statement -> NAME INCR .)
    DEFINE          reduce using rule 47 (statement -> NAME INCR .)
    MINUS           reduce using rule 47 (statement -> NAME INCR .)
    LPAREN          reduce using rule 47 (statement -> NAME INCR .)
    NUMBER          reduce using rule 47 (statement -> NAME INCR .)
    STRING          reduce using rule 47 (statement -> NAME INCR .)
    $end            reduce using rule 47 (statement -> NAME INCR .)
    TO              reduce using rule 47 (statement -> NAME INCR .)
    LACC            reduce using rule 47 (statement -> NAME INCR .)
    END             reduce using rule 47 (statement -> NAME INCR .)
    RPAREN          reduce using rule 47 (statement -> NAME INCR .)


state 22

    (46) statement -> NAME DECR . SEMI
    (48) statement -> NAME DECR .

    SEMI            shift and go to state 54
    NAME            reduce using rule 48 (statement -> NAME DECR .)
    WHILE           reduce using rule 48 (statement -> NAME DECR .)
    FOR             reduce using rule 48 (statement -> NAME DECR .)
    COMMENTS        reduce using rule 48 (statement -> NAME DECR .)
    IF              reduce using rule 48 (statement -> NAME DECR .)
    PRINT           reduce using rule 48 (statement -> NAME DECR .)
    RETURN          reduce using rule 48 (statement -> NAME DECR .)
    FUNCTION        reduce using rule 48 (statement -> NAME DECR .)
    DEFINE          reduce using rule 48 (statement -> NAME DECR .)
    MINUS           reduce using rule 48 (statement -> NAME DECR .)
    LPAREN          reduce using rule 48 (statement -> NAME DECR .)
    NUMBER          reduce using rule 48 (statement -> NAME DECR .)
    STRING          reduce using rule 48 (statement -> NAME DECR .)
    $end            reduce using rule 48 (statement -> NAME DECR .)
    TO              reduce using rule 48 (statement -> NAME DECR .)
    LACC            reduce using rule 48 (statement -> NAME DECR .)
    END             reduce using rule 48 (statement -> NAME DECR .)
    RPAREN          reduce using rule 48 (statement -> NAME DECR .)


state 23

    (49) statement -> NAME PLUSEQ . NUMBER SEMI
    (51) statement -> NAME PLUSEQ . NUMBER

    NUMBER          shift and go to state 55


state 24

    (50) statement -> NAME MINEQ . NUMBER SEMI
    (52) statement -> NAME MINEQ . NUMBER

    NUMBER          shift and go to state 56


state 25

    (20) statement -> expression INFF . statement
    (40) expression -> expression INFF . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 57
    statement                      shift and go to state 58

state 26

    (21) statement -> expression SUP . statement
    (39) expression -> expression SUP . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 59
    statement                      shift and go to state 60

state 27

    (22) statement -> expression and . statement
    (38) expression -> expression and . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 61
    statement                      shift and go to state 62

state 28

    (23) statement -> expression or . statement
    (37) expression -> expression or . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 63
    statement                      shift and go to state 64

state 29

    (24) statement -> expression SEMI .

    NAME            reduce using rule 24 (statement -> expression SEMI .)
    WHILE           reduce using rule 24 (statement -> expression SEMI .)
    FOR             reduce using rule 24 (statement -> expression SEMI .)
    COMMENTS        reduce using rule 24 (statement -> expression SEMI .)
    IF              reduce using rule 24 (statement -> expression SEMI .)
    PRINT           reduce using rule 24 (statement -> expression SEMI .)
    RETURN          reduce using rule 24 (statement -> expression SEMI .)
    FUNCTION        reduce using rule 24 (statement -> expression SEMI .)
    DEFINE          reduce using rule 24 (statement -> expression SEMI .)
    MINUS           reduce using rule 24 (statement -> expression SEMI .)
    LPAREN          reduce using rule 24 (statement -> expression SEMI .)
    NUMBER          reduce using rule 24 (statement -> expression SEMI .)
    STRING          reduce using rule 24 (statement -> expression SEMI .)
    $end            reduce using rule 24 (statement -> expression SEMI .)
    TO              reduce using rule 24 (statement -> expression SEMI .)
    LACC            reduce using rule 24 (statement -> expression SEMI .)
    END             reduce using rule 24 (statement -> expression SEMI .)
    RPAREN          reduce using rule 24 (statement -> expression SEMI .)


state 30

    (33) expression -> expression PLUS . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 65

state 31

    (34) expression -> expression MINUS . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 66

state 32

    (35) expression -> expression TIMES . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 67

state 33

    (36) expression -> expression DIVIDE . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 68

state 34

    (41) expression -> expression ISEQUAL . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 69

state 35

    (42) expression -> expression NOTEQUAL . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 70

state 36

    (43) expression -> expression ET . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 71

state 37

    (44) expression -> expression OU . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 72

state 38

    (6) statement -> WHILE expression . RACC bloc LACC
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    RACC            shift and go to state 73
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 39

    (57) expression -> NAME .

    RACC            reduce using rule 57 (expression -> NAME .)
    PLUS            reduce using rule 57 (expression -> NAME .)
    MINUS           reduce using rule 57 (expression -> NAME .)
    TIMES           reduce using rule 57 (expression -> NAME .)
    DIVIDE          reduce using rule 57 (expression -> NAME .)
    or              reduce using rule 57 (expression -> NAME .)
    and             reduce using rule 57 (expression -> NAME .)
    SUP             reduce using rule 57 (expression -> NAME .)
    INFF            reduce using rule 57 (expression -> NAME .)
    ISEQUAL         reduce using rule 57 (expression -> NAME .)
    NOTEQUAL        reduce using rule 57 (expression -> NAME .)
    ET              reduce using rule 57 (expression -> NAME .)
    OU              reduce using rule 57 (expression -> NAME .)
    RPAREN          reduce using rule 57 (expression -> NAME .)
    THEN            reduce using rule 57 (expression -> NAME .)
    SEMI            reduce using rule 57 (expression -> NAME .)
    NAME            reduce using rule 57 (expression -> NAME .)
    WHILE           reduce using rule 57 (expression -> NAME .)
    FOR             reduce using rule 57 (expression -> NAME .)
    COMMENTS        reduce using rule 57 (expression -> NAME .)
    IF              reduce using rule 57 (expression -> NAME .)
    PRINT           reduce using rule 57 (expression -> NAME .)
    RETURN          reduce using rule 57 (expression -> NAME .)
    FUNCTION        reduce using rule 57 (expression -> NAME .)
    DEFINE          reduce using rule 57 (expression -> NAME .)
    LPAREN          reduce using rule 57 (expression -> NAME .)
    NUMBER          reduce using rule 57 (expression -> NAME .)
    STRING          reduce using rule 57 (expression -> NAME .)
    $end            reduce using rule 57 (expression -> NAME .)
    TO              reduce using rule 57 (expression -> NAME .)
    LACC            reduce using rule 57 (expression -> NAME .)
    END             reduce using rule 57 (expression -> NAME .)
    COMMA           reduce using rule 57 (expression -> NAME .)


state 40

    (7) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    statement                      shift and go to state 78
    expression                     shift and go to state 5

state 41

    (54) expression -> LPAREN expression . RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    RPAREN          shift and go to state 79
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 42

    (9) statement -> IF expression . THEN statement
    (10) statement -> IF expression . THEN RACC bloc LACC
    (11) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    THEN            shift and go to state 80
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 43

    (13) statement -> PRINT LPAREN . expression RPAREN SEMI
    (17) statement -> PRINT LPAREN . print_params RPAREN SEMI
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME
    (15) print_params -> . expression
    (16) print_params -> . expression COMMA print_params

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 81
    print_params                   shift and go to state 82

state 44

    (14) statement -> PRINT STRING . SEMI

    SEMI            shift and go to state 83


state 45

    (25) statement -> RETURN expression . SEMI
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    SEMI            shift and go to state 84
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 46

    (26) statement -> FUNCTION NAME . LPAREN RPAREN START bloc END
    (27) statement -> FUNCTION NAME . LPAREN params RPAREN START bloc END

    LPAREN          shift and go to state 85


state 47

    (32) statement -> DEFINE NAME . EQUALS expression SEMI

    EQUALS          shift and go to state 86


state 48

    (53) expression -> MINUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            reduce using rule 53 (expression -> MINUS expression .)
    SUP             reduce using rule 53 (expression -> MINUS expression .)
    and             reduce using rule 53 (expression -> MINUS expression .)
    or              reduce using rule 53 (expression -> MINUS expression .)
    SEMI            reduce using rule 53 (expression -> MINUS expression .)
    PLUS            reduce using rule 53 (expression -> MINUS expression .)
    MINUS           reduce using rule 53 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 53 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 53 (expression -> MINUS expression .)
    ET              reduce using rule 53 (expression -> MINUS expression .)
    OU              reduce using rule 53 (expression -> MINUS expression .)
    RACC            reduce using rule 53 (expression -> MINUS expression .)
    RPAREN          reduce using rule 53 (expression -> MINUS expression .)
    THEN            reduce using rule 53 (expression -> MINUS expression .)
    NAME            reduce using rule 53 (expression -> MINUS expression .)
    WHILE           reduce using rule 53 (expression -> MINUS expression .)
    FOR             reduce using rule 53 (expression -> MINUS expression .)
    COMMENTS        reduce using rule 53 (expression -> MINUS expression .)
    IF              reduce using rule 53 (expression -> MINUS expression .)
    PRINT           reduce using rule 53 (expression -> MINUS expression .)
    RETURN          reduce using rule 53 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 53 (expression -> MINUS expression .)
    DEFINE          reduce using rule 53 (expression -> MINUS expression .)
    LPAREN          reduce using rule 53 (expression -> MINUS expression .)
    NUMBER          reduce using rule 53 (expression -> MINUS expression .)
    STRING          reduce using rule 53 (expression -> MINUS expression .)
    $end            reduce using rule 53 (expression -> MINUS expression .)
    TO              reduce using rule 53 (expression -> MINUS expression .)
    LACC            reduce using rule 53 (expression -> MINUS expression .)
    END             reduce using rule 53 (expression -> MINUS expression .)
    COMMA           reduce using rule 53 (expression -> MINUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! TIMES           [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! or              [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! SUP             [ shift and go to state 76 ]
  ! INFF            [ shift and go to state 77 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 49

    (4) statement -> NAME EQUALS expression . SEMI
    (5) statement -> NAME EQUALS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    SEMI            shift and go to state 87
    NAME            reduce using rule 5 (statement -> NAME EQUALS expression .)
    WHILE           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FOR             reduce using rule 5 (statement -> NAME EQUALS expression .)
    COMMENTS        reduce using rule 5 (statement -> NAME EQUALS expression .)
    IF              reduce using rule 5 (statement -> NAME EQUALS expression .)
    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression .)
    RETURN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    FUNCTION        reduce using rule 5 (statement -> NAME EQUALS expression .)
    DEFINE          reduce using rule 5 (statement -> NAME EQUALS expression .)
    LPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    NUMBER          reduce using rule 5 (statement -> NAME EQUALS expression .)
    STRING          reduce using rule 5 (statement -> NAME EQUALS expression .)
    $end            reduce using rule 5 (statement -> NAME EQUALS expression .)
    TO              reduce using rule 5 (statement -> NAME EQUALS expression .)
    LACC            reduce using rule 5 (statement -> NAME EQUALS expression .)
    END             reduce using rule 5 (statement -> NAME EQUALS expression .)
    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! MINUS           [ reduce using rule 5 (statement -> NAME EQUALS expression .) ]


state 50

    (28) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 88


state 51

    (29) statement -> NAME LPAREN param_call . RPAREN SEMI

    RPAREN          shift and go to state 89


state 52

    (30) param_call -> expression .
    (31) param_call -> expression . COMMA param_call
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    RPAREN          reduce using rule 30 (param_call -> expression .)
    COMMA           shift and go to state 90
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 53

    (45) statement -> NAME INCR SEMI .

    NAME            reduce using rule 45 (statement -> NAME INCR SEMI .)
    WHILE           reduce using rule 45 (statement -> NAME INCR SEMI .)
    FOR             reduce using rule 45 (statement -> NAME INCR SEMI .)
    COMMENTS        reduce using rule 45 (statement -> NAME INCR SEMI .)
    IF              reduce using rule 45 (statement -> NAME INCR SEMI .)
    PRINT           reduce using rule 45 (statement -> NAME INCR SEMI .)
    RETURN          reduce using rule 45 (statement -> NAME INCR SEMI .)
    FUNCTION        reduce using rule 45 (statement -> NAME INCR SEMI .)
    DEFINE          reduce using rule 45 (statement -> NAME INCR SEMI .)
    MINUS           reduce using rule 45 (statement -> NAME INCR SEMI .)
    LPAREN          reduce using rule 45 (statement -> NAME INCR SEMI .)
    NUMBER          reduce using rule 45 (statement -> NAME INCR SEMI .)
    STRING          reduce using rule 45 (statement -> NAME INCR SEMI .)
    $end            reduce using rule 45 (statement -> NAME INCR SEMI .)
    TO              reduce using rule 45 (statement -> NAME INCR SEMI .)
    LACC            reduce using rule 45 (statement -> NAME INCR SEMI .)
    END             reduce using rule 45 (statement -> NAME INCR SEMI .)
    RPAREN          reduce using rule 45 (statement -> NAME INCR SEMI .)


state 54

    (46) statement -> NAME DECR SEMI .

    NAME            reduce using rule 46 (statement -> NAME DECR SEMI .)
    WHILE           reduce using rule 46 (statement -> NAME DECR SEMI .)
    FOR             reduce using rule 46 (statement -> NAME DECR SEMI .)
    COMMENTS        reduce using rule 46 (statement -> NAME DECR SEMI .)
    IF              reduce using rule 46 (statement -> NAME DECR SEMI .)
    PRINT           reduce using rule 46 (statement -> NAME DECR SEMI .)
    RETURN          reduce using rule 46 (statement -> NAME DECR SEMI .)
    FUNCTION        reduce using rule 46 (statement -> NAME DECR SEMI .)
    DEFINE          reduce using rule 46 (statement -> NAME DECR SEMI .)
    MINUS           reduce using rule 46 (statement -> NAME DECR SEMI .)
    LPAREN          reduce using rule 46 (statement -> NAME DECR SEMI .)
    NUMBER          reduce using rule 46 (statement -> NAME DECR SEMI .)
    STRING          reduce using rule 46 (statement -> NAME DECR SEMI .)
    $end            reduce using rule 46 (statement -> NAME DECR SEMI .)
    TO              reduce using rule 46 (statement -> NAME DECR SEMI .)
    LACC            reduce using rule 46 (statement -> NAME DECR SEMI .)
    END             reduce using rule 46 (statement -> NAME DECR SEMI .)
    RPAREN          reduce using rule 46 (statement -> NAME DECR SEMI .)


state 55

    (49) statement -> NAME PLUSEQ NUMBER . SEMI
    (51) statement -> NAME PLUSEQ NUMBER .

    SEMI            shift and go to state 91
    NAME            reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    WHILE           reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    FOR             reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    COMMENTS        reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    IF              reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    PRINT           reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    RETURN          reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    FUNCTION        reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    DEFINE          reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    MINUS           reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    LPAREN          reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    NUMBER          reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    STRING          reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    $end            reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    TO              reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    LACC            reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    END             reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)
    RPAREN          reduce using rule 51 (statement -> NAME PLUSEQ NUMBER .)


state 56

    (50) statement -> NAME MINEQ NUMBER . SEMI
    (52) statement -> NAME MINEQ NUMBER .

    SEMI            shift and go to state 92
    NAME            reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    WHILE           reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    FOR             reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    COMMENTS        reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    IF              reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    PRINT           reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    RETURN          reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    FUNCTION        reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    DEFINE          reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    MINUS           reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    LPAREN          reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    NUMBER          reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    STRING          reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    $end            reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    TO              reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    LACC            reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    END             reduce using rule 52 (statement -> NAME MINEQ NUMBER .)
    RPAREN          reduce using rule 52 (statement -> NAME MINEQ NUMBER .)


state 57

    (40) expression -> expression INFF expression .
    (20) statement -> expression . INFF statement
    (21) statement -> expression . SUP statement
    (22) statement -> expression . and statement
    (23) statement -> expression . or statement
    (24) statement -> expression . SEMI
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    INFF            shift and go to state 25
    SUP             shift and go to state 26
    and             shift and go to state 27
    or              shift and go to state 28
    SEMI            shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! INFF            [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! SEMI            [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 40 (expression -> expression INFF expression .) ]


state 58

    (20) statement -> expression INFF statement .

    NAME            reduce using rule 20 (statement -> expression INFF statement .)
    WHILE           reduce using rule 20 (statement -> expression INFF statement .)
    FOR             reduce using rule 20 (statement -> expression INFF statement .)
    COMMENTS        reduce using rule 20 (statement -> expression INFF statement .)
    IF              reduce using rule 20 (statement -> expression INFF statement .)
    PRINT           reduce using rule 20 (statement -> expression INFF statement .)
    RETURN          reduce using rule 20 (statement -> expression INFF statement .)
    FUNCTION        reduce using rule 20 (statement -> expression INFF statement .)
    DEFINE          reduce using rule 20 (statement -> expression INFF statement .)
    MINUS           reduce using rule 20 (statement -> expression INFF statement .)
    LPAREN          reduce using rule 20 (statement -> expression INFF statement .)
    NUMBER          reduce using rule 20 (statement -> expression INFF statement .)
    STRING          reduce using rule 20 (statement -> expression INFF statement .)
    $end            reduce using rule 20 (statement -> expression INFF statement .)
    TO              reduce using rule 20 (statement -> expression INFF statement .)
    LACC            reduce using rule 20 (statement -> expression INFF statement .)
    END             reduce using rule 20 (statement -> expression INFF statement .)
    RPAREN          reduce using rule 20 (statement -> expression INFF statement .)


state 59

    (39) expression -> expression SUP expression .
    (20) statement -> expression . INFF statement
    (21) statement -> expression . SUP statement
    (22) statement -> expression . and statement
    (23) statement -> expression . or statement
    (24) statement -> expression . SEMI
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            reduce using rule 39 (expression -> expression SUP expression .)
    and             reduce using rule 39 (expression -> expression SUP expression .)
    or              reduce using rule 39 (expression -> expression SUP expression .)
    SEMI            reduce using rule 39 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 39 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 39 (expression -> expression SUP expression .)
    ET              reduce using rule 39 (expression -> expression SUP expression .)
    OU              reduce using rule 39 (expression -> expression SUP expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    SUP             shift and go to state 26

  ! SUP             [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! INFF            [ shift and go to state 25 ]
  ! and             [ shift and go to state 27 ]
  ! or              [ shift and go to state 28 ]
  ! SEMI            [ shift and go to state 29 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 60

    (21) statement -> expression SUP statement .

    NAME            reduce using rule 21 (statement -> expression SUP statement .)
    WHILE           reduce using rule 21 (statement -> expression SUP statement .)
    FOR             reduce using rule 21 (statement -> expression SUP statement .)
    COMMENTS        reduce using rule 21 (statement -> expression SUP statement .)
    IF              reduce using rule 21 (statement -> expression SUP statement .)
    PRINT           reduce using rule 21 (statement -> expression SUP statement .)
    RETURN          reduce using rule 21 (statement -> expression SUP statement .)
    FUNCTION        reduce using rule 21 (statement -> expression SUP statement .)
    DEFINE          reduce using rule 21 (statement -> expression SUP statement .)
    MINUS           reduce using rule 21 (statement -> expression SUP statement .)
    LPAREN          reduce using rule 21 (statement -> expression SUP statement .)
    NUMBER          reduce using rule 21 (statement -> expression SUP statement .)
    STRING          reduce using rule 21 (statement -> expression SUP statement .)
    $end            reduce using rule 21 (statement -> expression SUP statement .)
    TO              reduce using rule 21 (statement -> expression SUP statement .)
    LACC            reduce using rule 21 (statement -> expression SUP statement .)
    END             reduce using rule 21 (statement -> expression SUP statement .)
    RPAREN          reduce using rule 21 (statement -> expression SUP statement .)


state 61

    (38) expression -> expression and expression .
    (20) statement -> expression . INFF statement
    (21) statement -> expression . SUP statement
    (22) statement -> expression . and statement
    (23) statement -> expression . or statement
    (24) statement -> expression . SEMI
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            reduce using rule 38 (expression -> expression and expression .)
    and             reduce using rule 38 (expression -> expression and expression .)
    or              reduce using rule 38 (expression -> expression and expression .)
    SEMI            reduce using rule 38 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 38 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 38 (expression -> expression and expression .)
    ET              reduce using rule 38 (expression -> expression and expression .)
    OU              reduce using rule 38 (expression -> expression and expression .)
    SUP             shift and go to state 26
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! SUP             [ reduce using rule 38 (expression -> expression and expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression and expression .) ]
  ! INFF            [ shift and go to state 25 ]
  ! and             [ shift and go to state 27 ]
  ! or              [ shift and go to state 28 ]
  ! SEMI            [ shift and go to state 29 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 62

    (22) statement -> expression and statement .

    NAME            reduce using rule 22 (statement -> expression and statement .)
    WHILE           reduce using rule 22 (statement -> expression and statement .)
    FOR             reduce using rule 22 (statement -> expression and statement .)
    COMMENTS        reduce using rule 22 (statement -> expression and statement .)
    IF              reduce using rule 22 (statement -> expression and statement .)
    PRINT           reduce using rule 22 (statement -> expression and statement .)
    RETURN          reduce using rule 22 (statement -> expression and statement .)
    FUNCTION        reduce using rule 22 (statement -> expression and statement .)
    DEFINE          reduce using rule 22 (statement -> expression and statement .)
    MINUS           reduce using rule 22 (statement -> expression and statement .)
    LPAREN          reduce using rule 22 (statement -> expression and statement .)
    NUMBER          reduce using rule 22 (statement -> expression and statement .)
    STRING          reduce using rule 22 (statement -> expression and statement .)
    $end            reduce using rule 22 (statement -> expression and statement .)
    TO              reduce using rule 22 (statement -> expression and statement .)
    LACC            reduce using rule 22 (statement -> expression and statement .)
    END             reduce using rule 22 (statement -> expression and statement .)
    RPAREN          reduce using rule 22 (statement -> expression and statement .)


state 63

    (37) expression -> expression or expression .
    (20) statement -> expression . INFF statement
    (21) statement -> expression . SUP statement
    (22) statement -> expression . and statement
    (23) statement -> expression . or statement
    (24) statement -> expression . SEMI
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            reduce using rule 37 (expression -> expression or expression .)
    or              reduce using rule 37 (expression -> expression or expression .)
    SEMI            reduce using rule 37 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 37 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 37 (expression -> expression or expression .)
    ET              reduce using rule 37 (expression -> expression or expression .)
    OU              reduce using rule 37 (expression -> expression or expression .)
    SUP             shift and go to state 26
    and             shift and go to state 27
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! SUP             [ reduce using rule 37 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 37 (expression -> expression or expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression or expression .) ]
  ! INFF            [ shift and go to state 25 ]
  ! or              [ shift and go to state 28 ]
  ! SEMI            [ shift and go to state 29 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 64

    (23) statement -> expression or statement .

    NAME            reduce using rule 23 (statement -> expression or statement .)
    WHILE           reduce using rule 23 (statement -> expression or statement .)
    FOR             reduce using rule 23 (statement -> expression or statement .)
    COMMENTS        reduce using rule 23 (statement -> expression or statement .)
    IF              reduce using rule 23 (statement -> expression or statement .)
    PRINT           reduce using rule 23 (statement -> expression or statement .)
    RETURN          reduce using rule 23 (statement -> expression or statement .)
    FUNCTION        reduce using rule 23 (statement -> expression or statement .)
    DEFINE          reduce using rule 23 (statement -> expression or statement .)
    MINUS           reduce using rule 23 (statement -> expression or statement .)
    LPAREN          reduce using rule 23 (statement -> expression or statement .)
    NUMBER          reduce using rule 23 (statement -> expression or statement .)
    STRING          reduce using rule 23 (statement -> expression or statement .)
    $end            reduce using rule 23 (statement -> expression or statement .)
    TO              reduce using rule 23 (statement -> expression or statement .)
    LACC            reduce using rule 23 (statement -> expression or statement .)
    END             reduce using rule 23 (statement -> expression or statement .)
    RPAREN          reduce using rule 23 (statement -> expression or statement .)


state 65

    (33) expression -> expression PLUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            reduce using rule 33 (expression -> expression PLUS expression .)
    SUP             reduce using rule 33 (expression -> expression PLUS expression .)
    and             reduce using rule 33 (expression -> expression PLUS expression .)
    or              reduce using rule 33 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 33 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 33 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 33 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 33 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 33 (expression -> expression PLUS expression .)
    ET              reduce using rule 33 (expression -> expression PLUS expression .)
    OU              reduce using rule 33 (expression -> expression PLUS expression .)
    RACC            reduce using rule 33 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 33 (expression -> expression PLUS expression .)
    THEN            reduce using rule 33 (expression -> expression PLUS expression .)
    NAME            reduce using rule 33 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 33 (expression -> expression PLUS expression .)
    FOR             reduce using rule 33 (expression -> expression PLUS expression .)
    COMMENTS        reduce using rule 33 (expression -> expression PLUS expression .)
    IF              reduce using rule 33 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 33 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 33 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 33 (expression -> expression PLUS expression .)
    DEFINE          reduce using rule 33 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 33 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 33 (expression -> expression PLUS expression .)
    STRING          reduce using rule 33 (expression -> expression PLUS expression .)
    $end            reduce using rule 33 (expression -> expression PLUS expression .)
    TO              reduce using rule 33 (expression -> expression PLUS expression .)
    LACC            reduce using rule 33 (expression -> expression PLUS expression .)
    END             reduce using rule 33 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 33 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! TIMES           [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! or              [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! SUP             [ shift and go to state 76 ]
  ! INFF            [ shift and go to state 77 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 66

    (34) expression -> expression MINUS expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            reduce using rule 34 (expression -> expression MINUS expression .)
    SUP             reduce using rule 34 (expression -> expression MINUS expression .)
    and             reduce using rule 34 (expression -> expression MINUS expression .)
    or              reduce using rule 34 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 34 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 34 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 34 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 34 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 34 (expression -> expression MINUS expression .)
    ET              reduce using rule 34 (expression -> expression MINUS expression .)
    OU              reduce using rule 34 (expression -> expression MINUS expression .)
    RACC            reduce using rule 34 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression MINUS expression .)
    THEN            reduce using rule 34 (expression -> expression MINUS expression .)
    NAME            reduce using rule 34 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 34 (expression -> expression MINUS expression .)
    FOR             reduce using rule 34 (expression -> expression MINUS expression .)
    COMMENTS        reduce using rule 34 (expression -> expression MINUS expression .)
    IF              reduce using rule 34 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 34 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 34 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 34 (expression -> expression MINUS expression .)
    DEFINE          reduce using rule 34 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 34 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 34 (expression -> expression MINUS expression .)
    STRING          reduce using rule 34 (expression -> expression MINUS expression .)
    $end            reduce using rule 34 (expression -> expression MINUS expression .)
    TO              reduce using rule 34 (expression -> expression MINUS expression .)
    LACC            reduce using rule 34 (expression -> expression MINUS expression .)
    END             reduce using rule 34 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 34 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! TIMES           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! or              [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! SUP             [ shift and go to state 76 ]
  ! INFF            [ shift and go to state 77 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 67

    (35) expression -> expression TIMES expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            reduce using rule 35 (expression -> expression TIMES expression .)
    SUP             reduce using rule 35 (expression -> expression TIMES expression .)
    and             reduce using rule 35 (expression -> expression TIMES expression .)
    or              reduce using rule 35 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 35 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 35 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 35 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 35 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 35 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 35 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 35 (expression -> expression TIMES expression .)
    ET              reduce using rule 35 (expression -> expression TIMES expression .)
    OU              reduce using rule 35 (expression -> expression TIMES expression .)
    RACC            reduce using rule 35 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 35 (expression -> expression TIMES expression .)
    THEN            reduce using rule 35 (expression -> expression TIMES expression .)
    NAME            reduce using rule 35 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 35 (expression -> expression TIMES expression .)
    FOR             reduce using rule 35 (expression -> expression TIMES expression .)
    COMMENTS        reduce using rule 35 (expression -> expression TIMES expression .)
    IF              reduce using rule 35 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 35 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 35 (expression -> expression TIMES expression .)
    FUNCTION        reduce using rule 35 (expression -> expression TIMES expression .)
    DEFINE          reduce using rule 35 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 35 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 35 (expression -> expression TIMES expression .)
    STRING          reduce using rule 35 (expression -> expression TIMES expression .)
    $end            reduce using rule 35 (expression -> expression TIMES expression .)
    TO              reduce using rule 35 (expression -> expression TIMES expression .)
    LACC            reduce using rule 35 (expression -> expression TIMES expression .)
    END             reduce using rule 35 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 35 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! or              [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! SUP             [ shift and go to state 76 ]
  ! INFF            [ shift and go to state 77 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 68

    (36) expression -> expression DIVIDE expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    INFF            reduce using rule 36 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 36 (expression -> expression DIVIDE expression .)
    and             reduce using rule 36 (expression -> expression DIVIDE expression .)
    or              reduce using rule 36 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 36 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 36 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 36 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 36 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 36 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 36 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 36 (expression -> expression DIVIDE expression .)
    ET              reduce using rule 36 (expression -> expression DIVIDE expression .)
    OU              reduce using rule 36 (expression -> expression DIVIDE expression .)
    RACC            reduce using rule 36 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 36 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 36 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 36 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 36 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 36 (expression -> expression DIVIDE expression .)
    COMMENTS        reduce using rule 36 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 36 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 36 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 36 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 36 (expression -> expression DIVIDE expression .)
    DEFINE          reduce using rule 36 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 36 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 36 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 36 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 36 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 36 (expression -> expression DIVIDE expression .)
    LACC            reduce using rule 36 (expression -> expression DIVIDE expression .)
    END             reduce using rule 36 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 36 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! or              [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! SUP             [ shift and go to state 76 ]
  ! INFF            [ shift and go to state 77 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 69

    (41) expression -> expression ISEQUAL expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    SEMI            reduce using rule 41 (expression -> expression ISEQUAL expression .)
    RACC            reduce using rule 41 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 41 (expression -> expression ISEQUAL expression .)
    THEN            reduce using rule 41 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 41 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 41 (expression -> expression ISEQUAL expression .)
    FOR             reduce using rule 41 (expression -> expression ISEQUAL expression .)
    COMMENTS        reduce using rule 41 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 41 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 41 (expression -> expression ISEQUAL expression .)
    RETURN          reduce using rule 41 (expression -> expression ISEQUAL expression .)
    FUNCTION        reduce using rule 41 (expression -> expression ISEQUAL expression .)
    DEFINE          reduce using rule 41 (expression -> expression ISEQUAL expression .)
    LPAREN          reduce using rule 41 (expression -> expression ISEQUAL expression .)
    NUMBER          reduce using rule 41 (expression -> expression ISEQUAL expression .)
    STRING          reduce using rule 41 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 41 (expression -> expression ISEQUAL expression .)
    TO              reduce using rule 41 (expression -> expression ISEQUAL expression .)
    LACC            reduce using rule 41 (expression -> expression ISEQUAL expression .)
    END             reduce using rule 41 (expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 41 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! INFF            [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! SUP             [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! and             [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! or              [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! ET              [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]
  ! OU              [ reduce using rule 41 (expression -> expression ISEQUAL expression .) ]


state 70

    (42) expression -> expression NOTEQUAL expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    SEMI            reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    RACC            reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    THEN            reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    COMMENTS        reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    RETURN          reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    FUNCTION        reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    DEFINE          reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    STRING          reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    TO              reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    LACC            reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    END             reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 42 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! INFF            [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! SUP             [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! and             [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! or              [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! ET              [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]
  ! OU              [ reduce using rule 42 (expression -> expression NOTEQUAL expression .) ]


state 71

    (43) expression -> expression ET expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    SEMI            reduce using rule 43 (expression -> expression ET expression .)
    RACC            reduce using rule 43 (expression -> expression ET expression .)
    RPAREN          reduce using rule 43 (expression -> expression ET expression .)
    THEN            reduce using rule 43 (expression -> expression ET expression .)
    NAME            reduce using rule 43 (expression -> expression ET expression .)
    WHILE           reduce using rule 43 (expression -> expression ET expression .)
    FOR             reduce using rule 43 (expression -> expression ET expression .)
    COMMENTS        reduce using rule 43 (expression -> expression ET expression .)
    IF              reduce using rule 43 (expression -> expression ET expression .)
    PRINT           reduce using rule 43 (expression -> expression ET expression .)
    RETURN          reduce using rule 43 (expression -> expression ET expression .)
    FUNCTION        reduce using rule 43 (expression -> expression ET expression .)
    DEFINE          reduce using rule 43 (expression -> expression ET expression .)
    LPAREN          reduce using rule 43 (expression -> expression ET expression .)
    NUMBER          reduce using rule 43 (expression -> expression ET expression .)
    STRING          reduce using rule 43 (expression -> expression ET expression .)
    $end            reduce using rule 43 (expression -> expression ET expression .)
    TO              reduce using rule 43 (expression -> expression ET expression .)
    LACC            reduce using rule 43 (expression -> expression ET expression .)
    END             reduce using rule 43 (expression -> expression ET expression .)
    COMMA           reduce using rule 43 (expression -> expression ET expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! INFF            [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! SUP             [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! and             [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! or              [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! ISEQUAL         [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! NOTEQUAL        [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! ET              [ reduce using rule 43 (expression -> expression ET expression .) ]
  ! OU              [ reduce using rule 43 (expression -> expression ET expression .) ]


state 72

    (44) expression -> expression OU expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    SEMI            reduce using rule 44 (expression -> expression OU expression .)
    RACC            reduce using rule 44 (expression -> expression OU expression .)
    RPAREN          reduce using rule 44 (expression -> expression OU expression .)
    THEN            reduce using rule 44 (expression -> expression OU expression .)
    NAME            reduce using rule 44 (expression -> expression OU expression .)
    WHILE           reduce using rule 44 (expression -> expression OU expression .)
    FOR             reduce using rule 44 (expression -> expression OU expression .)
    COMMENTS        reduce using rule 44 (expression -> expression OU expression .)
    IF              reduce using rule 44 (expression -> expression OU expression .)
    PRINT           reduce using rule 44 (expression -> expression OU expression .)
    RETURN          reduce using rule 44 (expression -> expression OU expression .)
    FUNCTION        reduce using rule 44 (expression -> expression OU expression .)
    DEFINE          reduce using rule 44 (expression -> expression OU expression .)
    LPAREN          reduce using rule 44 (expression -> expression OU expression .)
    NUMBER          reduce using rule 44 (expression -> expression OU expression .)
    STRING          reduce using rule 44 (expression -> expression OU expression .)
    $end            reduce using rule 44 (expression -> expression OU expression .)
    TO              reduce using rule 44 (expression -> expression OU expression .)
    LACC            reduce using rule 44 (expression -> expression OU expression .)
    END             reduce using rule 44 (expression -> expression OU expression .)
    COMMA           reduce using rule 44 (expression -> expression OU expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! INFF            [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! SUP             [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! and             [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! or              [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! ISEQUAL         [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! NOTEQUAL        [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! ET              [ reduce using rule 44 (expression -> expression OU expression .) ]
  ! OU              [ reduce using rule 44 (expression -> expression OU expression .) ]


state 73

    (6) statement -> WHILE expression RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    bloc                           shift and go to state 93
    statement                      shift and go to state 3

state 74

    (37) expression -> expression or . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 94

state 75

    (38) expression -> expression and . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 95

state 76

    (39) expression -> expression SUP . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 96

state 77

    (40) expression -> expression INFF . expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 97

state 78

    (7) statement -> FOR LPAREN statement . TO NUMBER COMMA statement RPAREN RACC bloc LACC

    TO              shift and go to state 98


state 79

    (54) expression -> LPAREN expression RPAREN .

    INFF            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    ET              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    OU              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RACC            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    COMMENTS        reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    DEFINE          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    LACC            reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 54 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 54 (expression -> LPAREN expression RPAREN .)


state 80

    (9) statement -> IF expression THEN . statement
    (10) statement -> IF expression THEN . RACC bloc LACC
    (11) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    RACC            shift and go to state 100
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    statement                      shift and go to state 99

state 81

    (13) statement -> PRINT LPAREN expression . RPAREN SEMI
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression
    (15) print_params -> expression .
    (16) print_params -> expression . COMMA print_params

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 101
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37
    COMMA           shift and go to state 102

  ! RPAREN          [ reduce using rule 15 (print_params -> expression .) ]


state 82

    (17) statement -> PRINT LPAREN print_params . RPAREN SEMI

    RPAREN          shift and go to state 103


state 83

    (14) statement -> PRINT STRING SEMI .

    NAME            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    WHILE           reduce using rule 14 (statement -> PRINT STRING SEMI .)
    FOR             reduce using rule 14 (statement -> PRINT STRING SEMI .)
    COMMENTS        reduce using rule 14 (statement -> PRINT STRING SEMI .)
    IF              reduce using rule 14 (statement -> PRINT STRING SEMI .)
    PRINT           reduce using rule 14 (statement -> PRINT STRING SEMI .)
    RETURN          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    FUNCTION        reduce using rule 14 (statement -> PRINT STRING SEMI .)
    DEFINE          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    MINUS           reduce using rule 14 (statement -> PRINT STRING SEMI .)
    LPAREN          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    NUMBER          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    STRING          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    $end            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    TO              reduce using rule 14 (statement -> PRINT STRING SEMI .)
    LACC            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    END             reduce using rule 14 (statement -> PRINT STRING SEMI .)
    RPAREN          reduce using rule 14 (statement -> PRINT STRING SEMI .)


state 84

    (25) statement -> RETURN expression SEMI .

    NAME            reduce using rule 25 (statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 25 (statement -> RETURN expression SEMI .)
    FOR             reduce using rule 25 (statement -> RETURN expression SEMI .)
    COMMENTS        reduce using rule 25 (statement -> RETURN expression SEMI .)
    IF              reduce using rule 25 (statement -> RETURN expression SEMI .)
    PRINT           reduce using rule 25 (statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 25 (statement -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 25 (statement -> RETURN expression SEMI .)
    DEFINE          reduce using rule 25 (statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 25 (statement -> RETURN expression SEMI .)
    LPAREN          reduce using rule 25 (statement -> RETURN expression SEMI .)
    NUMBER          reduce using rule 25 (statement -> RETURN expression SEMI .)
    STRING          reduce using rule 25 (statement -> RETURN expression SEMI .)
    $end            reduce using rule 25 (statement -> RETURN expression SEMI .)
    TO              reduce using rule 25 (statement -> RETURN expression SEMI .)
    LACC            reduce using rule 25 (statement -> RETURN expression SEMI .)
    END             reduce using rule 25 (statement -> RETURN expression SEMI .)
    RPAREN          reduce using rule 25 (statement -> RETURN expression SEMI .)


state 85

    (26) statement -> FUNCTION NAME LPAREN . RPAREN START bloc END
    (27) statement -> FUNCTION NAME LPAREN . params RPAREN START bloc END
    (18) params -> . NAME
    (19) params -> . NAME COMMA params

    RPAREN          shift and go to state 105
    NAME            shift and go to state 104

    params                         shift and go to state 106

state 86

    (32) statement -> DEFINE NAME EQUALS . expression SEMI
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 107

state 87

    (4) statement -> NAME EQUALS expression SEMI .

    NAME            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FOR             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    IF              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RETURN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    DEFINE          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    STRING          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    $end            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    TO              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LACC            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    END             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)


state 88

    (28) statement -> NAME LPAREN RPAREN SEMI .

    NAME            reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    STRING          reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    TO              reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    LACC            reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    END             reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 28 (statement -> NAME LPAREN RPAREN SEMI .)


state 89

    (29) statement -> NAME LPAREN param_call RPAREN . SEMI

    SEMI            shift and go to state 108


state 90

    (31) param_call -> expression COMMA . param_call
    (30) param_call -> . expression
    (31) param_call -> . expression COMMA param_call
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 52
    param_call                     shift and go to state 109

state 91

    (49) statement -> NAME PLUSEQ NUMBER SEMI .

    NAME            reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    WHILE           reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FOR             reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    IF              reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    PRINT           reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RETURN          reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    DEFINE          reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    MINUS           reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LPAREN          reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    NUMBER          reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    STRING          reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    $end            reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TO              reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LACC            reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    END             reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RPAREN          reduce using rule 49 (statement -> NAME PLUSEQ NUMBER SEMI .)


state 92

    (50) statement -> NAME MINEQ NUMBER SEMI .

    NAME            reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    WHILE           reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    FOR             reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    IF              reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    PRINT           reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    RETURN          reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    DEFINE          reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    MINUS           reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    LPAREN          reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    NUMBER          reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    STRING          reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    $end            reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    TO              reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    LACC            reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    END             reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)
    RPAREN          reduce using rule 50 (statement -> NAME MINEQ NUMBER SEMI .)


state 93

    (6) statement -> WHILE expression RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    LACC            shift and go to state 110
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    statement                      shift and go to state 18

state 94

    (37) expression -> expression or expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    RACC            reduce using rule 37 (expression -> expression or expression .)
    or              reduce using rule 37 (expression -> expression or expression .)
    INFF            reduce using rule 37 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 37 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 37 (expression -> expression or expression .)
    ET              reduce using rule 37 (expression -> expression or expression .)
    OU              reduce using rule 37 (expression -> expression or expression .)
    RPAREN          reduce using rule 37 (expression -> expression or expression .)
    THEN            reduce using rule 37 (expression -> expression or expression .)
    SEMI            reduce using rule 37 (expression -> expression or expression .)
    NAME            reduce using rule 37 (expression -> expression or expression .)
    WHILE           reduce using rule 37 (expression -> expression or expression .)
    FOR             reduce using rule 37 (expression -> expression or expression .)
    COMMENTS        reduce using rule 37 (expression -> expression or expression .)
    IF              reduce using rule 37 (expression -> expression or expression .)
    PRINT           reduce using rule 37 (expression -> expression or expression .)
    RETURN          reduce using rule 37 (expression -> expression or expression .)
    FUNCTION        reduce using rule 37 (expression -> expression or expression .)
    DEFINE          reduce using rule 37 (expression -> expression or expression .)
    LPAREN          reduce using rule 37 (expression -> expression or expression .)
    NUMBER          reduce using rule 37 (expression -> expression or expression .)
    STRING          reduce using rule 37 (expression -> expression or expression .)
    $end            reduce using rule 37 (expression -> expression or expression .)
    TO              reduce using rule 37 (expression -> expression or expression .)
    LACC            reduce using rule 37 (expression -> expression or expression .)
    END             reduce using rule 37 (expression -> expression or expression .)
    COMMA           reduce using rule 37 (expression -> expression or expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    and             shift and go to state 75
    SUP             shift and go to state 76

  ! PLUS            [ reduce using rule 37 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 37 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 37 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 74 ]
  ! INFF            [ shift and go to state 77 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 95

    (38) expression -> expression and expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    RACC            reduce using rule 38 (expression -> expression and expression .)
    or              reduce using rule 38 (expression -> expression and expression .)
    and             reduce using rule 38 (expression -> expression and expression .)
    INFF            reduce using rule 38 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 38 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 38 (expression -> expression and expression .)
    ET              reduce using rule 38 (expression -> expression and expression .)
    OU              reduce using rule 38 (expression -> expression and expression .)
    RPAREN          reduce using rule 38 (expression -> expression and expression .)
    THEN            reduce using rule 38 (expression -> expression and expression .)
    SEMI            reduce using rule 38 (expression -> expression and expression .)
    NAME            reduce using rule 38 (expression -> expression and expression .)
    WHILE           reduce using rule 38 (expression -> expression and expression .)
    FOR             reduce using rule 38 (expression -> expression and expression .)
    COMMENTS        reduce using rule 38 (expression -> expression and expression .)
    IF              reduce using rule 38 (expression -> expression and expression .)
    PRINT           reduce using rule 38 (expression -> expression and expression .)
    RETURN          reduce using rule 38 (expression -> expression and expression .)
    FUNCTION        reduce using rule 38 (expression -> expression and expression .)
    DEFINE          reduce using rule 38 (expression -> expression and expression .)
    LPAREN          reduce using rule 38 (expression -> expression and expression .)
    NUMBER          reduce using rule 38 (expression -> expression and expression .)
    STRING          reduce using rule 38 (expression -> expression and expression .)
    $end            reduce using rule 38 (expression -> expression and expression .)
    TO              reduce using rule 38 (expression -> expression and expression .)
    LACC            reduce using rule 38 (expression -> expression and expression .)
    END             reduce using rule 38 (expression -> expression and expression .)
    COMMA           reduce using rule 38 (expression -> expression and expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    SUP             shift and go to state 76

  ! PLUS            [ reduce using rule 38 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 38 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! INFF            [ shift and go to state 77 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 96

    (39) expression -> expression SUP expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    RACC            reduce using rule 39 (expression -> expression SUP expression .)
    or              reduce using rule 39 (expression -> expression SUP expression .)
    and             reduce using rule 39 (expression -> expression SUP expression .)
    SUP             reduce using rule 39 (expression -> expression SUP expression .)
    INFF            reduce using rule 39 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 39 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 39 (expression -> expression SUP expression .)
    ET              reduce using rule 39 (expression -> expression SUP expression .)
    OU              reduce using rule 39 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 39 (expression -> expression SUP expression .)
    THEN            reduce using rule 39 (expression -> expression SUP expression .)
    SEMI            reduce using rule 39 (expression -> expression SUP expression .)
    NAME            reduce using rule 39 (expression -> expression SUP expression .)
    WHILE           reduce using rule 39 (expression -> expression SUP expression .)
    FOR             reduce using rule 39 (expression -> expression SUP expression .)
    COMMENTS        reduce using rule 39 (expression -> expression SUP expression .)
    IF              reduce using rule 39 (expression -> expression SUP expression .)
    PRINT           reduce using rule 39 (expression -> expression SUP expression .)
    RETURN          reduce using rule 39 (expression -> expression SUP expression .)
    FUNCTION        reduce using rule 39 (expression -> expression SUP expression .)
    DEFINE          reduce using rule 39 (expression -> expression SUP expression .)
    LPAREN          reduce using rule 39 (expression -> expression SUP expression .)
    NUMBER          reduce using rule 39 (expression -> expression SUP expression .)
    STRING          reduce using rule 39 (expression -> expression SUP expression .)
    $end            reduce using rule 39 (expression -> expression SUP expression .)
    TO              reduce using rule 39 (expression -> expression SUP expression .)
    LACC            reduce using rule 39 (expression -> expression SUP expression .)
    END             reduce using rule 39 (expression -> expression SUP expression .)
    COMMA           reduce using rule 39 (expression -> expression SUP expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! PLUS            [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! SUP             [ shift and go to state 76 ]
  ! INFF            [ shift and go to state 77 ]
  ! ISEQUAL         [ shift and go to state 34 ]
  ! NOTEQUAL        [ shift and go to state 35 ]
  ! ET              [ shift and go to state 36 ]
  ! OU              [ shift and go to state 37 ]


state 97

    (40) expression -> expression INFF expression .
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 40 (expression -> expression INFF expression .)
    RPAREN          reduce using rule 40 (expression -> expression INFF expression .)
    THEN            reduce using rule 40 (expression -> expression INFF expression .)
    SEMI            reduce using rule 40 (expression -> expression INFF expression .)
    NAME            reduce using rule 40 (expression -> expression INFF expression .)
    WHILE           reduce using rule 40 (expression -> expression INFF expression .)
    FOR             reduce using rule 40 (expression -> expression INFF expression .)
    COMMENTS        reduce using rule 40 (expression -> expression INFF expression .)
    IF              reduce using rule 40 (expression -> expression INFF expression .)
    PRINT           reduce using rule 40 (expression -> expression INFF expression .)
    RETURN          reduce using rule 40 (expression -> expression INFF expression .)
    FUNCTION        reduce using rule 40 (expression -> expression INFF expression .)
    DEFINE          reduce using rule 40 (expression -> expression INFF expression .)
    LPAREN          reduce using rule 40 (expression -> expression INFF expression .)
    NUMBER          reduce using rule 40 (expression -> expression INFF expression .)
    STRING          reduce using rule 40 (expression -> expression INFF expression .)
    $end            reduce using rule 40 (expression -> expression INFF expression .)
    TO              reduce using rule 40 (expression -> expression INFF expression .)
    LACC            reduce using rule 40 (expression -> expression INFF expression .)
    END             reduce using rule 40 (expression -> expression INFF expression .)
    COMMA           reduce using rule 40 (expression -> expression INFF expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37

  ! PLUS            [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 40 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 40 (expression -> expression INFF expression .) ]


state 98

    (7) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN RACC bloc LACC

    NUMBER          shift and go to state 111


state 99

    (9) statement -> IF expression THEN statement .

    NAME            reduce using rule 9 (statement -> IF expression THEN statement .)
    WHILE           reduce using rule 9 (statement -> IF expression THEN statement .)
    FOR             reduce using rule 9 (statement -> IF expression THEN statement .)
    COMMENTS        reduce using rule 9 (statement -> IF expression THEN statement .)
    IF              reduce using rule 9 (statement -> IF expression THEN statement .)
    PRINT           reduce using rule 9 (statement -> IF expression THEN statement .)
    RETURN          reduce using rule 9 (statement -> IF expression THEN statement .)
    FUNCTION        reduce using rule 9 (statement -> IF expression THEN statement .)
    DEFINE          reduce using rule 9 (statement -> IF expression THEN statement .)
    MINUS           reduce using rule 9 (statement -> IF expression THEN statement .)
    LPAREN          reduce using rule 9 (statement -> IF expression THEN statement .)
    NUMBER          reduce using rule 9 (statement -> IF expression THEN statement .)
    STRING          reduce using rule 9 (statement -> IF expression THEN statement .)
    $end            reduce using rule 9 (statement -> IF expression THEN statement .)
    TO              reduce using rule 9 (statement -> IF expression THEN statement .)
    LACC            reduce using rule 9 (statement -> IF expression THEN statement .)
    END             reduce using rule 9 (statement -> IF expression THEN statement .)
    RPAREN          reduce using rule 9 (statement -> IF expression THEN statement .)


state 100

    (10) statement -> IF expression THEN RACC . bloc LACC
    (11) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    bloc                           shift and go to state 112
    statement                      shift and go to state 3

state 101

    (13) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 113


state 102

    (16) print_params -> expression COMMA . print_params
    (15) print_params -> . expression
    (16) print_params -> . expression COMMA print_params
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 114
    print_params                   shift and go to state 115

state 103

    (17) statement -> PRINT LPAREN print_params RPAREN . SEMI

    SEMI            shift and go to state 116


state 104

    (18) params -> NAME .
    (19) params -> NAME . COMMA params

    RPAREN          reduce using rule 18 (params -> NAME .)
    COMMA           shift and go to state 117


state 105

    (26) statement -> FUNCTION NAME LPAREN RPAREN . START bloc END

    START           shift and go to state 118


state 106

    (27) statement -> FUNCTION NAME LPAREN params . RPAREN START bloc END

    RPAREN          shift and go to state 119


state 107

    (32) statement -> DEFINE NAME EQUALS expression . SEMI
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    SEMI            shift and go to state 120
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 108

    (29) statement -> NAME LPAREN param_call RPAREN SEMI .

    NAME            reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    WHILE           reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FOR             reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    COMMENTS        reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    IF              reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    PRINT           reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RETURN          reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FUNCTION        reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    DEFINE          reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    MINUS           reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LPAREN          reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    NUMBER          reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    STRING          reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    $end            reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    TO              reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LACC            reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    END             reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RPAREN          reduce using rule 29 (statement -> NAME LPAREN param_call RPAREN SEMI .)


state 109

    (31) param_call -> expression COMMA param_call .

    RPAREN          reduce using rule 31 (param_call -> expression COMMA param_call .)


state 110

    (6) statement -> WHILE expression RACC bloc LACC .

    NAME            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    WHILE           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FOR             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    COMMENTS        reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    IF              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    PRINT           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    RETURN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FUNCTION        reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    DEFINE          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    MINUS           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    LPAREN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    NUMBER          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    STRING          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    $end            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    TO              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    LACC            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    END             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    RPAREN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)


state 111

    (7) statement -> FOR LPAREN statement TO NUMBER . COMMA statement RPAREN RACC bloc LACC

    COMMA           shift and go to state 121


state 112

    (10) statement -> IF expression THEN RACC bloc . LACC
    (11) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    LACC            shift and go to state 122
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    statement                      shift and go to state 18

state 113

    (13) statement -> PRINT LPAREN expression RPAREN SEMI .

    NAME            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    COMMENTS        reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FUNCTION        reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    DEFINE          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    NUMBER          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TO              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LACC            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    END             reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 114

    (15) print_params -> expression .
    (16) print_params -> expression . COMMA print_params
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    RPAREN          reduce using rule 15 (print_params -> expression .)
    COMMA           shift and go to state 102
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 115

    (16) print_params -> expression COMMA print_params .

    RPAREN          reduce using rule 16 (print_params -> expression COMMA print_params .)


state 116

    (17) statement -> PRINT LPAREN print_params RPAREN SEMI .

    NAME            reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    WHILE           reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    FOR             reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    COMMENTS        reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    IF              reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    PRINT           reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    RETURN          reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    FUNCTION        reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    DEFINE          reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    MINUS           reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    LPAREN          reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    NUMBER          reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    STRING          reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    $end            reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    TO              reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    LACC            reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    END             reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    RPAREN          reduce using rule 17 (statement -> PRINT LPAREN print_params RPAREN SEMI .)


state 117

    (19) params -> NAME COMMA . params
    (18) params -> . NAME
    (19) params -> . NAME COMMA params

    NAME            shift and go to state 104

    params                         shift and go to state 123

state 118

    (26) statement -> FUNCTION NAME LPAREN RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    bloc                           shift and go to state 124
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 119

    (27) statement -> FUNCTION NAME LPAREN params RPAREN . START bloc END

    START           shift and go to state 125


state 120

    (32) statement -> DEFINE NAME EQUALS expression SEMI .

    NAME            reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FOR             reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    IF              reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    RETURN          reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    DEFINE          reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    STRING          reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    $end            reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    TO              reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    LACC            reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    END             reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 32 (statement -> DEFINE NAME EQUALS expression SEMI .)


state 121

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA . statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    statement                      shift and go to state 126
    expression                     shift and go to state 5

state 122

    (10) statement -> IF expression THEN RACC bloc LACC .
    (11) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    NAME            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    WHILE           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    FOR             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    COMMENTS        reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    IF              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    PRINT           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    RETURN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    FUNCTION        reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    DEFINE          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    MINUS           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    LPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    NUMBER          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    STRING          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    $end            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    TO              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    LACC            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    END             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    RPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    ELSEIF          shift and go to state 127
    ELSE            shift and go to state 128


state 123

    (19) params -> NAME COMMA params .

    RPAREN          reduce using rule 19 (params -> NAME COMMA params .)


state 124

    (26) statement -> FUNCTION NAME LPAREN RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    END             shift and go to state 129
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    statement                      shift and go to state 18
    expression                     shift and go to state 5

state 125

    (27) statement -> FUNCTION NAME LPAREN params RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    bloc                           shift and go to state 130
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 126

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement . RPAREN RACC bloc LACC

    RPAREN          shift and go to state 131


state 127

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 39

    expression                     shift and go to state 132

state 128

    (12) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 133


state 129

    (26) statement -> FUNCTION NAME LPAREN RPAREN START bloc END .

    NAME            reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    WHILE           reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FOR             reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    COMMENTS        reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    IF              reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    PRINT           reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RETURN          reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FUNCTION        reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    DEFINE          reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    MINUS           reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LPAREN          reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    NUMBER          reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    STRING          reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    $end            reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TO              reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LACC            reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    END             reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RPAREN          reduce using rule 26 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)


state 130

    (27) statement -> FUNCTION NAME LPAREN params RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    END             shift and go to state 134
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    statement                      shift and go to state 18
    expression                     shift and go to state 5

state 131

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN . RACC bloc LACC

    RACC            shift and go to state 135


state 132

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . or expression
    (38) expression -> expression . and expression
    (39) expression -> expression . SUP expression
    (40) expression -> expression . INFF expression
    (41) expression -> expression . ISEQUAL expression
    (42) expression -> expression . NOTEQUAL expression
    (43) expression -> expression . ET expression
    (44) expression -> expression . OU expression

    THEN            shift and go to state 136
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    or              shift and go to state 74
    and             shift and go to state 75
    SUP             shift and go to state 76
    INFF            shift and go to state 77
    ISEQUAL         shift and go to state 34
    NOTEQUAL        shift and go to state 35
    ET              shift and go to state 36
    OU              shift and go to state 37


state 133

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    bloc                           shift and go to state 137
    statement                      shift and go to state 3

state 134

    (27) statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .

    NAME            reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    WHILE           reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FOR             reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    COMMENTS        reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    IF              reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    PRINT           reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RETURN          reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FUNCTION        reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    DEFINE          reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    MINUS           reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LPAREN          reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    NUMBER          reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    STRING          reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    $end            reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    TO              reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LACC            reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    END             reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RPAREN          reduce using rule 27 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)


state 135

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    statement                      shift and go to state 3
    bloc                           shift and go to state 138
    expression                     shift and go to state 5

state 136

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC

    RACC            shift and go to state 139


state 137

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    LACC            shift and go to state 140
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    statement                      shift and go to state 18

state 138

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    LACC            shift and go to state 141
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    statement                      shift and go to state 18
    expression                     shift and go to state 5

state 139

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    bloc                           shift and go to state 142
    statement                      shift and go to state 3

state 140

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    STRING          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)


state 141

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .

    NAME            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    WHILE           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FOR             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    COMMENTS        reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    IF              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    PRINT           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RETURN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FUNCTION        reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    DEFINE          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    MINUS           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    NUMBER          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    STRING          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    $end            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    TO              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LACC            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    END             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)


state 142

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    LACC            shift and go to state 143
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    statement                      shift and go to state 18

state 143

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 144


state 144

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 145


state 145

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    bloc                           shift and go to state 146
    statement                      shift and go to state 3

state 146

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (20) statement -> . expression INFF statement
    (21) statement -> . expression SUP statement
    (22) statement -> . expression and statement
    (23) statement -> . expression or statement
    (24) statement -> . expression SEMI
    (25) statement -> . RETURN expression SEMI
    (26) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (27) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (28) statement -> . NAME LPAREN RPAREN SEMI
    (29) statement -> . NAME LPAREN param_call RPAREN SEMI
    (32) statement -> . DEFINE NAME EQUALS expression SEMI
    (45) statement -> . NAME INCR SEMI
    (46) statement -> . NAME DECR SEMI
    (47) statement -> . NAME INCR
    (48) statement -> . NAME DECR
    (49) statement -> . NAME PLUSEQ NUMBER SEMI
    (50) statement -> . NAME MINEQ NUMBER SEMI
    (51) statement -> . NAME PLUSEQ NUMBER
    (52) statement -> . NAME MINEQ NUMBER
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression or expression
    (38) expression -> . expression and expression
    (39) expression -> . expression SUP expression
    (40) expression -> . expression INFF expression
    (41) expression -> . expression ISEQUAL expression
    (42) expression -> . expression NOTEQUAL expression
    (43) expression -> . expression ET expression
    (44) expression -> . expression OU expression
    (53) expression -> . MINUS expression
    (54) expression -> . LPAREN expression RPAREN
    (55) expression -> . NUMBER
    (56) expression -> . STRING
    (57) expression -> . NAME

    LACC            shift and go to state 147
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 16
    MINUS           shift and go to state 17
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13

    expression                     shift and go to state 5
    statement                      shift and go to state 18

state 147

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    STRING          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INFF in state 57 resolved as shift
WARNING: shift/reduce conflict for SUP in state 57 resolved as shift
WARNING: shift/reduce conflict for and in state 57 resolved as shift
WARNING: shift/reduce conflict for or in state 57 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for ET in state 57 resolved as shift
WARNING: shift/reduce conflict for OU in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for or in state 69 resolved as shift
WARNING: shift/reduce conflict for and in state 69 resolved as shift
WARNING: shift/reduce conflict for SUP in state 69 resolved as shift
WARNING: shift/reduce conflict for INFF in state 69 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for ET in state 69 resolved as shift
WARNING: shift/reduce conflict for OU in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for or in state 70 resolved as shift
WARNING: shift/reduce conflict for and in state 70 resolved as shift
WARNING: shift/reduce conflict for SUP in state 70 resolved as shift
WARNING: shift/reduce conflict for INFF in state 70 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for ET in state 70 resolved as shift
WARNING: shift/reduce conflict for OU in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for or in state 71 resolved as shift
WARNING: shift/reduce conflict for and in state 71 resolved as shift
WARNING: shift/reduce conflict for SUP in state 71 resolved as shift
WARNING: shift/reduce conflict for INFF in state 71 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for ET in state 71 resolved as shift
WARNING: shift/reduce conflict for OU in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for or in state 72 resolved as shift
WARNING: shift/reduce conflict for and in state 72 resolved as shift
WARNING: shift/reduce conflict for SUP in state 72 resolved as shift
WARNING: shift/reduce conflict for INFF in state 72 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for ET in state 72 resolved as shift
WARNING: shift/reduce conflict for OU in state 72 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for or in state 97 resolved as shift
WARNING: shift/reduce conflict for and in state 97 resolved as shift
WARNING: shift/reduce conflict for SUP in state 97 resolved as shift
WARNING: shift/reduce conflict for INFF in state 97 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for ET in state 97 resolved as shift
WARNING: shift/reduce conflict for OU in state 97 resolved as shift
