Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> NAME EQUALS expression SEMI
Rule 5     statement -> NAME EQUALS expression
Rule 6     statement -> WHILE expression RACC bloc LACC
Rule 7     statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
Rule 8     statement -> COMMENTS
Rule 9     statement -> IF expression THEN statement
Rule 10    statement -> IF expression THEN RACC bloc LACC
Rule 11    statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 12    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 13    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 14    statement -> PRINT STRING SEMI
Rule 15    params -> NAME
Rule 16    params -> NAME COMMA params
Rule 17    statement -> expression INFF statement
Rule 18    statement -> expression SUP statement
Rule 19    statement -> expression and statement
Rule 20    statement -> expression or statement
Rule 21    statement -> expression SEMI
Rule 22    statement -> RETURN expression SEMI
Rule 23    statement -> FUNCTION NAME LPAREN RPAREN START bloc END
Rule 24    statement -> FUNCTION NAME LPAREN params RPAREN START bloc END
Rule 25    statement -> NAME LPAREN RPAREN SEMI
Rule 26    statement -> NAME LPAREN param_call RPAREN SEMI
Rule 27    param_call -> expression
Rule 28    param_call -> expression COMMA param_call
Rule 29    statement -> DEFINE NAME EQUALS expression SEMI
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> expression or expression
Rule 35    expression -> expression and expression
Rule 36    expression -> expression SUP expression
Rule 37    expression -> expression INFF expression
Rule 38    expression -> expression ISEQUAL expression
Rule 39    expression -> expression NOTEQUAL expression
Rule 40    expression -> expression ET expression
Rule 41    expression -> expression OU expression
Rule 42    statement -> NAME INCR SEMI
Rule 43    statement -> NAME DECR SEMI
Rule 44    statement -> NAME INCR
Rule 45    statement -> NAME DECR
Rule 46    statement -> NAME PLUSEQ NUMBER SEMI
Rule 47    statement -> NAME MINEQ NUMBER SEMI
Rule 48    statement -> NAME PLUSEQ NUMBER
Rule 49    statement -> NAME MINEQ NUMBER
Rule 50    expression -> MINUS expression
Rule 51    expression -> LPAREN expression RPAREN
Rule 52    expression -> NUMBER
Rule 53    expression -> NAME

Terminals, with rules where they appear

COMMA                : 7 16 28
COMMENT              : 
COMMENTS             : 8
DECR                 : 43 45
DEFINE               : 29
DIVIDE               : 33
ELSE                 : 11 12
ELSEIF               : 11
END                  : 23 24
EQUALS               : 4 5 29
ET                   : 40
FOR                  : 7
FUNCTION             : 23 24
IF                   : 9 10 11 12
INCR                 : 42 44
INFF                 : 17 37
ISEQUAL              : 38
LACC                 : 6 7 10 11 11 11 12 12
LPAREN               : 7 13 23 24 25 26 51
MINEQ                : 47 49
MINUS                : 31 50
NAME                 : 4 5 15 16 23 24 25 26 29 42 43 44 45 46 47 48 49 53
NOTEQUAL             : 39
NUMBER               : 7 46 47 48 49 52
OU                   : 41
PLUS                 : 30
PLUSEQ               : 46 48
PRINT                : 13 14
RACC                 : 6 7 10 11 11 11 12 12
RETURN               : 22
RPAREN               : 7 13 23 24 25 26 51
SEMI                 : 4 13 14 21 22 25 26 29 42 43 46 47
START                : 23 24
STRING               : 14
SUP                  : 18 36
THEN                 : 9 10 11 11 12
TIMES                : 32
TO                   : 7
WHILE                : 6
and                  : 19 35
error                : 
or                   : 20 34

Nonterminals, with rules where they appear

bloc                 : 1 2 6 7 10 11 11 11 12 12 23 24
expression           : 4 5 6 9 10 11 11 12 13 17 18 19 20 21 22 27 28 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 50 51
param_call           : 26 28
params               : 16 24
start                : 0
statement            : 2 3 7 7 9 17 18 19 20

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    statement                      shift and go to state 17
    expression                     shift and go to state 5

state 3

    (3) bloc -> statement .

    NAME            reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    COMMENTS        reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    RETURN          reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    DEFINE          reduce using rule 3 (bloc -> statement .)
    MINUS           reduce using rule 3 (bloc -> statement .)
    LPAREN          reduce using rule 3 (bloc -> statement .)
    NUMBER          reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    LACC            reduce using rule 3 (bloc -> statement .)
    END             reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> NAME . EQUALS expression SEMI
    (5) statement -> NAME . EQUALS expression
    (25) statement -> NAME . LPAREN RPAREN SEMI
    (26) statement -> NAME . LPAREN param_call RPAREN SEMI
    (42) statement -> NAME . INCR SEMI
    (43) statement -> NAME . DECR SEMI
    (44) statement -> NAME . INCR
    (45) statement -> NAME . DECR
    (46) statement -> NAME . PLUSEQ NUMBER SEMI
    (47) statement -> NAME . MINEQ NUMBER SEMI
    (48) statement -> NAME . PLUSEQ NUMBER
    (49) statement -> NAME . MINEQ NUMBER
    (53) expression -> NAME .

    EQUALS          shift and go to state 18
    LPAREN          shift and go to state 19
    INCR            shift and go to state 20
    DECR            shift and go to state 21
    PLUSEQ          shift and go to state 22
    MINEQ           shift and go to state 23
    INFF            reduce using rule 53 (expression -> NAME .)
    SUP             reduce using rule 53 (expression -> NAME .)
    and             reduce using rule 53 (expression -> NAME .)
    or              reduce using rule 53 (expression -> NAME .)
    SEMI            reduce using rule 53 (expression -> NAME .)
    PLUS            reduce using rule 53 (expression -> NAME .)
    MINUS           reduce using rule 53 (expression -> NAME .)
    TIMES           reduce using rule 53 (expression -> NAME .)
    DIVIDE          reduce using rule 53 (expression -> NAME .)
    ISEQUAL         reduce using rule 53 (expression -> NAME .)
    NOTEQUAL        reduce using rule 53 (expression -> NAME .)
    ET              reduce using rule 53 (expression -> NAME .)
    OU              reduce using rule 53 (expression -> NAME .)


state 5

    (17) statement -> expression . INFF statement
    (18) statement -> expression . SUP statement
    (19) statement -> expression . and statement
    (20) statement -> expression . or statement
    (21) statement -> expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            shift and go to state 24
    SUP             shift and go to state 25
    and             shift and go to state 26
    or              shift and go to state 27
    SEMI            shift and go to state 28
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 6

    (6) statement -> WHILE . expression RACC bloc LACC
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 37

state 7

    (7) statement -> FOR . LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC

    LPAREN          shift and go to state 39


state 8

    (51) expression -> LPAREN . expression RPAREN
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 40

state 9

    (52) expression -> NUMBER .

    INFF            reduce using rule 52 (expression -> NUMBER .)
    SUP             reduce using rule 52 (expression -> NUMBER .)
    and             reduce using rule 52 (expression -> NUMBER .)
    or              reduce using rule 52 (expression -> NUMBER .)
    SEMI            reduce using rule 52 (expression -> NUMBER .)
    PLUS            reduce using rule 52 (expression -> NUMBER .)
    MINUS           reduce using rule 52 (expression -> NUMBER .)
    TIMES           reduce using rule 52 (expression -> NUMBER .)
    DIVIDE          reduce using rule 52 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 52 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 52 (expression -> NUMBER .)
    ET              reduce using rule 52 (expression -> NUMBER .)
    OU              reduce using rule 52 (expression -> NUMBER .)
    RACC            reduce using rule 52 (expression -> NUMBER .)
    RPAREN          reduce using rule 52 (expression -> NUMBER .)
    THEN            reduce using rule 52 (expression -> NUMBER .)
    NAME            reduce using rule 52 (expression -> NUMBER .)
    WHILE           reduce using rule 52 (expression -> NUMBER .)
    FOR             reduce using rule 52 (expression -> NUMBER .)
    COMMENTS        reduce using rule 52 (expression -> NUMBER .)
    IF              reduce using rule 52 (expression -> NUMBER .)
    PRINT           reduce using rule 52 (expression -> NUMBER .)
    RETURN          reduce using rule 52 (expression -> NUMBER .)
    FUNCTION        reduce using rule 52 (expression -> NUMBER .)
    DEFINE          reduce using rule 52 (expression -> NUMBER .)
    LPAREN          reduce using rule 52 (expression -> NUMBER .)
    NUMBER          reduce using rule 52 (expression -> NUMBER .)
    $end            reduce using rule 52 (expression -> NUMBER .)
    TO              reduce using rule 52 (expression -> NUMBER .)
    LACC            reduce using rule 52 (expression -> NUMBER .)
    END             reduce using rule 52 (expression -> NUMBER .)
    COMMA           reduce using rule 52 (expression -> NUMBER .)


state 10

    (8) statement -> COMMENTS .

    NAME            reduce using rule 8 (statement -> COMMENTS .)
    WHILE           reduce using rule 8 (statement -> COMMENTS .)
    FOR             reduce using rule 8 (statement -> COMMENTS .)
    COMMENTS        reduce using rule 8 (statement -> COMMENTS .)
    IF              reduce using rule 8 (statement -> COMMENTS .)
    PRINT           reduce using rule 8 (statement -> COMMENTS .)
    RETURN          reduce using rule 8 (statement -> COMMENTS .)
    FUNCTION        reduce using rule 8 (statement -> COMMENTS .)
    DEFINE          reduce using rule 8 (statement -> COMMENTS .)
    MINUS           reduce using rule 8 (statement -> COMMENTS .)
    LPAREN          reduce using rule 8 (statement -> COMMENTS .)
    NUMBER          reduce using rule 8 (statement -> COMMENTS .)
    $end            reduce using rule 8 (statement -> COMMENTS .)
    TO              reduce using rule 8 (statement -> COMMENTS .)
    LACC            reduce using rule 8 (statement -> COMMENTS .)
    END             reduce using rule 8 (statement -> COMMENTS .)
    RPAREN          reduce using rule 8 (statement -> COMMENTS .)


state 11

    (9) statement -> IF . expression THEN statement
    (10) statement -> IF . expression THEN RACC bloc LACC
    (11) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 41

state 12

    (13) statement -> PRINT . LPAREN expression RPAREN SEMI
    (14) statement -> PRINT . STRING SEMI

    LPAREN          shift and go to state 42
    STRING          shift and go to state 43


state 13

    (22) statement -> RETURN . expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 44

state 14

    (23) statement -> FUNCTION . NAME LPAREN RPAREN START bloc END
    (24) statement -> FUNCTION . NAME LPAREN params RPAREN START bloc END

    NAME            shift and go to state 45


state 15

    (29) statement -> DEFINE . NAME EQUALS expression SEMI

    NAME            shift and go to state 46


state 16

    (50) expression -> MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 47

state 17

    (2) bloc -> bloc statement .

    NAME            reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    COMMENTS        reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    RETURN          reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    DEFINE          reduce using rule 2 (bloc -> bloc statement .)
    MINUS           reduce using rule 2 (bloc -> bloc statement .)
    LPAREN          reduce using rule 2 (bloc -> bloc statement .)
    NUMBER          reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    LACC            reduce using rule 2 (bloc -> bloc statement .)
    END             reduce using rule 2 (bloc -> bloc statement .)


state 18

    (4) statement -> NAME EQUALS . expression SEMI
    (5) statement -> NAME EQUALS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 48

state 19

    (25) statement -> NAME LPAREN . RPAREN SEMI
    (26) statement -> NAME LPAREN . param_call RPAREN SEMI
    (27) param_call -> . expression
    (28) param_call -> . expression COMMA param_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    RPAREN          shift and go to state 49
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    param_call                     shift and go to state 50
    expression                     shift and go to state 51

state 20

    (42) statement -> NAME INCR . SEMI
    (44) statement -> NAME INCR .

    SEMI            shift and go to state 52
    NAME            reduce using rule 44 (statement -> NAME INCR .)
    WHILE           reduce using rule 44 (statement -> NAME INCR .)
    FOR             reduce using rule 44 (statement -> NAME INCR .)
    COMMENTS        reduce using rule 44 (statement -> NAME INCR .)
    IF              reduce using rule 44 (statement -> NAME INCR .)
    PRINT           reduce using rule 44 (statement -> NAME INCR .)
    RETURN          reduce using rule 44 (statement -> NAME INCR .)
    FUNCTION        reduce using rule 44 (statement -> NAME INCR .)
    DEFINE          reduce using rule 44 (statement -> NAME INCR .)
    MINUS           reduce using rule 44 (statement -> NAME INCR .)
    LPAREN          reduce using rule 44 (statement -> NAME INCR .)
    NUMBER          reduce using rule 44 (statement -> NAME INCR .)
    $end            reduce using rule 44 (statement -> NAME INCR .)
    TO              reduce using rule 44 (statement -> NAME INCR .)
    LACC            reduce using rule 44 (statement -> NAME INCR .)
    END             reduce using rule 44 (statement -> NAME INCR .)
    RPAREN          reduce using rule 44 (statement -> NAME INCR .)


state 21

    (43) statement -> NAME DECR . SEMI
    (45) statement -> NAME DECR .

    SEMI            shift and go to state 53
    NAME            reduce using rule 45 (statement -> NAME DECR .)
    WHILE           reduce using rule 45 (statement -> NAME DECR .)
    FOR             reduce using rule 45 (statement -> NAME DECR .)
    COMMENTS        reduce using rule 45 (statement -> NAME DECR .)
    IF              reduce using rule 45 (statement -> NAME DECR .)
    PRINT           reduce using rule 45 (statement -> NAME DECR .)
    RETURN          reduce using rule 45 (statement -> NAME DECR .)
    FUNCTION        reduce using rule 45 (statement -> NAME DECR .)
    DEFINE          reduce using rule 45 (statement -> NAME DECR .)
    MINUS           reduce using rule 45 (statement -> NAME DECR .)
    LPAREN          reduce using rule 45 (statement -> NAME DECR .)
    NUMBER          reduce using rule 45 (statement -> NAME DECR .)
    $end            reduce using rule 45 (statement -> NAME DECR .)
    TO              reduce using rule 45 (statement -> NAME DECR .)
    LACC            reduce using rule 45 (statement -> NAME DECR .)
    END             reduce using rule 45 (statement -> NAME DECR .)
    RPAREN          reduce using rule 45 (statement -> NAME DECR .)


state 22

    (46) statement -> NAME PLUSEQ . NUMBER SEMI
    (48) statement -> NAME PLUSEQ . NUMBER

    NUMBER          shift and go to state 54


state 23

    (47) statement -> NAME MINEQ . NUMBER SEMI
    (49) statement -> NAME MINEQ . NUMBER

    NUMBER          shift and go to state 55


state 24

    (17) statement -> expression INFF . statement
    (37) expression -> expression INFF . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 56
    statement                      shift and go to state 57

state 25

    (18) statement -> expression SUP . statement
    (36) expression -> expression SUP . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 58
    statement                      shift and go to state 59

state 26

    (19) statement -> expression and . statement
    (35) expression -> expression and . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 60
    statement                      shift and go to state 61

state 27

    (20) statement -> expression or . statement
    (34) expression -> expression or . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 62
    statement                      shift and go to state 63

state 28

    (21) statement -> expression SEMI .

    NAME            reduce using rule 21 (statement -> expression SEMI .)
    WHILE           reduce using rule 21 (statement -> expression SEMI .)
    FOR             reduce using rule 21 (statement -> expression SEMI .)
    COMMENTS        reduce using rule 21 (statement -> expression SEMI .)
    IF              reduce using rule 21 (statement -> expression SEMI .)
    PRINT           reduce using rule 21 (statement -> expression SEMI .)
    RETURN          reduce using rule 21 (statement -> expression SEMI .)
    FUNCTION        reduce using rule 21 (statement -> expression SEMI .)
    DEFINE          reduce using rule 21 (statement -> expression SEMI .)
    MINUS           reduce using rule 21 (statement -> expression SEMI .)
    LPAREN          reduce using rule 21 (statement -> expression SEMI .)
    NUMBER          reduce using rule 21 (statement -> expression SEMI .)
    $end            reduce using rule 21 (statement -> expression SEMI .)
    TO              reduce using rule 21 (statement -> expression SEMI .)
    LACC            reduce using rule 21 (statement -> expression SEMI .)
    END             reduce using rule 21 (statement -> expression SEMI .)
    RPAREN          reduce using rule 21 (statement -> expression SEMI .)


state 29

    (30) expression -> expression PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 64

state 30

    (31) expression -> expression MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 65

state 31

    (32) expression -> expression TIMES . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 66

state 32

    (33) expression -> expression DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 67

state 33

    (38) expression -> expression ISEQUAL . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 68

state 34

    (39) expression -> expression NOTEQUAL . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 69

state 35

    (40) expression -> expression ET . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 70

state 36

    (41) expression -> expression OU . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 71

state 37

    (6) statement -> WHILE expression . RACC bloc LACC
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    RACC            shift and go to state 72
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 38

    (53) expression -> NAME .

    RACC            reduce using rule 53 (expression -> NAME .)
    PLUS            reduce using rule 53 (expression -> NAME .)
    MINUS           reduce using rule 53 (expression -> NAME .)
    TIMES           reduce using rule 53 (expression -> NAME .)
    DIVIDE          reduce using rule 53 (expression -> NAME .)
    or              reduce using rule 53 (expression -> NAME .)
    and             reduce using rule 53 (expression -> NAME .)
    SUP             reduce using rule 53 (expression -> NAME .)
    INFF            reduce using rule 53 (expression -> NAME .)
    ISEQUAL         reduce using rule 53 (expression -> NAME .)
    NOTEQUAL        reduce using rule 53 (expression -> NAME .)
    ET              reduce using rule 53 (expression -> NAME .)
    OU              reduce using rule 53 (expression -> NAME .)
    RPAREN          reduce using rule 53 (expression -> NAME .)
    THEN            reduce using rule 53 (expression -> NAME .)
    SEMI            reduce using rule 53 (expression -> NAME .)
    NAME            reduce using rule 53 (expression -> NAME .)
    WHILE           reduce using rule 53 (expression -> NAME .)
    FOR             reduce using rule 53 (expression -> NAME .)
    COMMENTS        reduce using rule 53 (expression -> NAME .)
    IF              reduce using rule 53 (expression -> NAME .)
    PRINT           reduce using rule 53 (expression -> NAME .)
    RETURN          reduce using rule 53 (expression -> NAME .)
    FUNCTION        reduce using rule 53 (expression -> NAME .)
    DEFINE          reduce using rule 53 (expression -> NAME .)
    LPAREN          reduce using rule 53 (expression -> NAME .)
    NUMBER          reduce using rule 53 (expression -> NAME .)
    $end            reduce using rule 53 (expression -> NAME .)
    TO              reduce using rule 53 (expression -> NAME .)
    LACC            reduce using rule 53 (expression -> NAME .)
    END             reduce using rule 53 (expression -> NAME .)
    COMMA           reduce using rule 53 (expression -> NAME .)


state 39

    (7) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    statement                      shift and go to state 77
    expression                     shift and go to state 5

state 40

    (51) expression -> LPAREN expression . RPAREN
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 41

    (9) statement -> IF expression . THEN statement
    (10) statement -> IF expression . THEN RACC bloc LACC
    (11) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    THEN            shift and go to state 79
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 42

    (13) statement -> PRINT LPAREN . expression RPAREN SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 80

state 43

    (14) statement -> PRINT STRING . SEMI

    SEMI            shift and go to state 81


state 44

    (22) statement -> RETURN expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    SEMI            shift and go to state 82
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 45

    (23) statement -> FUNCTION NAME . LPAREN RPAREN START bloc END
    (24) statement -> FUNCTION NAME . LPAREN params RPAREN START bloc END

    LPAREN          shift and go to state 83


state 46

    (29) statement -> DEFINE NAME . EQUALS expression SEMI

    EQUALS          shift and go to state 84


state 47

    (50) expression -> MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            reduce using rule 50 (expression -> MINUS expression .)
    SUP             reduce using rule 50 (expression -> MINUS expression .)
    and             reduce using rule 50 (expression -> MINUS expression .)
    or              reduce using rule 50 (expression -> MINUS expression .)
    SEMI            reduce using rule 50 (expression -> MINUS expression .)
    PLUS            reduce using rule 50 (expression -> MINUS expression .)
    MINUS           reduce using rule 50 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 50 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 50 (expression -> MINUS expression .)
    ET              reduce using rule 50 (expression -> MINUS expression .)
    OU              reduce using rule 50 (expression -> MINUS expression .)
    RACC            reduce using rule 50 (expression -> MINUS expression .)
    RPAREN          reduce using rule 50 (expression -> MINUS expression .)
    THEN            reduce using rule 50 (expression -> MINUS expression .)
    NAME            reduce using rule 50 (expression -> MINUS expression .)
    WHILE           reduce using rule 50 (expression -> MINUS expression .)
    FOR             reduce using rule 50 (expression -> MINUS expression .)
    COMMENTS        reduce using rule 50 (expression -> MINUS expression .)
    IF              reduce using rule 50 (expression -> MINUS expression .)
    PRINT           reduce using rule 50 (expression -> MINUS expression .)
    RETURN          reduce using rule 50 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 50 (expression -> MINUS expression .)
    DEFINE          reduce using rule 50 (expression -> MINUS expression .)
    LPAREN          reduce using rule 50 (expression -> MINUS expression .)
    NUMBER          reduce using rule 50 (expression -> MINUS expression .)
    $end            reduce using rule 50 (expression -> MINUS expression .)
    TO              reduce using rule 50 (expression -> MINUS expression .)
    LACC            reduce using rule 50 (expression -> MINUS expression .)
    END             reduce using rule 50 (expression -> MINUS expression .)
    COMMA           reduce using rule 50 (expression -> MINUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32

  ! TIMES           [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! or              [ shift and go to state 73 ]
  ! and             [ shift and go to state 74 ]
  ! SUP             [ shift and go to state 75 ]
  ! INFF            [ shift and go to state 76 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 48

    (4) statement -> NAME EQUALS expression . SEMI
    (5) statement -> NAME EQUALS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    SEMI            shift and go to state 85
    NAME            reduce using rule 5 (statement -> NAME EQUALS expression .)
    WHILE           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FOR             reduce using rule 5 (statement -> NAME EQUALS expression .)
    COMMENTS        reduce using rule 5 (statement -> NAME EQUALS expression .)
    IF              reduce using rule 5 (statement -> NAME EQUALS expression .)
    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression .)
    RETURN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    FUNCTION        reduce using rule 5 (statement -> NAME EQUALS expression .)
    DEFINE          reduce using rule 5 (statement -> NAME EQUALS expression .)
    LPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    NUMBER          reduce using rule 5 (statement -> NAME EQUALS expression .)
    $end            reduce using rule 5 (statement -> NAME EQUALS expression .)
    TO              reduce using rule 5 (statement -> NAME EQUALS expression .)
    LACC            reduce using rule 5 (statement -> NAME EQUALS expression .)
    END             reduce using rule 5 (statement -> NAME EQUALS expression .)
    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36

  ! MINUS           [ reduce using rule 5 (statement -> NAME EQUALS expression .) ]


state 49

    (25) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 86


state 50

    (26) statement -> NAME LPAREN param_call . RPAREN SEMI

    RPAREN          shift and go to state 87


state 51

    (27) param_call -> expression .
    (28) param_call -> expression . COMMA param_call
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    RPAREN          reduce using rule 27 (param_call -> expression .)
    COMMA           shift and go to state 88
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 52

    (42) statement -> NAME INCR SEMI .

    NAME            reduce using rule 42 (statement -> NAME INCR SEMI .)
    WHILE           reduce using rule 42 (statement -> NAME INCR SEMI .)
    FOR             reduce using rule 42 (statement -> NAME INCR SEMI .)
    COMMENTS        reduce using rule 42 (statement -> NAME INCR SEMI .)
    IF              reduce using rule 42 (statement -> NAME INCR SEMI .)
    PRINT           reduce using rule 42 (statement -> NAME INCR SEMI .)
    RETURN          reduce using rule 42 (statement -> NAME INCR SEMI .)
    FUNCTION        reduce using rule 42 (statement -> NAME INCR SEMI .)
    DEFINE          reduce using rule 42 (statement -> NAME INCR SEMI .)
    MINUS           reduce using rule 42 (statement -> NAME INCR SEMI .)
    LPAREN          reduce using rule 42 (statement -> NAME INCR SEMI .)
    NUMBER          reduce using rule 42 (statement -> NAME INCR SEMI .)
    $end            reduce using rule 42 (statement -> NAME INCR SEMI .)
    TO              reduce using rule 42 (statement -> NAME INCR SEMI .)
    LACC            reduce using rule 42 (statement -> NAME INCR SEMI .)
    END             reduce using rule 42 (statement -> NAME INCR SEMI .)
    RPAREN          reduce using rule 42 (statement -> NAME INCR SEMI .)


state 53

    (43) statement -> NAME DECR SEMI .

    NAME            reduce using rule 43 (statement -> NAME DECR SEMI .)
    WHILE           reduce using rule 43 (statement -> NAME DECR SEMI .)
    FOR             reduce using rule 43 (statement -> NAME DECR SEMI .)
    COMMENTS        reduce using rule 43 (statement -> NAME DECR SEMI .)
    IF              reduce using rule 43 (statement -> NAME DECR SEMI .)
    PRINT           reduce using rule 43 (statement -> NAME DECR SEMI .)
    RETURN          reduce using rule 43 (statement -> NAME DECR SEMI .)
    FUNCTION        reduce using rule 43 (statement -> NAME DECR SEMI .)
    DEFINE          reduce using rule 43 (statement -> NAME DECR SEMI .)
    MINUS           reduce using rule 43 (statement -> NAME DECR SEMI .)
    LPAREN          reduce using rule 43 (statement -> NAME DECR SEMI .)
    NUMBER          reduce using rule 43 (statement -> NAME DECR SEMI .)
    $end            reduce using rule 43 (statement -> NAME DECR SEMI .)
    TO              reduce using rule 43 (statement -> NAME DECR SEMI .)
    LACC            reduce using rule 43 (statement -> NAME DECR SEMI .)
    END             reduce using rule 43 (statement -> NAME DECR SEMI .)
    RPAREN          reduce using rule 43 (statement -> NAME DECR SEMI .)


state 54

    (46) statement -> NAME PLUSEQ NUMBER . SEMI
    (48) statement -> NAME PLUSEQ NUMBER .

    SEMI            shift and go to state 89
    NAME            reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    WHILE           reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    FOR             reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    COMMENTS        reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    IF              reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    PRINT           reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    RETURN          reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    FUNCTION        reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    DEFINE          reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    MINUS           reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    LPAREN          reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    NUMBER          reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    $end            reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    TO              reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    LACC            reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    END             reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)
    RPAREN          reduce using rule 48 (statement -> NAME PLUSEQ NUMBER .)


state 55

    (47) statement -> NAME MINEQ NUMBER . SEMI
    (49) statement -> NAME MINEQ NUMBER .

    SEMI            shift and go to state 90
    NAME            reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    WHILE           reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    FOR             reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    COMMENTS        reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    IF              reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    PRINT           reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    RETURN          reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    FUNCTION        reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    DEFINE          reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    MINUS           reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    LPAREN          reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    NUMBER          reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    $end            reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    TO              reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    LACC            reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    END             reduce using rule 49 (statement -> NAME MINEQ NUMBER .)
    RPAREN          reduce using rule 49 (statement -> NAME MINEQ NUMBER .)


state 56

    (37) expression -> expression INFF expression .
    (17) statement -> expression . INFF statement
    (18) statement -> expression . SUP statement
    (19) statement -> expression . and statement
    (20) statement -> expression . or statement
    (21) statement -> expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    INFF            shift and go to state 24
    SUP             shift and go to state 25
    and             shift and go to state 26
    or              shift and go to state 27
    SEMI            shift and go to state 28
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36

  ! INFF            [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! SEMI            [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 37 (expression -> expression INFF expression .) ]


state 57

    (17) statement -> expression INFF statement .

    NAME            reduce using rule 17 (statement -> expression INFF statement .)
    WHILE           reduce using rule 17 (statement -> expression INFF statement .)
    FOR             reduce using rule 17 (statement -> expression INFF statement .)
    COMMENTS        reduce using rule 17 (statement -> expression INFF statement .)
    IF              reduce using rule 17 (statement -> expression INFF statement .)
    PRINT           reduce using rule 17 (statement -> expression INFF statement .)
    RETURN          reduce using rule 17 (statement -> expression INFF statement .)
    FUNCTION        reduce using rule 17 (statement -> expression INFF statement .)
    DEFINE          reduce using rule 17 (statement -> expression INFF statement .)
    MINUS           reduce using rule 17 (statement -> expression INFF statement .)
    LPAREN          reduce using rule 17 (statement -> expression INFF statement .)
    NUMBER          reduce using rule 17 (statement -> expression INFF statement .)
    $end            reduce using rule 17 (statement -> expression INFF statement .)
    TO              reduce using rule 17 (statement -> expression INFF statement .)
    LACC            reduce using rule 17 (statement -> expression INFF statement .)
    END             reduce using rule 17 (statement -> expression INFF statement .)
    RPAREN          reduce using rule 17 (statement -> expression INFF statement .)


state 58

    (36) expression -> expression SUP expression .
    (17) statement -> expression . INFF statement
    (18) statement -> expression . SUP statement
    (19) statement -> expression . and statement
    (20) statement -> expression . or statement
    (21) statement -> expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            reduce using rule 36 (expression -> expression SUP expression .)
    and             reduce using rule 36 (expression -> expression SUP expression .)
    or              reduce using rule 36 (expression -> expression SUP expression .)
    SEMI            reduce using rule 36 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 36 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 36 (expression -> expression SUP expression .)
    ET              reduce using rule 36 (expression -> expression SUP expression .)
    OU              reduce using rule 36 (expression -> expression SUP expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    SUP             shift and go to state 25

  ! SUP             [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! INFF            [ shift and go to state 24 ]
  ! and             [ shift and go to state 26 ]
  ! or              [ shift and go to state 27 ]
  ! SEMI            [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 59

    (18) statement -> expression SUP statement .

    NAME            reduce using rule 18 (statement -> expression SUP statement .)
    WHILE           reduce using rule 18 (statement -> expression SUP statement .)
    FOR             reduce using rule 18 (statement -> expression SUP statement .)
    COMMENTS        reduce using rule 18 (statement -> expression SUP statement .)
    IF              reduce using rule 18 (statement -> expression SUP statement .)
    PRINT           reduce using rule 18 (statement -> expression SUP statement .)
    RETURN          reduce using rule 18 (statement -> expression SUP statement .)
    FUNCTION        reduce using rule 18 (statement -> expression SUP statement .)
    DEFINE          reduce using rule 18 (statement -> expression SUP statement .)
    MINUS           reduce using rule 18 (statement -> expression SUP statement .)
    LPAREN          reduce using rule 18 (statement -> expression SUP statement .)
    NUMBER          reduce using rule 18 (statement -> expression SUP statement .)
    $end            reduce using rule 18 (statement -> expression SUP statement .)
    TO              reduce using rule 18 (statement -> expression SUP statement .)
    LACC            reduce using rule 18 (statement -> expression SUP statement .)
    END             reduce using rule 18 (statement -> expression SUP statement .)
    RPAREN          reduce using rule 18 (statement -> expression SUP statement .)


state 60

    (35) expression -> expression and expression .
    (17) statement -> expression . INFF statement
    (18) statement -> expression . SUP statement
    (19) statement -> expression . and statement
    (20) statement -> expression . or statement
    (21) statement -> expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            reduce using rule 35 (expression -> expression and expression .)
    and             reduce using rule 35 (expression -> expression and expression .)
    or              reduce using rule 35 (expression -> expression and expression .)
    SEMI            reduce using rule 35 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 35 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 35 (expression -> expression and expression .)
    ET              reduce using rule 35 (expression -> expression and expression .)
    OU              reduce using rule 35 (expression -> expression and expression .)
    SUP             shift and go to state 25
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32

  ! SUP             [ reduce using rule 35 (expression -> expression and expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression and expression .) ]
  ! INFF            [ shift and go to state 24 ]
  ! and             [ shift and go to state 26 ]
  ! or              [ shift and go to state 27 ]
  ! SEMI            [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 61

    (19) statement -> expression and statement .

    NAME            reduce using rule 19 (statement -> expression and statement .)
    WHILE           reduce using rule 19 (statement -> expression and statement .)
    FOR             reduce using rule 19 (statement -> expression and statement .)
    COMMENTS        reduce using rule 19 (statement -> expression and statement .)
    IF              reduce using rule 19 (statement -> expression and statement .)
    PRINT           reduce using rule 19 (statement -> expression and statement .)
    RETURN          reduce using rule 19 (statement -> expression and statement .)
    FUNCTION        reduce using rule 19 (statement -> expression and statement .)
    DEFINE          reduce using rule 19 (statement -> expression and statement .)
    MINUS           reduce using rule 19 (statement -> expression and statement .)
    LPAREN          reduce using rule 19 (statement -> expression and statement .)
    NUMBER          reduce using rule 19 (statement -> expression and statement .)
    $end            reduce using rule 19 (statement -> expression and statement .)
    TO              reduce using rule 19 (statement -> expression and statement .)
    LACC            reduce using rule 19 (statement -> expression and statement .)
    END             reduce using rule 19 (statement -> expression and statement .)
    RPAREN          reduce using rule 19 (statement -> expression and statement .)


state 62

    (34) expression -> expression or expression .
    (17) statement -> expression . INFF statement
    (18) statement -> expression . SUP statement
    (19) statement -> expression . and statement
    (20) statement -> expression . or statement
    (21) statement -> expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            reduce using rule 34 (expression -> expression or expression .)
    or              reduce using rule 34 (expression -> expression or expression .)
    SEMI            reduce using rule 34 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 34 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 34 (expression -> expression or expression .)
    ET              reduce using rule 34 (expression -> expression or expression .)
    OU              reduce using rule 34 (expression -> expression or expression .)
    SUP             shift and go to state 25
    and             shift and go to state 26
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32

  ! SUP             [ reduce using rule 34 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 34 (expression -> expression or expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression or expression .) ]
  ! INFF            [ shift and go to state 24 ]
  ! or              [ shift and go to state 27 ]
  ! SEMI            [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 63

    (20) statement -> expression or statement .

    NAME            reduce using rule 20 (statement -> expression or statement .)
    WHILE           reduce using rule 20 (statement -> expression or statement .)
    FOR             reduce using rule 20 (statement -> expression or statement .)
    COMMENTS        reduce using rule 20 (statement -> expression or statement .)
    IF              reduce using rule 20 (statement -> expression or statement .)
    PRINT           reduce using rule 20 (statement -> expression or statement .)
    RETURN          reduce using rule 20 (statement -> expression or statement .)
    FUNCTION        reduce using rule 20 (statement -> expression or statement .)
    DEFINE          reduce using rule 20 (statement -> expression or statement .)
    MINUS           reduce using rule 20 (statement -> expression or statement .)
    LPAREN          reduce using rule 20 (statement -> expression or statement .)
    NUMBER          reduce using rule 20 (statement -> expression or statement .)
    $end            reduce using rule 20 (statement -> expression or statement .)
    TO              reduce using rule 20 (statement -> expression or statement .)
    LACC            reduce using rule 20 (statement -> expression or statement .)
    END             reduce using rule 20 (statement -> expression or statement .)
    RPAREN          reduce using rule 20 (statement -> expression or statement .)


state 64

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            reduce using rule 30 (expression -> expression PLUS expression .)
    SUP             reduce using rule 30 (expression -> expression PLUS expression .)
    and             reduce using rule 30 (expression -> expression PLUS expression .)
    or              reduce using rule 30 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 30 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 30 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 30 (expression -> expression PLUS expression .)
    ET              reduce using rule 30 (expression -> expression PLUS expression .)
    OU              reduce using rule 30 (expression -> expression PLUS expression .)
    RACC            reduce using rule 30 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression PLUS expression .)
    THEN            reduce using rule 30 (expression -> expression PLUS expression .)
    NAME            reduce using rule 30 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 30 (expression -> expression PLUS expression .)
    FOR             reduce using rule 30 (expression -> expression PLUS expression .)
    COMMENTS        reduce using rule 30 (expression -> expression PLUS expression .)
    IF              reduce using rule 30 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 30 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 30 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 30 (expression -> expression PLUS expression .)
    DEFINE          reduce using rule 30 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 30 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 30 (expression -> expression PLUS expression .)
    $end            reduce using rule 30 (expression -> expression PLUS expression .)
    TO              reduce using rule 30 (expression -> expression PLUS expression .)
    LACC            reduce using rule 30 (expression -> expression PLUS expression .)
    END             reduce using rule 30 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32

  ! TIMES           [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! or              [ shift and go to state 73 ]
  ! and             [ shift and go to state 74 ]
  ! SUP             [ shift and go to state 75 ]
  ! INFF            [ shift and go to state 76 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 65

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            reduce using rule 31 (expression -> expression MINUS expression .)
    SUP             reduce using rule 31 (expression -> expression MINUS expression .)
    and             reduce using rule 31 (expression -> expression MINUS expression .)
    or              reduce using rule 31 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 31 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 31 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 31 (expression -> expression MINUS expression .)
    ET              reduce using rule 31 (expression -> expression MINUS expression .)
    OU              reduce using rule 31 (expression -> expression MINUS expression .)
    RACC            reduce using rule 31 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression MINUS expression .)
    THEN            reduce using rule 31 (expression -> expression MINUS expression .)
    NAME            reduce using rule 31 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 31 (expression -> expression MINUS expression .)
    FOR             reduce using rule 31 (expression -> expression MINUS expression .)
    COMMENTS        reduce using rule 31 (expression -> expression MINUS expression .)
    IF              reduce using rule 31 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 31 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 31 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 31 (expression -> expression MINUS expression .)
    DEFINE          reduce using rule 31 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 31 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 31 (expression -> expression MINUS expression .)
    $end            reduce using rule 31 (expression -> expression MINUS expression .)
    TO              reduce using rule 31 (expression -> expression MINUS expression .)
    LACC            reduce using rule 31 (expression -> expression MINUS expression .)
    END             reduce using rule 31 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32

  ! TIMES           [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! or              [ shift and go to state 73 ]
  ! and             [ shift and go to state 74 ]
  ! SUP             [ shift and go to state 75 ]
  ! INFF            [ shift and go to state 76 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 66

    (32) expression -> expression TIMES expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            reduce using rule 32 (expression -> expression TIMES expression .)
    SUP             reduce using rule 32 (expression -> expression TIMES expression .)
    and             reduce using rule 32 (expression -> expression TIMES expression .)
    or              reduce using rule 32 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 32 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 32 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 32 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 32 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 32 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 32 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 32 (expression -> expression TIMES expression .)
    ET              reduce using rule 32 (expression -> expression TIMES expression .)
    OU              reduce using rule 32 (expression -> expression TIMES expression .)
    RACC            reduce using rule 32 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 32 (expression -> expression TIMES expression .)
    THEN            reduce using rule 32 (expression -> expression TIMES expression .)
    NAME            reduce using rule 32 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 32 (expression -> expression TIMES expression .)
    FOR             reduce using rule 32 (expression -> expression TIMES expression .)
    COMMENTS        reduce using rule 32 (expression -> expression TIMES expression .)
    IF              reduce using rule 32 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 32 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 32 (expression -> expression TIMES expression .)
    FUNCTION        reduce using rule 32 (expression -> expression TIMES expression .)
    DEFINE          reduce using rule 32 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 32 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 32 (expression -> expression TIMES expression .)
    $end            reduce using rule 32 (expression -> expression TIMES expression .)
    TO              reduce using rule 32 (expression -> expression TIMES expression .)
    LACC            reduce using rule 32 (expression -> expression TIMES expression .)
    END             reduce using rule 32 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 32 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! or              [ shift and go to state 73 ]
  ! and             [ shift and go to state 74 ]
  ! SUP             [ shift and go to state 75 ]
  ! INFF            [ shift and go to state 76 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 67

    (33) expression -> expression DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    INFF            reduce using rule 33 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 33 (expression -> expression DIVIDE expression .)
    and             reduce using rule 33 (expression -> expression DIVIDE expression .)
    or              reduce using rule 33 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 33 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 33 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 33 (expression -> expression DIVIDE expression .)
    ET              reduce using rule 33 (expression -> expression DIVIDE expression .)
    OU              reduce using rule 33 (expression -> expression DIVIDE expression .)
    RACC            reduce using rule 33 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 33 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 33 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 33 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 33 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 33 (expression -> expression DIVIDE expression .)
    COMMENTS        reduce using rule 33 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 33 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 33 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 33 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 33 (expression -> expression DIVIDE expression .)
    DEFINE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 33 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 33 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 33 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 33 (expression -> expression DIVIDE expression .)
    LACC            reduce using rule 33 (expression -> expression DIVIDE expression .)
    END             reduce using rule 33 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 33 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! or              [ shift and go to state 73 ]
  ! and             [ shift and go to state 74 ]
  ! SUP             [ shift and go to state 75 ]
  ! INFF            [ shift and go to state 76 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 68

    (38) expression -> expression ISEQUAL expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    SEMI            reduce using rule 38 (expression -> expression ISEQUAL expression .)
    RACC            reduce using rule 38 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 38 (expression -> expression ISEQUAL expression .)
    THEN            reduce using rule 38 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 38 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 38 (expression -> expression ISEQUAL expression .)
    FOR             reduce using rule 38 (expression -> expression ISEQUAL expression .)
    COMMENTS        reduce using rule 38 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 38 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 38 (expression -> expression ISEQUAL expression .)
    RETURN          reduce using rule 38 (expression -> expression ISEQUAL expression .)
    FUNCTION        reduce using rule 38 (expression -> expression ISEQUAL expression .)
    DEFINE          reduce using rule 38 (expression -> expression ISEQUAL expression .)
    LPAREN          reduce using rule 38 (expression -> expression ISEQUAL expression .)
    NUMBER          reduce using rule 38 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 38 (expression -> expression ISEQUAL expression .)
    TO              reduce using rule 38 (expression -> expression ISEQUAL expression .)
    LACC            reduce using rule 38 (expression -> expression ISEQUAL expression .)
    END             reduce using rule 38 (expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 38 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36

  ! INFF            [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! SUP             [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! and             [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! or              [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! ET              [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]
  ! OU              [ reduce using rule 38 (expression -> expression ISEQUAL expression .) ]


state 69

    (39) expression -> expression NOTEQUAL expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    SEMI            reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    RACC            reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    THEN            reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    COMMENTS        reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    RETURN          reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    FUNCTION        reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    DEFINE          reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    TO              reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    LACC            reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    END             reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 39 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36

  ! INFF            [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! SUP             [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! and             [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! or              [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! ET              [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]
  ! OU              [ reduce using rule 39 (expression -> expression NOTEQUAL expression .) ]


state 70

    (40) expression -> expression ET expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    SEMI            reduce using rule 40 (expression -> expression ET expression .)
    RACC            reduce using rule 40 (expression -> expression ET expression .)
    RPAREN          reduce using rule 40 (expression -> expression ET expression .)
    THEN            reduce using rule 40 (expression -> expression ET expression .)
    NAME            reduce using rule 40 (expression -> expression ET expression .)
    WHILE           reduce using rule 40 (expression -> expression ET expression .)
    FOR             reduce using rule 40 (expression -> expression ET expression .)
    COMMENTS        reduce using rule 40 (expression -> expression ET expression .)
    IF              reduce using rule 40 (expression -> expression ET expression .)
    PRINT           reduce using rule 40 (expression -> expression ET expression .)
    RETURN          reduce using rule 40 (expression -> expression ET expression .)
    FUNCTION        reduce using rule 40 (expression -> expression ET expression .)
    DEFINE          reduce using rule 40 (expression -> expression ET expression .)
    LPAREN          reduce using rule 40 (expression -> expression ET expression .)
    NUMBER          reduce using rule 40 (expression -> expression ET expression .)
    $end            reduce using rule 40 (expression -> expression ET expression .)
    TO              reduce using rule 40 (expression -> expression ET expression .)
    LACC            reduce using rule 40 (expression -> expression ET expression .)
    END             reduce using rule 40 (expression -> expression ET expression .)
    COMMA           reduce using rule 40 (expression -> expression ET expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36

  ! INFF            [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! SUP             [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! and             [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! or              [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! ISEQUAL         [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! ET              [ reduce using rule 40 (expression -> expression ET expression .) ]
  ! OU              [ reduce using rule 40 (expression -> expression ET expression .) ]


state 71

    (41) expression -> expression OU expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    SEMI            reduce using rule 41 (expression -> expression OU expression .)
    RACC            reduce using rule 41 (expression -> expression OU expression .)
    RPAREN          reduce using rule 41 (expression -> expression OU expression .)
    THEN            reduce using rule 41 (expression -> expression OU expression .)
    NAME            reduce using rule 41 (expression -> expression OU expression .)
    WHILE           reduce using rule 41 (expression -> expression OU expression .)
    FOR             reduce using rule 41 (expression -> expression OU expression .)
    COMMENTS        reduce using rule 41 (expression -> expression OU expression .)
    IF              reduce using rule 41 (expression -> expression OU expression .)
    PRINT           reduce using rule 41 (expression -> expression OU expression .)
    RETURN          reduce using rule 41 (expression -> expression OU expression .)
    FUNCTION        reduce using rule 41 (expression -> expression OU expression .)
    DEFINE          reduce using rule 41 (expression -> expression OU expression .)
    LPAREN          reduce using rule 41 (expression -> expression OU expression .)
    NUMBER          reduce using rule 41 (expression -> expression OU expression .)
    $end            reduce using rule 41 (expression -> expression OU expression .)
    TO              reduce using rule 41 (expression -> expression OU expression .)
    LACC            reduce using rule 41 (expression -> expression OU expression .)
    END             reduce using rule 41 (expression -> expression OU expression .)
    COMMA           reduce using rule 41 (expression -> expression OU expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36

  ! INFF            [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! SUP             [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! and             [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! or              [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! ISEQUAL         [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! NOTEQUAL        [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! ET              [ reduce using rule 41 (expression -> expression OU expression .) ]
  ! OU              [ reduce using rule 41 (expression -> expression OU expression .) ]


state 72

    (6) statement -> WHILE expression RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    bloc                           shift and go to state 91
    statement                      shift and go to state 3

state 73

    (34) expression -> expression or . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 92

state 74

    (35) expression -> expression and . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 93

state 75

    (36) expression -> expression SUP . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 94

state 76

    (37) expression -> expression INFF . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 95

state 77

    (7) statement -> FOR LPAREN statement . TO NUMBER COMMA statement RPAREN RACC bloc LACC

    TO              shift and go to state 96


state 78

    (51) expression -> LPAREN expression RPAREN .

    INFF            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    ET              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    OU              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RACC            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    COMMENTS        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DEFINE          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LACC            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 51 (expression -> LPAREN expression RPAREN .)


state 79

    (9) statement -> IF expression THEN . statement
    (10) statement -> IF expression THEN . RACC bloc LACC
    (11) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    RACC            shift and go to state 98
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    statement                      shift and go to state 97

state 80

    (13) statement -> PRINT LPAREN expression . RPAREN SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 81

    (14) statement -> PRINT STRING SEMI .

    NAME            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    WHILE           reduce using rule 14 (statement -> PRINT STRING SEMI .)
    FOR             reduce using rule 14 (statement -> PRINT STRING SEMI .)
    COMMENTS        reduce using rule 14 (statement -> PRINT STRING SEMI .)
    IF              reduce using rule 14 (statement -> PRINT STRING SEMI .)
    PRINT           reduce using rule 14 (statement -> PRINT STRING SEMI .)
    RETURN          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    FUNCTION        reduce using rule 14 (statement -> PRINT STRING SEMI .)
    DEFINE          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    MINUS           reduce using rule 14 (statement -> PRINT STRING SEMI .)
    LPAREN          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    NUMBER          reduce using rule 14 (statement -> PRINT STRING SEMI .)
    $end            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    TO              reduce using rule 14 (statement -> PRINT STRING SEMI .)
    LACC            reduce using rule 14 (statement -> PRINT STRING SEMI .)
    END             reduce using rule 14 (statement -> PRINT STRING SEMI .)
    RPAREN          reduce using rule 14 (statement -> PRINT STRING SEMI .)


state 82

    (22) statement -> RETURN expression SEMI .

    NAME            reduce using rule 22 (statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 22 (statement -> RETURN expression SEMI .)
    FOR             reduce using rule 22 (statement -> RETURN expression SEMI .)
    COMMENTS        reduce using rule 22 (statement -> RETURN expression SEMI .)
    IF              reduce using rule 22 (statement -> RETURN expression SEMI .)
    PRINT           reduce using rule 22 (statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 22 (statement -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 22 (statement -> RETURN expression SEMI .)
    DEFINE          reduce using rule 22 (statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 22 (statement -> RETURN expression SEMI .)
    LPAREN          reduce using rule 22 (statement -> RETURN expression SEMI .)
    NUMBER          reduce using rule 22 (statement -> RETURN expression SEMI .)
    $end            reduce using rule 22 (statement -> RETURN expression SEMI .)
    TO              reduce using rule 22 (statement -> RETURN expression SEMI .)
    LACC            reduce using rule 22 (statement -> RETURN expression SEMI .)
    END             reduce using rule 22 (statement -> RETURN expression SEMI .)
    RPAREN          reduce using rule 22 (statement -> RETURN expression SEMI .)


state 83

    (23) statement -> FUNCTION NAME LPAREN . RPAREN START bloc END
    (24) statement -> FUNCTION NAME LPAREN . params RPAREN START bloc END
    (15) params -> . NAME
    (16) params -> . NAME COMMA params

    RPAREN          shift and go to state 101
    NAME            shift and go to state 100

    params                         shift and go to state 102

state 84

    (29) statement -> DEFINE NAME EQUALS . expression SEMI
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 103

state 85

    (4) statement -> NAME EQUALS expression SEMI .

    NAME            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FOR             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    IF              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RETURN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    DEFINE          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    $end            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    TO              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LACC            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    END             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)


state 86

    (25) statement -> NAME LPAREN RPAREN SEMI .

    NAME            reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    TO              reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    LACC            reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    END             reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 25 (statement -> NAME LPAREN RPAREN SEMI .)


state 87

    (26) statement -> NAME LPAREN param_call RPAREN . SEMI

    SEMI            shift and go to state 104


state 88

    (28) param_call -> expression COMMA . param_call
    (27) param_call -> . expression
    (28) param_call -> . expression COMMA param_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 51
    param_call                     shift and go to state 105

state 89

    (46) statement -> NAME PLUSEQ NUMBER SEMI .

    NAME            reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    WHILE           reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FOR             reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    IF              reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    PRINT           reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RETURN          reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    DEFINE          reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    MINUS           reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LPAREN          reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    NUMBER          reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    $end            reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TO              reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LACC            reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    END             reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RPAREN          reduce using rule 46 (statement -> NAME PLUSEQ NUMBER SEMI .)


state 90

    (47) statement -> NAME MINEQ NUMBER SEMI .

    NAME            reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    WHILE           reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    FOR             reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    IF              reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    PRINT           reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    RETURN          reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    DEFINE          reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    MINUS           reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    LPAREN          reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    NUMBER          reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    $end            reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    TO              reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    LACC            reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    END             reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)
    RPAREN          reduce using rule 47 (statement -> NAME MINEQ NUMBER SEMI .)


state 91

    (6) statement -> WHILE expression RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    LACC            shift and go to state 106
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    statement                      shift and go to state 17

state 92

    (34) expression -> expression or expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    RACC            reduce using rule 34 (expression -> expression or expression .)
    or              reduce using rule 34 (expression -> expression or expression .)
    INFF            reduce using rule 34 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 34 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 34 (expression -> expression or expression .)
    ET              reduce using rule 34 (expression -> expression or expression .)
    OU              reduce using rule 34 (expression -> expression or expression .)
    RPAREN          reduce using rule 34 (expression -> expression or expression .)
    THEN            reduce using rule 34 (expression -> expression or expression .)
    SEMI            reduce using rule 34 (expression -> expression or expression .)
    NAME            reduce using rule 34 (expression -> expression or expression .)
    WHILE           reduce using rule 34 (expression -> expression or expression .)
    FOR             reduce using rule 34 (expression -> expression or expression .)
    COMMENTS        reduce using rule 34 (expression -> expression or expression .)
    IF              reduce using rule 34 (expression -> expression or expression .)
    PRINT           reduce using rule 34 (expression -> expression or expression .)
    RETURN          reduce using rule 34 (expression -> expression or expression .)
    FUNCTION        reduce using rule 34 (expression -> expression or expression .)
    DEFINE          reduce using rule 34 (expression -> expression or expression .)
    LPAREN          reduce using rule 34 (expression -> expression or expression .)
    NUMBER          reduce using rule 34 (expression -> expression or expression .)
    $end            reduce using rule 34 (expression -> expression or expression .)
    TO              reduce using rule 34 (expression -> expression or expression .)
    LACC            reduce using rule 34 (expression -> expression or expression .)
    END             reduce using rule 34 (expression -> expression or expression .)
    COMMA           reduce using rule 34 (expression -> expression or expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    and             shift and go to state 74
    SUP             shift and go to state 75

  ! PLUS            [ reduce using rule 34 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 34 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 34 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 73 ]
  ! INFF            [ shift and go to state 76 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 93

    (35) expression -> expression and expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    RACC            reduce using rule 35 (expression -> expression and expression .)
    or              reduce using rule 35 (expression -> expression and expression .)
    and             reduce using rule 35 (expression -> expression and expression .)
    INFF            reduce using rule 35 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 35 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 35 (expression -> expression and expression .)
    ET              reduce using rule 35 (expression -> expression and expression .)
    OU              reduce using rule 35 (expression -> expression and expression .)
    RPAREN          reduce using rule 35 (expression -> expression and expression .)
    THEN            reduce using rule 35 (expression -> expression and expression .)
    SEMI            reduce using rule 35 (expression -> expression and expression .)
    NAME            reduce using rule 35 (expression -> expression and expression .)
    WHILE           reduce using rule 35 (expression -> expression and expression .)
    FOR             reduce using rule 35 (expression -> expression and expression .)
    COMMENTS        reduce using rule 35 (expression -> expression and expression .)
    IF              reduce using rule 35 (expression -> expression and expression .)
    PRINT           reduce using rule 35 (expression -> expression and expression .)
    RETURN          reduce using rule 35 (expression -> expression and expression .)
    FUNCTION        reduce using rule 35 (expression -> expression and expression .)
    DEFINE          reduce using rule 35 (expression -> expression and expression .)
    LPAREN          reduce using rule 35 (expression -> expression and expression .)
    NUMBER          reduce using rule 35 (expression -> expression and expression .)
    $end            reduce using rule 35 (expression -> expression and expression .)
    TO              reduce using rule 35 (expression -> expression and expression .)
    LACC            reduce using rule 35 (expression -> expression and expression .)
    END             reduce using rule 35 (expression -> expression and expression .)
    COMMA           reduce using rule 35 (expression -> expression and expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    SUP             shift and go to state 75

  ! PLUS            [ reduce using rule 35 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 35 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 73 ]
  ! and             [ shift and go to state 74 ]
  ! INFF            [ shift and go to state 76 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 94

    (36) expression -> expression SUP expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    RACC            reduce using rule 36 (expression -> expression SUP expression .)
    or              reduce using rule 36 (expression -> expression SUP expression .)
    and             reduce using rule 36 (expression -> expression SUP expression .)
    SUP             reduce using rule 36 (expression -> expression SUP expression .)
    INFF            reduce using rule 36 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 36 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 36 (expression -> expression SUP expression .)
    ET              reduce using rule 36 (expression -> expression SUP expression .)
    OU              reduce using rule 36 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 36 (expression -> expression SUP expression .)
    THEN            reduce using rule 36 (expression -> expression SUP expression .)
    SEMI            reduce using rule 36 (expression -> expression SUP expression .)
    NAME            reduce using rule 36 (expression -> expression SUP expression .)
    WHILE           reduce using rule 36 (expression -> expression SUP expression .)
    FOR             reduce using rule 36 (expression -> expression SUP expression .)
    COMMENTS        reduce using rule 36 (expression -> expression SUP expression .)
    IF              reduce using rule 36 (expression -> expression SUP expression .)
    PRINT           reduce using rule 36 (expression -> expression SUP expression .)
    RETURN          reduce using rule 36 (expression -> expression SUP expression .)
    FUNCTION        reduce using rule 36 (expression -> expression SUP expression .)
    DEFINE          reduce using rule 36 (expression -> expression SUP expression .)
    LPAREN          reduce using rule 36 (expression -> expression SUP expression .)
    NUMBER          reduce using rule 36 (expression -> expression SUP expression .)
    $end            reduce using rule 36 (expression -> expression SUP expression .)
    TO              reduce using rule 36 (expression -> expression SUP expression .)
    LACC            reduce using rule 36 (expression -> expression SUP expression .)
    END             reduce using rule 36 (expression -> expression SUP expression .)
    COMMA           reduce using rule 36 (expression -> expression SUP expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32

  ! PLUS            [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 73 ]
  ! and             [ shift and go to state 74 ]
  ! SUP             [ shift and go to state 75 ]
  ! INFF            [ shift and go to state 76 ]
  ! ISEQUAL         [ shift and go to state 33 ]
  ! NOTEQUAL        [ shift and go to state 34 ]
  ! ET              [ shift and go to state 35 ]
  ! OU              [ shift and go to state 36 ]


state 95

    (37) expression -> expression INFF expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 37 (expression -> expression INFF expression .)
    RPAREN          reduce using rule 37 (expression -> expression INFF expression .)
    THEN            reduce using rule 37 (expression -> expression INFF expression .)
    SEMI            reduce using rule 37 (expression -> expression INFF expression .)
    NAME            reduce using rule 37 (expression -> expression INFF expression .)
    WHILE           reduce using rule 37 (expression -> expression INFF expression .)
    FOR             reduce using rule 37 (expression -> expression INFF expression .)
    COMMENTS        reduce using rule 37 (expression -> expression INFF expression .)
    IF              reduce using rule 37 (expression -> expression INFF expression .)
    PRINT           reduce using rule 37 (expression -> expression INFF expression .)
    RETURN          reduce using rule 37 (expression -> expression INFF expression .)
    FUNCTION        reduce using rule 37 (expression -> expression INFF expression .)
    DEFINE          reduce using rule 37 (expression -> expression INFF expression .)
    LPAREN          reduce using rule 37 (expression -> expression INFF expression .)
    NUMBER          reduce using rule 37 (expression -> expression INFF expression .)
    $end            reduce using rule 37 (expression -> expression INFF expression .)
    TO              reduce using rule 37 (expression -> expression INFF expression .)
    LACC            reduce using rule 37 (expression -> expression INFF expression .)
    END             reduce using rule 37 (expression -> expression INFF expression .)
    COMMA           reduce using rule 37 (expression -> expression INFF expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36

  ! PLUS            [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 37 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 37 (expression -> expression INFF expression .) ]


state 96

    (7) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN RACC bloc LACC

    NUMBER          shift and go to state 107


state 97

    (9) statement -> IF expression THEN statement .

    NAME            reduce using rule 9 (statement -> IF expression THEN statement .)
    WHILE           reduce using rule 9 (statement -> IF expression THEN statement .)
    FOR             reduce using rule 9 (statement -> IF expression THEN statement .)
    COMMENTS        reduce using rule 9 (statement -> IF expression THEN statement .)
    IF              reduce using rule 9 (statement -> IF expression THEN statement .)
    PRINT           reduce using rule 9 (statement -> IF expression THEN statement .)
    RETURN          reduce using rule 9 (statement -> IF expression THEN statement .)
    FUNCTION        reduce using rule 9 (statement -> IF expression THEN statement .)
    DEFINE          reduce using rule 9 (statement -> IF expression THEN statement .)
    MINUS           reduce using rule 9 (statement -> IF expression THEN statement .)
    LPAREN          reduce using rule 9 (statement -> IF expression THEN statement .)
    NUMBER          reduce using rule 9 (statement -> IF expression THEN statement .)
    $end            reduce using rule 9 (statement -> IF expression THEN statement .)
    TO              reduce using rule 9 (statement -> IF expression THEN statement .)
    LACC            reduce using rule 9 (statement -> IF expression THEN statement .)
    END             reduce using rule 9 (statement -> IF expression THEN statement .)
    RPAREN          reduce using rule 9 (statement -> IF expression THEN statement .)


state 98

    (10) statement -> IF expression THEN RACC . bloc LACC
    (11) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    bloc                           shift and go to state 108
    statement                      shift and go to state 3

state 99

    (13) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 109


state 100

    (15) params -> NAME .
    (16) params -> NAME . COMMA params

    RPAREN          reduce using rule 15 (params -> NAME .)
    COMMA           shift and go to state 110


state 101

    (23) statement -> FUNCTION NAME LPAREN RPAREN . START bloc END

    START           shift and go to state 111


state 102

    (24) statement -> FUNCTION NAME LPAREN params . RPAREN START bloc END

    RPAREN          shift and go to state 112


state 103

    (29) statement -> DEFINE NAME EQUALS expression . SEMI
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    SEMI            shift and go to state 113
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 104

    (26) statement -> NAME LPAREN param_call RPAREN SEMI .

    NAME            reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    WHILE           reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FOR             reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    COMMENTS        reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    IF              reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    PRINT           reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RETURN          reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FUNCTION        reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    DEFINE          reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    MINUS           reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LPAREN          reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    NUMBER          reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    $end            reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    TO              reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LACC            reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    END             reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RPAREN          reduce using rule 26 (statement -> NAME LPAREN param_call RPAREN SEMI .)


state 105

    (28) param_call -> expression COMMA param_call .

    RPAREN          reduce using rule 28 (param_call -> expression COMMA param_call .)


state 106

    (6) statement -> WHILE expression RACC bloc LACC .

    NAME            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    WHILE           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FOR             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    COMMENTS        reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    IF              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    PRINT           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    RETURN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    FUNCTION        reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    DEFINE          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    MINUS           reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    LPAREN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    NUMBER          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    $end            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    TO              reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    LACC            reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    END             reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)
    RPAREN          reduce using rule 6 (statement -> WHILE expression RACC bloc LACC .)


state 107

    (7) statement -> FOR LPAREN statement TO NUMBER . COMMA statement RPAREN RACC bloc LACC

    COMMA           shift and go to state 114


state 108

    (10) statement -> IF expression THEN RACC bloc . LACC
    (11) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    LACC            shift and go to state 115
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    statement                      shift and go to state 17

state 109

    (13) statement -> PRINT LPAREN expression RPAREN SEMI .

    NAME            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    COMMENTS        reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FUNCTION        reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    DEFINE          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    NUMBER          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TO              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LACC            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    END             reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 110

    (16) params -> NAME COMMA . params
    (15) params -> . NAME
    (16) params -> . NAME COMMA params

    NAME            shift and go to state 100

    params                         shift and go to state 116

state 111

    (23) statement -> FUNCTION NAME LPAREN RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    bloc                           shift and go to state 117
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 112

    (24) statement -> FUNCTION NAME LPAREN params RPAREN . START bloc END

    START           shift and go to state 118


state 113

    (29) statement -> DEFINE NAME EQUALS expression SEMI .

    NAME            reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FOR             reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    IF              reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    RETURN          reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    DEFINE          reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    $end            reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    TO              reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    LACC            reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    END             reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 29 (statement -> DEFINE NAME EQUALS expression SEMI .)


state 114

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA . statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    statement                      shift and go to state 119
    expression                     shift and go to state 5

state 115

    (10) statement -> IF expression THEN RACC bloc LACC .
    (11) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    NAME            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    WHILE           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    FOR             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    COMMENTS        reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    IF              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    PRINT           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    RETURN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    FUNCTION        reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    DEFINE          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    MINUS           reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    LPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    NUMBER          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    $end            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    TO              reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    LACC            reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    END             reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    RPAREN          reduce using rule 10 (statement -> IF expression THEN RACC bloc LACC .)
    ELSEIF          shift and go to state 120
    ELSE            shift and go to state 121


state 116

    (16) params -> NAME COMMA params .

    RPAREN          reduce using rule 16 (params -> NAME COMMA params .)


state 117

    (23) statement -> FUNCTION NAME LPAREN RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    END             shift and go to state 122
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    statement                      shift and go to state 17
    expression                     shift and go to state 5

state 118

    (24) statement -> FUNCTION NAME LPAREN params RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    bloc                           shift and go to state 123
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 119

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement . RPAREN RACC bloc LACC

    RPAREN          shift and go to state 124


state 120

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 38

    expression                     shift and go to state 125

state 121

    (12) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 126


state 122

    (23) statement -> FUNCTION NAME LPAREN RPAREN START bloc END .

    NAME            reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    WHILE           reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FOR             reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    COMMENTS        reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    IF              reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    PRINT           reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RETURN          reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FUNCTION        reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    DEFINE          reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    MINUS           reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LPAREN          reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    NUMBER          reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    $end            reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TO              reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LACC            reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    END             reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RPAREN          reduce using rule 23 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)


state 123

    (24) statement -> FUNCTION NAME LPAREN params RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    END             shift and go to state 127
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    statement                      shift and go to state 17
    expression                     shift and go to state 5

state 124

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN . RACC bloc LACC

    RACC            shift and go to state 128


state 125

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . or expression
    (35) expression -> expression . and expression
    (36) expression -> expression . SUP expression
    (37) expression -> expression . INFF expression
    (38) expression -> expression . ISEQUAL expression
    (39) expression -> expression . NOTEQUAL expression
    (40) expression -> expression . ET expression
    (41) expression -> expression . OU expression

    THEN            shift and go to state 129
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    or              shift and go to state 73
    and             shift and go to state 74
    SUP             shift and go to state 75
    INFF            shift and go to state 76
    ISEQUAL         shift and go to state 33
    NOTEQUAL        shift and go to state 34
    ET              shift and go to state 35
    OU              shift and go to state 36


state 126

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    bloc                           shift and go to state 130
    statement                      shift and go to state 3

state 127

    (24) statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .

    NAME            reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    WHILE           reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FOR             reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    COMMENTS        reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    IF              reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    PRINT           reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RETURN          reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FUNCTION        reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    DEFINE          reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    MINUS           reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LPAREN          reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    NUMBER          reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    $end            reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    TO              reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LACC            reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    END             reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RPAREN          reduce using rule 24 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)


state 128

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    statement                      shift and go to state 3
    bloc                           shift and go to state 131
    expression                     shift and go to state 5

state 129

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC

    RACC            shift and go to state 132


state 130

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    LACC            shift and go to state 133
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    statement                      shift and go to state 17

state 131

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    LACC            shift and go to state 134
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    statement                      shift and go to state 17
    expression                     shift and go to state 5

state 132

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    bloc                           shift and go to state 135
    statement                      shift and go to state 3

state 133

    (12) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 12 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)


state 134

    (7) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .

    NAME            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    WHILE           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FOR             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    COMMENTS        reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    IF              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    PRINT           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RETURN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FUNCTION        reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    DEFINE          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    MINUS           reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    NUMBER          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    $end            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    TO              reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LACC            reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    END             reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RPAREN          reduce using rule 7 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)


state 135

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    LACC            shift and go to state 136
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    statement                      shift and go to state 17

state 136

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 137


state 137

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 138


state 138

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    bloc                           shift and go to state 139
    statement                      shift and go to state 3

state 139

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . WHILE expression RACC bloc LACC
    (7) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (8) statement -> . COMMENTS
    (9) statement -> . IF expression THEN statement
    (10) statement -> . IF expression THEN RACC bloc LACC
    (11) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (12) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (13) statement -> . PRINT LPAREN expression RPAREN SEMI
    (14) statement -> . PRINT STRING SEMI
    (17) statement -> . expression INFF statement
    (18) statement -> . expression SUP statement
    (19) statement -> . expression and statement
    (20) statement -> . expression or statement
    (21) statement -> . expression SEMI
    (22) statement -> . RETURN expression SEMI
    (23) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (24) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (25) statement -> . NAME LPAREN RPAREN SEMI
    (26) statement -> . NAME LPAREN param_call RPAREN SEMI
    (29) statement -> . DEFINE NAME EQUALS expression SEMI
    (42) statement -> . NAME INCR SEMI
    (43) statement -> . NAME DECR SEMI
    (44) statement -> . NAME INCR
    (45) statement -> . NAME DECR
    (46) statement -> . NAME PLUSEQ NUMBER SEMI
    (47) statement -> . NAME MINEQ NUMBER SEMI
    (48) statement -> . NAME PLUSEQ NUMBER
    (49) statement -> . NAME MINEQ NUMBER
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression or expression
    (35) expression -> . expression and expression
    (36) expression -> . expression SUP expression
    (37) expression -> . expression INFF expression
    (38) expression -> . expression ISEQUAL expression
    (39) expression -> . expression NOTEQUAL expression
    (40) expression -> . expression ET expression
    (41) expression -> . expression OU expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . NAME

    LACC            shift and go to state 140
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    COMMENTS        shift and go to state 10
    IF              shift and go to state 11
    PRINT           shift and go to state 12
    RETURN          shift and go to state 13
    FUNCTION        shift and go to state 14
    DEFINE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    expression                     shift and go to state 5
    statement                      shift and go to state 17

state 140

    (11) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 11 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INFF in state 56 resolved as shift
WARNING: shift/reduce conflict for SUP in state 56 resolved as shift
WARNING: shift/reduce conflict for and in state 56 resolved as shift
WARNING: shift/reduce conflict for or in state 56 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 56 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 56 resolved as shift
WARNING: shift/reduce conflict for ET in state 56 resolved as shift
WARNING: shift/reduce conflict for OU in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for or in state 68 resolved as shift
WARNING: shift/reduce conflict for and in state 68 resolved as shift
WARNING: shift/reduce conflict for SUP in state 68 resolved as shift
WARNING: shift/reduce conflict for INFF in state 68 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for ET in state 68 resolved as shift
WARNING: shift/reduce conflict for OU in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for or in state 69 resolved as shift
WARNING: shift/reduce conflict for and in state 69 resolved as shift
WARNING: shift/reduce conflict for SUP in state 69 resolved as shift
WARNING: shift/reduce conflict for INFF in state 69 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for ET in state 69 resolved as shift
WARNING: shift/reduce conflict for OU in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for or in state 70 resolved as shift
WARNING: shift/reduce conflict for and in state 70 resolved as shift
WARNING: shift/reduce conflict for SUP in state 70 resolved as shift
WARNING: shift/reduce conflict for INFF in state 70 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for ET in state 70 resolved as shift
WARNING: shift/reduce conflict for OU in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for or in state 71 resolved as shift
WARNING: shift/reduce conflict for and in state 71 resolved as shift
WARNING: shift/reduce conflict for SUP in state 71 resolved as shift
WARNING: shift/reduce conflict for INFF in state 71 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for ET in state 71 resolved as shift
WARNING: shift/reduce conflict for OU in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for or in state 95 resolved as shift
WARNING: shift/reduce conflict for and in state 95 resolved as shift
WARNING: shift/reduce conflict for SUP in state 95 resolved as shift
WARNING: shift/reduce conflict for INFF in state 95 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for ET in state 95 resolved as shift
WARNING: shift/reduce conflict for OU in state 95 resolved as shift
